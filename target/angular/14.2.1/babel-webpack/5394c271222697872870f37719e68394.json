{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./password.service\";\nimport * as i2 from \"app/core/auth/account.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./password-strength-bar/password-strength-bar.component\";\n\nfunction PasswordComponent_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Password changed!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"strong\");\n    i0.ɵɵtext(2, \"An error has occurred!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" The password could not be changed.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"The password and its confirmation do not match!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_23_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_23_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.passwordForm.get(\"currentPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\n\nfunction PasswordComponent_div_4_div_33_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_33_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your password is required to be at least 4 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_33_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your password cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_33_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_33_small_4_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_33_small_6_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\n\nfunction PasswordComponent_div_4_div_45_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password is required.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_45_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password is required to be at least 4 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_45_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \"\\n              Your confirmation password cannot be longer than 50 characters.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_45_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_45_small_4_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_45_small_6_Template, 2, 0, \"small\", 18);\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\n\nfunction PasswordComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3, \"\\n        Password for [\");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"]\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\\n      \");\n    i0.ɵɵtemplate(8, PasswordComponent_div_4_div_8_Template, 5, 0, \"div\", 3);\n    i0.ɵɵtext(9, \"\\n\\n      \");\n    i0.ɵɵtemplate(10, PasswordComponent_div_4_div_10_Template, 4, 0, \"div\", 4);\n    i0.ɵɵtext(11, \"\\n\\n      \");\n    i0.ɵɵtemplate(12, PasswordComponent_div_4_div_12_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtext(13, \"\\n\\n      \");\n    i0.ɵɵelementStart(14, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function PasswordComponent_div_4_Template_form_ngSubmit_14_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.changePassword());\n    });\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementStart(16, \"div\", 6);\n    i0.ɵɵtext(17, \"\\n          \");\n    i0.ɵɵelementStart(18, \"label\", 7);\n    i0.ɵɵtext(19, \"Current password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n          \");\n    i0.ɵɵelement(21, \"input\", 8);\n    i0.ɵɵtext(22, \"\\n\\n          \");\n    i0.ɵɵtemplate(23, PasswordComponent_div_4_div_23_Template, 4, 1, \"div\", 9);\n    i0.ɵɵtext(24, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25, \"\\n\\n        \");\n    i0.ɵɵelementStart(26, \"div\", 6);\n    i0.ɵɵtext(27, \"\\n          \");\n    i0.ɵɵelementStart(28, \"label\", 10);\n    i0.ɵɵtext(29, \"New password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \"\\n          \");\n    i0.ɵɵelement(31, \"input\", 11);\n    i0.ɵɵtext(32, \"\\n\\n          \");\n    i0.ɵɵtemplate(33, PasswordComponent_div_4_div_33_Template, 8, 3, \"div\", 9);\n    i0.ɵɵtext(34, \"\\n\\n          \");\n    i0.ɵɵelement(35, \"jhi-password-strength-bar\", 12);\n    i0.ɵɵtext(36, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\n\\n        \");\n    i0.ɵɵelementStart(38, \"div\", 6);\n    i0.ɵɵtext(39, \"\\n          \");\n    i0.ɵɵelementStart(40, \"label\", 13);\n    i0.ɵɵtext(41, \"New password confirmation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \"\\n          \");\n    i0.ɵɵelement(43, \"input\", 14);\n    i0.ɵɵtext(44, \"\\n\\n          \");\n    i0.ɵɵtemplate(45, PasswordComponent_div_4_div_45_Template, 8, 3, \"div\", 9);\n    i0.ɵɵtext(46, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(47, \"\\n\\n        \");\n    i0.ɵɵelementStart(48, \"button\", 15);\n    i0.ɵɵtext(49, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(account_r1.login);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.success);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.doNotMatch);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.passwordForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"currentPassword\").invalid && (ctx_r0.passwordForm.get(\"currentPassword\").dirty || ctx_r0.passwordForm.get(\"currentPassword\").touched));\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"newPassword\").invalid && (ctx_r0.passwordForm.get(\"newPassword\").dirty || ctx_r0.passwordForm.get(\"newPassword\").touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"passwordToCheck\", ctx_r0.passwordForm.get(\"newPassword\").value);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"confirmPassword\").invalid && (ctx_r0.passwordForm.get(\"confirmPassword\").dirty || ctx_r0.passwordForm.get(\"confirmPassword\").touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.passwordForm.invalid);\n  }\n}\n\nexport class PasswordComponent {\n  constructor(passwordService, accountService) {\n    this.passwordService = passwordService;\n    this.accountService = accountService;\n    this.doNotMatch = false;\n    this.error = false;\n    this.success = false;\n    this.passwordForm = new FormGroup({\n      currentPassword: new FormControl('', {\n        nonNullable: true,\n        validators: Validators.required\n      }),\n      newPassword: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)]\n      }),\n      confirmPassword: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.account$ = this.accountService.identity();\n  }\n\n  changePassword() {\n    this.error = false;\n    this.success = false;\n    this.doNotMatch = false;\n    const {\n      newPassword,\n      confirmPassword,\n      currentPassword\n    } = this.passwordForm.getRawValue();\n\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordService.save(newPassword, currentPassword).subscribe({\n        next: () => this.success = true,\n        error: () => this.error = true\n      });\n    }\n  }\n\n}\n\nPasswordComponent.ɵfac = function PasswordComponent_Factory(t) {\n  return new (t || PasswordComponent)(i0.ɵɵdirectiveInject(i1.PasswordService), i0.ɵɵdirectiveInject(i2.AccountService));\n};\n\nPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordComponent,\n  selectors: [[\"jhi-password\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"d-flex\", \"justify-content-center\"], [\"class\", \"col-md-8\", 4, \"ngIf\"], [1, \"col-md-8\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"name\", \"form\", \"role\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"currentPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"currentPassword\", \"name\", \"currentPassword\", \"placeholder\", \"Current password\", \"formControlName\", \"currentPassword\", \"data-cy\", \"currentPassword\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"newPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"placeholder\", \"New password\", \"formControlName\", \"newPassword\", \"data-cy\", \"newPassword\", 1, \"form-control\"], [3, \"passwordToCheck\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"placeholder\", \"Confirm the new password\", \"formControlName\", \"confirmPassword\", \"data-cy\", \"confirmPassword\", 1, \"form-control\"], [\"type\", \"submit\", \"data-cy\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [1, \"form-text\", \"text-danger\"]],\n  template: function PasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵtemplate(4, PasswordComponent_div_4_Template, 52, 10, \"div\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 1, ctx.account$));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i4.NgIf, i3.FormGroupDirective, i3.FormControlName, i5.PasswordStrengthBarComponent, i4.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","PasswordComponent","constructor","passwordService","accountService","currentPassword","nonNullable","validators","required","newPassword","minLength","maxLength","confirmPassword","ngOnInit","account$","identity","changePassword","error","success","doNotMatch","passwordForm","getRawValue","save","subscribe","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\22883\\Desktop\\Team Project\\Git\\src\\main\\webapp\\app\\account\\password\\password.component.ts","C:\\Users\\22883\\Desktop\\Team Project\\Git\\src\\main\\webapp\\app\\account\\password\\password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { PasswordService } from './password.service';\r\n\r\n@Component({\r\n  selector: 'jhi-password',\r\n  templateUrl: './password.component.html',\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n  doNotMatch = false;\r\n  error = false;\r\n  success = false;\r\n  account$?: Observable<Account | null>;\r\n  passwordForm = new FormGroup({\r\n    currentPassword: new FormControl('', { nonNullable: true, validators: Validators.required }),\r\n    newPassword: new FormControl('', {\r\n      nonNullable: true,\r\n      validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)],\r\n    }),\r\n    confirmPassword: new FormControl('', {\r\n      nonNullable: true,\r\n      validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)],\r\n    }),\r\n  });\r\n\r\n  constructor(private passwordService: PasswordService, private accountService: AccountService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.account$ = this.accountService.identity();\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.error = false;\r\n    this.success = false;\r\n    this.doNotMatch = false;\r\n\r\n    const { newPassword, confirmPassword, currentPassword } = this.passwordForm.getRawValue();\r\n    if (newPassword !== confirmPassword) {\r\n      this.doNotMatch = true;\r\n    } else {\r\n      this.passwordService.save(newPassword, currentPassword).subscribe({\r\n        next: () => (this.success = true),\r\n        error: () => (this.error = true),\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"d-flex justify-content-center\">\r\n    <div class=\"col-md-8\" *ngIf=\"account$ | async as account\">\r\n      <h2>\r\n        Password for [<strong>{{ account.login }}</strong\r\n        >]\r\n      </h2>\r\n\r\n      <div class=\"alert alert-success\" *ngIf=\"success\">\r\n        <strong>Password changed!</strong>\r\n      </div>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"error\"><strong>An error has occurred!</strong> The password could not be changed.</div>\r\n\r\n      <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\">The password and its confirmation do not match!</div>\r\n\r\n      <form name=\"form\" role=\"form\" (ngSubmit)=\"changePassword()\" [formGroup]=\"passwordForm\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\" for=\"currentPassword\">Current password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"currentPassword\"\r\n            name=\"currentPassword\"\r\n            placeholder=\"Current password\"\r\n            formControlName=\"currentPassword\"\r\n            data-cy=\"currentPassword\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('currentPassword')!.invalid &&\r\n              (passwordForm.get('currentPassword')!.dirty || passwordForm.get('currentPassword')!.touched)\r\n            \"\r\n          >\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('currentPassword')?.errors?.required\">\r\n              Your password is required.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\" for=\"newPassword\">New password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"newPassword\"\r\n            name=\"newPassword\"\r\n            placeholder=\"New password\"\r\n            formControlName=\"newPassword\"\r\n            data-cy=\"newPassword\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('newPassword')!.invalid &&\r\n              (passwordForm.get('newPassword')!.dirty || passwordForm.get('newPassword')!.touched)\r\n            \"\r\n          >\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('newPassword')?.errors?.required\">\r\n              Your password is required.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('newPassword')?.errors?.minlength\">\r\n              Your password is required to be at least 4 characters.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('newPassword')?.errors?.maxlength\">\r\n              Your password cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n\r\n          <jhi-password-strength-bar [passwordToCheck]=\"passwordForm.get('newPassword')!.value\"></jhi-password-strength-bar>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\" for=\"confirmPassword\">New password confirmation</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm the new password\"\r\n            formControlName=\"confirmPassword\"\r\n            data-cy=\"confirmPassword\"\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"\r\n              passwordForm.get('confirmPassword')!.invalid &&\r\n              (passwordForm.get('confirmPassword')!.dirty || passwordForm.get('confirmPassword')!.touched)\r\n            \"\r\n          >\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('confirmPassword')?.errors?.required\">\r\n              Your confirmation password is required.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('confirmPassword')?.errors?.minlength\">\r\n              Your confirmation password is required to be at least 4 characters.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"passwordForm.get('confirmPassword')?.errors?.maxlength\">\r\n              Your confirmation password cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" [disabled]=\"passwordForm.invalid\" class=\"btn btn-primary\" data-cy=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}