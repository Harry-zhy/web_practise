{"version":3,"file":"src_main_webapp_app_entities_itinerary_itinerary_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/itinerary/delete/itinerary-delete-dialog.component.ts","./src/main/webapp/app/entities/itinerary/delete/itinerary-delete-dialog.component.html","./src/main/webapp/app/entities/itinerary/detail/itinerary-detail.component.ts","./src/main/webapp/app/entities/itinerary/detail/itinerary-detail.component.html","./src/main/webapp/app/entities/itinerary/itinerary.module.ts","./src/main/webapp/app/entities/itinerary/list/itinerary.component.ts","./src/main/webapp/app/entities/itinerary/list/itinerary.component.html","./src/main/webapp/app/entities/itinerary/route/itinerary-routing-resolve.service.ts","./src/main/webapp/app/entities/itinerary/route/itinerary-routing.module.ts","./src/main/webapp/app/entities/itinerary/update/itinerary-form.service.ts","./src/main/webapp/app/entities/itinerary/update/itinerary-update.component.ts","./src/main/webapp/app/entities/itinerary/update/itinerary-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItinerary } from '../itinerary.model';\r\nimport { ItineraryService } from '../service/itinerary.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './itinerary-delete-dialog.component.html',\r\n})\r\nexport class ItineraryDeleteDialogComponent {\r\n  itinerary?: IItinerary;\r\n\r\n  constructor(protected itineraryService: ItineraryService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.itineraryService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"itinerary\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(itinerary.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"itineraryDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-itinerary-heading\">Are you sure you want to delete Itinerary {{ itinerary.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-itinerary\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IItinerary } from '../itinerary.model';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-detail',\r\n  templateUrl: './itinerary-detail.component.html',\r\n})\r\nexport class ItineraryDetailComponent implements OnInit {\r\n  itinerary: IItinerary | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itinerary }) => {\r\n      this.itinerary = itinerary;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"itinerary\">\r\n      <h2 data-cy=\"itineraryDetailsHeading\"><span>Itinerary</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ itinerary.id }}</span>\r\n        </dd>\r\n        <dt><span>Start Time</span></dt>\r\n        <dd>\r\n          <span>{{ itinerary.startTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>End Time</span></dt>\r\n        <dd>\r\n          <span>{{ itinerary.endTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>Location</span></dt>\r\n        <dd>\r\n          <span>{{ itinerary.location }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/itinerary', itinerary.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ItineraryComponent } from './list/itinerary.component';\r\nimport { ItineraryDetailComponent } from './detail/itinerary-detail.component';\r\nimport { ItineraryUpdateComponent } from './update/itinerary-update.component';\r\nimport { ItineraryDeleteDialogComponent } from './delete/itinerary-delete-dialog.component';\r\nimport { ItineraryRoutingModule } from './route/itinerary-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ItineraryRoutingModule],\r\n  declarations: [ItineraryComponent, ItineraryDetailComponent, ItineraryUpdateComponent, ItineraryDeleteDialogComponent],\r\n})\r\nexport class ItineraryModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItinerary } from '../itinerary.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ItineraryService } from '../service/itinerary.service';\r\nimport { ItineraryDeleteDialogComponent } from '../delete/itinerary-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary',\r\n  templateUrl: './itinerary.component.html',\r\n})\r\nexport class ItineraryComponent implements OnInit {\r\n  itineraries?: IItinerary[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected itineraryService: ItineraryService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IItinerary): number => this.itineraryService.getItineraryIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(itinerary: IItinerary): void {\r\n    const modalRef = this.modalService.open(ItineraryDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.itinerary = itinerary;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.itineraries = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IItinerary[]): IItinerary[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IItinerary[] | null): IItinerary[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.itineraryService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ItineraryHeading\">\r\n    <span>Itineraries</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-itinerary\"\r\n        [routerLink]=\"['/itinerary/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Itinerary </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"itineraries?.length === 0\">\r\n    <span>No Itineraries found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"itineraries && itineraries.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"startTime\">\r\n            <div class=\"d-flex\">\r\n              <span>Start Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"endTime\">\r\n            <div class=\"d-flex\">\r\n              <span>End Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"location\">\r\n            <div class=\"d-flex\">\r\n              <span>Location</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let itinerary of itineraries; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/itinerary', itinerary.id, 'view']\">{{ itinerary.id }}</a>\r\n          </td>\r\n          <td>{{ itinerary.startTime | formatMediumDatetime }}</td>\r\n          <td>{{ itinerary.endTime | formatMediumDatetime }}</td>\r\n          <td>{{ itinerary.location }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary', itinerary.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary', itinerary.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(itinerary)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IItinerary } from '../itinerary.model';\r\nimport { ItineraryService } from '../service/itinerary.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryRoutingResolveService implements Resolve<IItinerary | null> {\r\n  constructor(protected service: ItineraryService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IItinerary | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((itinerary: HttpResponse<IItinerary>) => {\r\n          if (itinerary.body) {\r\n            return of(itinerary.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ItineraryComponent } from '../list/itinerary.component';\r\nimport { ItineraryDetailComponent } from '../detail/itinerary-detail.component';\r\nimport { ItineraryUpdateComponent } from '../update/itinerary-update.component';\r\nimport { ItineraryRoutingResolveService } from './itinerary-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst itineraryRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ItineraryComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ItineraryDetailComponent,\r\n    resolve: {\r\n      itinerary: ItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ItineraryUpdateComponent,\r\n    resolve: {\r\n      itinerary: ItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ItineraryUpdateComponent,\r\n    resolve: {\r\n      itinerary: ItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(itineraryRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ItineraryRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { IItinerary, NewItinerary } from '../itinerary.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IItinerary for edit and NewItineraryFormGroupInput for create.\r\n */\r\ntype ItineraryFormGroupInput = IItinerary | PartialWithRequiredKeyOf<NewItinerary>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends IItinerary | NewItinerary> = Omit<T, 'startTime' | 'endTime'> & {\r\n  startTime?: string | null;\r\n  endTime?: string | null;\r\n};\r\n\r\ntype ItineraryFormRawValue = FormValueOf<IItinerary>;\r\n\r\ntype NewItineraryFormRawValue = FormValueOf<NewItinerary>;\r\n\r\ntype ItineraryFormDefaults = Pick<NewItinerary, 'id' | 'startTime' | 'endTime'>;\r\n\r\ntype ItineraryFormGroupContent = {\r\n  id: FormControl<ItineraryFormRawValue['id'] | NewItinerary['id']>;\r\n  startTime: FormControl<ItineraryFormRawValue['startTime']>;\r\n  endTime: FormControl<ItineraryFormRawValue['endTime']>;\r\n  location: FormControl<ItineraryFormRawValue['location']>;\r\n};\r\n\r\nexport type ItineraryFormGroup = FormGroup<ItineraryFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryFormService {\r\n  createItineraryFormGroup(itinerary: ItineraryFormGroupInput = { id: null }): ItineraryFormGroup {\r\n    const itineraryRawValue = this.convertItineraryToItineraryRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itinerary,\r\n    });\r\n    return new FormGroup<ItineraryFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: itineraryRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      startTime: new FormControl(itineraryRawValue.startTime),\r\n      endTime: new FormControl(itineraryRawValue.endTime),\r\n      location: new FormControl(itineraryRawValue.location),\r\n    });\r\n  }\r\n\r\n  getItinerary(form: ItineraryFormGroup): IItinerary | NewItinerary {\r\n    return this.convertItineraryRawValueToItinerary(form.getRawValue() as ItineraryFormRawValue | NewItineraryFormRawValue);\r\n  }\r\n\r\n  resetForm(form: ItineraryFormGroup, itinerary: ItineraryFormGroupInput): void {\r\n    const itineraryRawValue = this.convertItineraryToItineraryRawValue({ ...this.getFormDefaults(), ...itinerary });\r\n    form.reset(\r\n      {\r\n        ...itineraryRawValue,\r\n        id: { value: itineraryRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ItineraryFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      startTime: currentTime,\r\n      endTime: currentTime,\r\n    };\r\n  }\r\n\r\n  private convertItineraryRawValueToItinerary(rawItinerary: ItineraryFormRawValue | NewItineraryFormRawValue): IItinerary | NewItinerary {\r\n    return {\r\n      ...rawItinerary,\r\n      startTime: dayjs(rawItinerary.startTime, DATE_TIME_FORMAT),\r\n      endTime: dayjs(rawItinerary.endTime, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertItineraryToItineraryRawValue(\r\n    itinerary: IItinerary | (Partial<NewItinerary> & ItineraryFormDefaults)\r\n  ): ItineraryFormRawValue | PartialWithRequiredKeyOf<NewItineraryFormRawValue> {\r\n    return {\r\n      ...itinerary,\r\n      startTime: itinerary.startTime ? itinerary.startTime.format(DATE_TIME_FORMAT) : undefined,\r\n      endTime: itinerary.endTime ? itinerary.endTime.format(DATE_TIME_FORMAT) : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ItineraryFormService, ItineraryFormGroup } from './itinerary-form.service';\r\nimport { IItinerary } from '../itinerary.model';\r\nimport { ItineraryService } from '../service/itinerary.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-update',\r\n  templateUrl: './itinerary-update.component.html',\r\n})\r\nexport class ItineraryUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  itinerary: IItinerary | null = null;\r\n\r\n  editForm: ItineraryFormGroup = this.itineraryFormService.createItineraryFormGroup();\r\n\r\n  constructor(\r\n    protected itineraryService: ItineraryService,\r\n    protected itineraryFormService: ItineraryFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itinerary }) => {\r\n      this.itinerary = itinerary;\r\n      if (itinerary) {\r\n        this.updateForm(itinerary);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const itinerary = this.itineraryFormService.getItinerary(this.editForm);\r\n    if (itinerary.id !== null) {\r\n      this.subscribeToSaveResponse(this.itineraryService.update(itinerary));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.itineraryService.create(itinerary));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IItinerary>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(itinerary: IItinerary): void {\r\n    this.itinerary = itinerary;\r\n    this.itineraryFormService.resetForm(this.editForm, itinerary);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-itinerary-heading\" data-cy=\"ItineraryCreateUpdateHeading\">Create or edit a Itinerary</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_startTime\">Start Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_startTime\"\r\n              data-cy=\"startTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"startTime\"\r\n              formControlName=\"startTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_endTime\">End Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_endTime\"\r\n              data-cy=\"endTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"endTime\"\r\n              formControlName=\"endTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_location\">Location</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"location\" id=\"field_location\" data-cy=\"location\" formControlName=\"location\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}