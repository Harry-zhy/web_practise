{"version":3,"file":"src_main_webapp_app_entities_question_question_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/question/delete/question-delete-dialog.component.ts","./src/main/webapp/app/entities/question/delete/question-delete-dialog.component.html","./src/main/webapp/app/entities/question/detail/question-detail.component.ts","./src/main/webapp/app/entities/question/detail/question-detail.component.html","./src/main/webapp/app/entities/question/list/question.component.ts","./src/main/webapp/app/entities/question/list/question.component.html","./src/main/webapp/app/entities/question/question.module.ts","./src/main/webapp/app/entities/question/route/question-routing-resolve.service.ts","./src/main/webapp/app/entities/question/route/question-routing.module.ts","./src/main/webapp/app/entities/question/update/question-form.service.ts","./src/main/webapp/app/entities/question/update/question-update.component.ts","./src/main/webapp/app/entities/question/update/question-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IQuestion } from '../question.model';\r\nimport { QuestionService } from '../service/question.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './question-delete-dialog.component.html',\r\n})\r\nexport class QuestionDeleteDialogComponent {\r\n  question?: IQuestion;\r\n\r\n  constructor(protected questionService: QuestionService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.questionService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"question\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(question.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"questionDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-question-heading\">Are you sure you want to delete Question {{ question.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-question\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IQuestion } from '../question.model';\r\n\r\n@Component({\r\n  selector: 'jhi-question-detail',\r\n  templateUrl: './question-detail.component.html',\r\n})\r\nexport class QuestionDetailComponent implements OnInit {\r\n  question: IQuestion | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ question }) => {\r\n      this.question = question;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"question\">\r\n      <h2 data-cy=\"questionDetailsHeading\"><span>Question</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ question.id }}</span>\r\n        </dd>\r\n        <dt><span>Question</span></dt>\r\n        <dd>\r\n          <span>{{ question.question }}</span>\r\n        </dd>\r\n        <dt><span>Ques Type</span></dt>\r\n        <dd>\r\n          <span>{{ question.quesType }}</span>\r\n        </dd>\r\n        <dt><span>Questionnaire</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"question.questionnaire\">\r\n            <a [routerLink]=\"['/questionnaire', question.questionnaire.id, 'view']\">{{ question.questionnaire.id }}</a>\r\n          </div>\r\n        </dd>\r\n        <dt><span>Sub Ques</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"question.subQues\">\r\n            <a [routerLink]=\"['/question', question.subQues.id, 'view']\">{{ question.subQues.id }}</a>\r\n          </div>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/question', question.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IQuestion } from '../question.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, QuestionService } from '../service/question.service';\r\nimport { QuestionDeleteDialogComponent } from '../delete/question-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-question',\r\n  templateUrl: './question.component.html',\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  questions?: IQuestion[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected questionService: QuestionService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IQuestion): number => this.questionService.getQuestionIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(question: IQuestion): void {\r\n    const modalRef = this.modalService.open(QuestionDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.question = question;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.questions = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IQuestion[]): IQuestion[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IQuestion[] | null): IQuestion[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.questionService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"QuestionHeading\">\r\n    <span>Questions</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-question\"\r\n        [routerLink]=\"['/question/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Question </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"questions?.length === 0\">\r\n    <span>No Questions found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"questions && questions.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"question\">\r\n            <div class=\"d-flex\">\r\n              <span>Question</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"quesType\">\r\n            <div class=\"d-flex\">\r\n              <span>Ques Type</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"questionnaire.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Questionnaire</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"subQues.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Sub Ques</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let question of questions; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/question', question.id, 'view']\">{{ question.id }}</a>\r\n          </td>\r\n          <td>{{ question.question }}</td>\r\n          <td>{{ question.quesType }}</td>\r\n          <td>\r\n            <div *ngIf=\"question.questionnaire\">\r\n              <a [routerLink]=\"['/questionnaire', question.questionnaire.id, 'view']\">{{ question.questionnaire.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div *ngIf=\"question.subQues\">\r\n              <a [routerLink]=\"['/question', question.subQues.id, 'view']\">{{ question.subQues.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/question', question.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/question', question.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(question)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { QuestionComponent } from './list/question.component';\r\nimport { QuestionDetailComponent } from './detail/question-detail.component';\r\nimport { QuestionUpdateComponent } from './update/question-update.component';\r\nimport { QuestionDeleteDialogComponent } from './delete/question-delete-dialog.component';\r\nimport { QuestionRoutingModule } from './route/question-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, QuestionRoutingModule],\r\n  declarations: [QuestionComponent, QuestionDetailComponent, QuestionUpdateComponent, QuestionDeleteDialogComponent],\r\n})\r\nexport class QuestionModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IQuestion } from '../question.model';\r\nimport { QuestionService } from '../service/question.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuestionRoutingResolveService implements Resolve<IQuestion | null> {\r\n  constructor(protected service: QuestionService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IQuestion | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((question: HttpResponse<IQuestion>) => {\r\n          if (question.body) {\r\n            return of(question.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { QuestionComponent } from '../list/question.component';\r\nimport { QuestionDetailComponent } from '../detail/question-detail.component';\r\nimport { QuestionUpdateComponent } from '../update/question-update.component';\r\nimport { QuestionRoutingResolveService } from './question-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst questionRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuestionComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: QuestionDetailComponent,\r\n    resolve: {\r\n      question: QuestionRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: QuestionUpdateComponent,\r\n    resolve: {\r\n      question: QuestionRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: QuestionUpdateComponent,\r\n    resolve: {\r\n      question: QuestionRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(questionRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QuestionRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { IQuestion, NewQuestion } from '../question.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IQuestion for edit and NewQuestionFormGroupInput for create.\r\n */\r\ntype QuestionFormGroupInput = IQuestion | PartialWithRequiredKeyOf<NewQuestion>;\r\n\r\ntype QuestionFormDefaults = Pick<NewQuestion, 'id'>;\r\n\r\ntype QuestionFormGroupContent = {\r\n  id: FormControl<IQuestion['id'] | NewQuestion['id']>;\r\n  question: FormControl<IQuestion['question']>;\r\n  quesType: FormControl<IQuestion['quesType']>;\r\n  questionnaire: FormControl<IQuestion['questionnaire']>;\r\n  subQues: FormControl<IQuestion['subQues']>;\r\n};\r\n\r\nexport type QuestionFormGroup = FormGroup<QuestionFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuestionFormService {\r\n  createQuestionFormGroup(question: QuestionFormGroupInput = { id: null }): QuestionFormGroup {\r\n    const questionRawValue = {\r\n      ...this.getFormDefaults(),\r\n      ...question,\r\n    };\r\n    return new FormGroup<QuestionFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: questionRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      question: new FormControl(questionRawValue.question, {\r\n        validators: [Validators.required],\r\n      }),\r\n      quesType: new FormControl(questionRawValue.quesType, {\r\n        validators: [Validators.required],\r\n      }),\r\n      questionnaire: new FormControl(questionRawValue.questionnaire),\r\n      subQues: new FormControl(questionRawValue.subQues),\r\n    });\r\n  }\r\n\r\n  getQuestion(form: QuestionFormGroup): IQuestion | NewQuestion {\r\n    return form.getRawValue() as IQuestion | NewQuestion;\r\n  }\r\n\r\n  resetForm(form: QuestionFormGroup, question: QuestionFormGroupInput): void {\r\n    const questionRawValue = { ...this.getFormDefaults(), ...question };\r\n    form.reset(\r\n      {\r\n        ...questionRawValue,\r\n        id: { value: questionRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): QuestionFormDefaults {\r\n    return {\r\n      id: null,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { QuestionFormService, QuestionFormGroup } from './question-form.service';\r\nimport { IQuestion } from '../question.model';\r\nimport { QuestionService } from '../service/question.service';\r\nimport { IQuestionnaire } from 'app/entities/questionnaire/questionnaire.model';\r\nimport { QuestionnaireService } from 'app/entities/questionnaire/service/questionnaire.service';\r\nimport { QuesType } from 'app/entities/enumerations/ques-type.model';\r\n\r\n@Component({\r\n  selector: 'jhi-question-update',\r\n  templateUrl: './question-update.component.html',\r\n})\r\nexport class QuestionUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  question: IQuestion | null = null;\r\n  quesTypeValues = Object.keys(QuesType);\r\n\r\n  questionsSharedCollection: IQuestion[] = [];\r\n  questionnairesSharedCollection: IQuestionnaire[] = [];\r\n\r\n  editForm: QuestionFormGroup = this.questionFormService.createQuestionFormGroup();\r\n\r\n  constructor(\r\n    protected questionService: QuestionService,\r\n    protected questionFormService: QuestionFormService,\r\n    protected questionnaireService: QuestionnaireService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  compareQuestion = (o1: IQuestion | null, o2: IQuestion | null): boolean => this.questionService.compareQuestion(o1, o2);\r\n\r\n  compareQuestionnaire = (o1: IQuestionnaire | null, o2: IQuestionnaire | null): boolean =>\r\n    this.questionnaireService.compareQuestionnaire(o1, o2);\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ question }) => {\r\n      this.question = question;\r\n      if (question) {\r\n        this.updateForm(question);\r\n      }\r\n\r\n      this.loadRelationshipsOptions();\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const question = this.questionFormService.getQuestion(this.editForm);\r\n    if (question.id !== null) {\r\n      this.subscribeToSaveResponse(this.questionService.update(question));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.questionService.create(question));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IQuestion>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(question: IQuestion): void {\r\n    this.question = question;\r\n    this.questionFormService.resetForm(this.editForm, question);\r\n\r\n    this.questionsSharedCollection = this.questionService.addQuestionToCollectionIfMissing<IQuestion>(\r\n      this.questionsSharedCollection,\r\n      question.subQues\r\n    );\r\n    this.questionnairesSharedCollection = this.questionnaireService.addQuestionnaireToCollectionIfMissing<IQuestionnaire>(\r\n      this.questionnairesSharedCollection,\r\n      question.questionnaire\r\n    );\r\n  }\r\n\r\n  protected loadRelationshipsOptions(): void {\r\n    this.questionService\r\n      .query()\r\n      .pipe(map((res: HttpResponse<IQuestion[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((questions: IQuestion[]) => this.questionService.addQuestionToCollectionIfMissing<IQuestion>(questions, this.question?.subQues))\r\n      )\r\n      .subscribe((questions: IQuestion[]) => (this.questionsSharedCollection = questions));\r\n\r\n    this.questionnaireService\r\n      .query()\r\n      .pipe(map((res: HttpResponse<IQuestionnaire[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((questionnaires: IQuestionnaire[]) =>\r\n          this.questionnaireService.addQuestionnaireToCollectionIfMissing<IQuestionnaire>(questionnaires, this.question?.questionnaire)\r\n        )\r\n      )\r\n      .subscribe((questionnaires: IQuestionnaire[]) => (this.questionnairesSharedCollection = questionnaires));\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-question-heading\" data-cy=\"QuestionCreateUpdateHeading\">Create or edit a Question</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_question\">Question</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"question\" id=\"field_question\" data-cy=\"question\" formControlName=\"question\" />\r\n          <div *ngIf=\"editForm.get('question')!.invalid && (editForm.get('question')!.dirty || editForm.get('question')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('question')?.errors?.required\"> This field is required. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_quesType\">Ques Type</label>\r\n          <select class=\"form-control\" name=\"quesType\" formControlName=\"quesType\" id=\"field_quesType\" data-cy=\"quesType\">\r\n            <option [ngValue]=\"null\"></option>\r\n            <option *ngFor=\"let quesType of quesTypeValues\" [value]=\"quesType\">quesType</option>\r\n          </select>\r\n          <div *ngIf=\"editForm.get('quesType')!.invalid && (editForm.get('quesType')!.dirty || editForm.get('quesType')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('quesType')?.errors?.required\"> This field is required. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_questionnaire\">Questionnaire</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_questionnaire\"\r\n            data-cy=\"questionnaire\"\r\n            name=\"questionnaire\"\r\n            formControlName=\"questionnaire\"\r\n            [compareWith]=\"compareQuestionnaire\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"questionnaireOption\" *ngFor=\"let questionnaireOption of questionnairesSharedCollection\">\r\n              {{ questionnaireOption.id }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_subQues\">Sub Ques</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_subQues\"\r\n            data-cy=\"subQues\"\r\n            name=\"subQues\"\r\n            formControlName=\"subQues\"\r\n            [compareWith]=\"compareQuestion\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"questionOption\" *ngFor=\"let questionOption of questionsSharedCollection\">{{ questionOption.id }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}