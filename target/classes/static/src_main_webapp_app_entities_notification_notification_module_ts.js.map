{"version":3,"file":"src_main_webapp_app_entities_notification_notification_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,mCAAa;IAEb,uCAAiB;AACnB,CAAC,EAJW,kBAAkB,KAAlB,kBAAkB,QAI7B;;;;;;;;;;;;;;;;;;;;;;;ACCoE;;;;;;;;;;ICLrE,0EAA0F;IAA7C,oTAAY,sGAA+B,KAAC;IACvF;IAAA,yEAA0B;IACxB;IAAA,wEAAkE;IAAA,mFAAwB;IAAA,4DAAK;IAE/F;IAAA,4EAAmG;IAAnB,gTAAS,yEAAQ,KAAC;IAAC,iEAAO;IAAA,4DAAS;IACrH;IAAA,4DAAM;IAEN;IAAA,0EAAwB;IACtB;IAAA,8EAAmC;IACnC;IAAA,wEAAwC;IAAA,wDAAmE;IAAA,4DAAI;IACjH;IAAA,4DAAM;IAEN;IAAA,0EAA0B;IACxB;IAAA,6EAAwF;IAAnB,iTAAS,yEAAQ,KAAC;IACrF;IAAA,yEAA8B;IAAA,kEAAM;IAAA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACzD;IAAA,4DAAS;IAET;IAAA,8EAAsH;IACpH;IAAA,0EAAgC;IAAA,kEAAM;IAAA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IAC3D;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAO;;;IAZqC,2DAAmE;IAAnE,8IAAmE;;ADCxG,MAAM,iCAAiC;IAG5C,YAAsB,mBAAwC,EAAY,WAA2B;QAA/E,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAY,gBAAW,GAAX,WAAW,CAAgB;IAAG,CAAC;IAEzG,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,+EAAkB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;;kHAbU,iCAAiC;+HAAjC,iCAAiC;QCV9C,gIAqBO;QACP;;QAtBO,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE0Bf,sEAAmC;IACjC;IAAA,uEAAkE;IAAA,uDAA8B;IAAA,4DAAI;IACtG;IAAA,4DAAM;;;IADD,0DAA8D;IAA9D,8KAA8D;IAAC,0DAA8B;IAA9B,gGAA8B;;;;;IAzBxG,sEAA0B;IACxB;IAAA,wEAAyC;IAAM,uEAAY;IAAA,4DAAO;IAElE;IAAA,gEAAM;IAEN;IAAA,6EAAmC;IAEnC;IAAA,wEAAuB;IAEvB;IAAA,yEAAqC;IACnC;IAAA,sEAAI;IAAM,8DAAE;IAAA,4DAAO;IACnB;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAqB;IAAA,4DAAO;IACpC;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAM,yEAAa;IAAA,4DAAO;IAC9B;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAsD;;IAAA,4DAAO;IACrE;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAM,kEAAM;IAAA,4DAAO;IACvB;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAyB;IAAA,4DAAO;IACxC;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAM,oEAAQ;IAAA,4DAAO;IACzB;IAAA,sEAAI;IACF;IAAA,+HAEM;IACR;IAAA,4DAAK;IACP;IAAA,4DAAK;IAEL;IAAA,6EAAuG;IAAjF,0SAAS,gFAAe,KAAC;IAC7C;IAAA,yEAAqC;IAAA,kEAAM;IAAA,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IAC9D;IAAA,4DAAS;IAET;IAAA,6EAAwG;IACtG;IAAA,yEAAqC;IAAA,kEAAM;IAAA,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IAC9D;IAAA,4DAAS;IACX;IAAA,4DAAM;;;IAzBM,2DAAqB;IAArB,uFAAqB;IAIrB,2DAAsD;IAAtD,mKAAsD;IAItD,2DAAyB;IAAzB,2FAAyB;IAIzB,0DAA2B;IAA3B,8FAA2B;IAUf,2DAAyD;IAAzD,qKAAyD;;AD3B9E,MAAM,2BAA2B;IAGtC,YAAsB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFpD,iBAAY,GAAyB,IAAI,CAAC;IAEa,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE;YACtD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;sGAbU,2BAA2B;yHAA3B,2BAA2B;QCTxC,yEAA2C;QACzC;QAAA,yEAAmB;QACjB;QAAA,wHAqCM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QAxCU,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6C;AAIgC;AAEN;;;;;;;;;;;;;;ICkBjG,yEAAoF;IAClF;IAAA,uEAAM;IAAA,iFAAsB;IAAA,4DAAO;IACrC;IAAA,4DAAM;;;;IAyCI,sEAAmC;IACjC;IAAA,wEAAkE;IAAA,uDAA8B;IAAA,4DAAI;IACtG;IAAA,4DAAM;;;IADD,0DAA8D;IAA9D,0KAA8D;IAAC,0DAA8B;IAA9B,4FAA8B;;;;;;IARtG,yEAAuF;IACrF;IAAA,qEAAI;IACF;IAAA,wEAA6D;IAAA,uDAAqB;IAAA,4DAAI;IACxF;IAAA,4DAAK;IACL;IAAA,qEAAI;IAAA,uDAAsD;;IAAA,4DAAK;IAC/D;IAAA,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC;IAAA,sEAAI;IACF;IAAA,iIAEM;IACR;IAAA,4DAAK;IACL;IAAA,0EAAqB;IACnB;IAAA,2EAAuB;IACrB;IAAA,8EAKC;IACC;IAAA,0EAA8B;IAC9B;IAAA,4EAAiC;IAAA,gEAAI;IAAA,4DAAO;IAC9C;IAAA,4DAAS;IAET;IAAA,8EAKC;IACC;IAAA,0EAAqC;IACrC;IAAA,4EAAiC;IAAA,gEAAI;IAAA,4DAAO;IAC9C;IAAA,4DAAS;IAET;IAAA,8EAAgH;IAA1F,+WAAS,wFAAoB,KAAC;IAClD;IAAA,0EAAgC;IAChC;IAAA,4EAAiC;IAAA,kEAAM;IAAA,4DAAO;IAChD;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAK;IACP;IAAA,4DAAK;;;IArCE,0DAAyD;IAAzD,iKAAyD;IAAC,0DAAqB;IAArB,mFAAqB;IAEhF,0DAAsD;IAAtD,+JAAsD;IACtD,0DAAyB;IAAzB,uFAAyB;IAErB,0DAA2B;IAA3B,0FAA2B;IAQ7B,0DAAyD;IAAzD,kKAAyD;IAUzD,0DAAyD;IAAzD,kKAAyD;;;;IAzDvE,yEAA6G;IAC3G;IAAA,4EAAmE;IACjE;IAAA,wEAAO;IACL;IAAA,yEAA+G;IAAnG,kZAAyB,+kBAAyC,iGAA+B,KAAxE;IACnC;IAAA,yEAA+B;IAC7B;IAAA,2EAAoB;IAClB;IAAA,wEAAM;IAAA,8DAAE;IAAA,4DAAO;IACf;IAAA,0EAA2C;IAC7C;IAAA,4DAAM;IACR;IAAA,4DAAK;IACL;IAAA,0EAAyC;IACvC;IAAA,2EAAoB;IAClB;IAAA,wEAAM;IAAA,yEAAa;IAAA,4DAAO;IAC1B;IAAA,0EAA2C;IAC7C;IAAA,4DAAM;IACR;IAAA,4DAAK;IACL;IAAA,0EAAmC;IACjC;IAAA,2EAAoB;IAClB;IAAA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACnB;IAAA,0EAA2C;IAC7C;IAAA,4DAAM;IACR;IAAA,4DAAK;IACL;IAAA,0EAAwC;IACtC;IAAA,2EAAoB;IAClB;IAAA,wEAAM;IAAA,oEAAQ;IAAA,4DAAO;IACrB;IAAA,0EAA2C;IAC7C;IAAA,4DAAM;IACR;IAAA,4DAAK;IACL;IAAA,qEAAqB;IACvB;IAAA,4DAAK;IACP;IAAA,4DAAQ;IACR;IAAA,yEAAO;IACL;IAAA,2HAuCK;IACP;IAAA,4DAAQ;IACV;IAAA,4DAAQ;IACV;IAAA,4DAAM;;;IAvEY,0DAAyB;IAAzB,uFAAyB;IA6BR,2DAAkB;IAAlB,yFAAkB;;;AD/ChD,MAAM,qBAAqB;IAOhC,YACY,mBAAwC,EACxC,cAA8B,EACjC,MAAc,EACX,WAAwB,EACxB,YAAsB;QAJtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACX,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAU;QAVlC,cAAS,GAAG,KAAK,CAAC;QAElB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QAUjB,YAAO,GAAG,CAAC,MAAc,EAAE,IAAmB,EAAU,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;IAFjH,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,MAAM,CAAC,YAA2B;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2GAAiC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC/G,QAAQ,CAAC,iBAAiB,CAAC,YAAY,GAAG,YAAY,CAAC;QACvD,iEAAiE;QACjE,QAAQ,CAAC,MAAM;aACZ,IAAI,CACH,6CAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,+EAAkB,CAAC,EAC/C,gDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,oCAAoC,EAAE,CAAC,CAC7D;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAA4B,EAAE,EAAE;gBACrC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,IAAI;QACF,IAAI,CAAC,oCAAoC,EAAE,CAAC,SAAS,CAAC;YACpD,IAAI,EAAE,CAAC,GAA4B,EAAE,EAAE;gBACrC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;QAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAES,oCAAoC;QAC5C,OAAO,oDAAa,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CACtF,0CAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAC3E,gDAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CACnE,CAAC;IACJ,CAAC;IAES,+BAA+B,CAAC,MAAgB,EAAE,IAAU;QACpE,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,iEAAI,CAAC,IAAI,IAAI,CAAC,8EAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,gEAAG,CAAC;IACnC,CAAC;IAES,iBAAiB,CAAC,QAAiC;QAC3D,MAAM,YAAY,GAAG,IAAI,CAAC,uCAAuC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;IAES,UAAU,CAAC,IAAqB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAES,uCAAuC,CAAC,IAA4B;QAC5E,OAAO,IAAI,IAAI,EAAE,CAAC;IACpB,CAAC;IAES,YAAY,CAAC,SAAkB,EAAE,SAAmB;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,MAAM,WAAW,GAAG;YAClB,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC;SACnD,CAAC;QACF,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,0CAAG,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAES,gBAAgB,CAAC,SAAkB,EAAE,SAAmB;QAChE,MAAM,cAAc,GAAG;YACrB,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC;SACnD,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;YAC3B,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,WAAW,EAAE,cAAc;SAC5B,CAAC,CAAC;IACL,CAAC;IAES,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,SAAS,GAAG,IAAI,CAAC,SAAS;QAChF,MAAM,mBAAmB,GAAG,SAAS,CAAC,CAAC,CAAC,gEAAG,CAAC,CAAC,CAAC,iEAAI,CAAC;QACnD,IAAI,SAAS,KAAK,EAAE,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;aAAM;YACL,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,mBAAmB,CAAC,CAAC;SAChD;IACH,CAAC;;0FArGU,qBAAqB;mHAArB,qBAAqB;QCflC,sEAAK;QACH;QAAA,wEAAoD;QAClD;QAAA,uEAAM;QAAA,wEAAa;QAAA,4DAAO;QAE1B;QAAA,yEAAwC;QACtC;QAAA,4EAA0E;QAAxC,6IAAS,UAAM,IAAC;QAChD;QAAA,yEAAkD;QAClD;QAAA,wEAAM;QAAA,wEAAY;QAAA,4DAAO;QAC3B;QAAA,4DAAS;QAET;QAAA,6EAKC;QACC;QAAA,yEAA+B;QAC/B;QAAA,wEAAM;QAAC,uFAA0B;QAAA,4DAAO;QAC1C;QAAA,4DAAS;QACX;QAAA,4DAAM;QACR;QAAA,4DAAK;QAEL;QAAA,8EAAmC;QAEnC;QAAA,wEAAuB;QAEvB;QAAA,mHAEM;QAEN;QAAA,oHA0EM;QACR;QAAA,4DAAM;QACN;;QArGyD,0DAAsB;QAAtB,mFAAsB;QAClD,0DAAkB;QAAlB,+EAAkB;QAQvC,0DAAoC;QAApC,6IAAoC;QAYO,2DAAiC;QAAjC,qIAAiC;QAItB,0DAA+C;QAA/C,mHAA+C;;;;;;;;;;;;;;;;;;;;;;;AC7BrD;AACc;AACe;AACA;AACa;AAClB;;AAMzE,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHnB,kEAAY,EAAE,yFAAyB;mIAGtC,kBAAkB,mBAFd,+EAAqB,EAAE,8FAA2B,EAAE,8FAA2B,EAAE,2GAAiC,aADvH,kEAAY,EAAE,yFAAyB;;;;;;;;;;;;;;;;;;;;;ACPuB;AAC7B;AACH;;;;AAMnC,MAAM,iCAAiC;IAC5C,YAAsB,OAA4B,EAAY,MAAc;QAAtD,YAAO,GAAP,OAAO,CAAqB;QAAY,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEhF,OAAO,CAAC,KAA6B;QACnC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,wDAAQ,CAAC,CAAC,YAAyC,EAAE,EAAE;gBACrD,IAAI,YAAY,CAAC,IAAI,EAAE;oBACrB,OAAO,wCAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBAC9B;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC9B,OAAO,uCAAK,CAAC;iBACd;YACH,CAAC,CAAC,CACH,CAAC;SACH;QACD,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;;kHAlBU,iCAAiC;kIAAjC,iCAAiC,WAAjC,iCAAiC,mBADpB,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACRuB;AAE0B;AACV;AACe;AACA;AACK;AACrC;;;AAEtD,MAAM,iBAAiB,GAAW;IAChC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAqB;QAChC,IAAI,EAAE;YACJ,WAAW,EAAE,KAAK,GAAG,gEAAG;SACzB;QACD,WAAW,EAAE,CAAC,2FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8FAA2B;QACtC,OAAO,EAAE;YACP,YAAY,EAAE,oGAAiC;SAChD;QACD,WAAW,EAAE,CAAC,2FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,8FAA2B;QACtC,OAAO,EAAE;YACP,YAAY,EAAE,oGAAiC;SAChD;QACD,WAAW,EAAE,CAAC,2FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8FAA2B;QACtC,OAAO,EAAE;YACP,YAAY,EAAE,oGAAiC;SAChD;QACD,WAAW,EAAE,CAAC,2FAAsB,CAAC;KACtC;CACF,CAAC;AAMK,MAAM,yBAAyB;;kGAAzB,yBAAyB;sHAAzB,yBAAyB;0HAH1B,kEAAqB,CAAC,iBAAiB,CAAC,EACxC,yDAAY;mIAEX,yBAAyB,oFAF1B,yDAAY;;;;;;;;;;;;;;;;;;;AC9C4C;AAEtC;AACgC;;AAqCvD,MAAM,uBAAuB;IAClC,2BAA2B,CAAC,eAA2C,EAAE,EAAE,EAAE,IAAI,EAAE;QACjF,MAAM,oBAAoB,GAAG,IAAI,CAAC,yCAAyC,CAAC;YAC1E,GAAG,IAAI,CAAC,eAAe,EAAE;YACzB,GAAG,YAAY;SAChB,CAAC,CAAC;QACH,OAAO,IAAI,qDAAS,CAA+B;YACjD,EAAE,EAAE,IAAI,uDAAW,CACjB,EAAE,KAAK,EAAE,oBAAoB,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAClD;gBACE,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,CAAC,+DAAmB,CAAC;aAClC,CACF;YACD,YAAY,EAAE,IAAI,uDAAW,CAAC,oBAAoB,CAAC,YAAY,CAAC;YAChE,MAAM,EAAE,IAAI,uDAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC;YACpD,QAAQ,EAAE,IAAI,uDAAW,CAAC,oBAAoB,CAAC,QAAQ,CAAC;SACzD,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,IAA2B;QACzC,OAAO,IAAI,CAAC,yCAAyC,CAAC,IAAI,CAAC,WAAW,EAA4D,CAAC,CAAC;IACtI,CAAC;IAED,SAAS,CAAC,IAA2B,EAAE,YAAwC;QAC7E,MAAM,oBAAoB,GAAG,IAAI,CAAC,yCAAyC,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,EAAE,GAAG,YAAY,EAAE,CAAC,CAAC;QAC5H,IAAI,CAAC,KAAK,CACR;YACE,GAAG,oBAAoB;YACvB,EAAE,EAAE,EAAE,KAAK,EAAE,oBAAoB,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;SAChD,CAAC,wEAAwE,CAClF,CAAC;IACJ,CAAC;IAEO,eAAe;QACrB,MAAM,WAAW,GAAG,qDAAK,EAAE,CAAC;QAE5B,OAAO;YACL,EAAE,EAAE,IAAI;YACR,YAAY,EAAE,WAAW;SAC1B,CAAC;IACJ,CAAC;IAEO,yCAAyC,CAC/C,eAAuE;QAEvE,OAAO;YACL,GAAG,eAAe;YAClB,YAAY,EAAE,qDAAK,CAAC,eAAe,CAAC,YAAY,EAAE,wEAAgB,CAAC;SACpE,CAAC;IACJ,CAAC;IAEO,yCAAyC,CAC/C,YAAmF;QAEnF,OAAO;YACL,GAAG,YAAY;YACf,YAAY,EAAE,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,wEAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;SACzG,CAAC;IACJ,CAAC;;8FA3DU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBADV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCe;AAO0C;;;;;;;;;;;ICHjF,yEAAkE;IAChE;IAAA,4EAAyC;IAAA,6DAAE;IAAA,4DAAQ;IACnD;IAAA,uEAAwH;IAC1H;IAAA,4DAAM;;IADgG,0DAAiB;IAAjB,0EAAiB;;;IAsBnH,6EAAiG;IAAA,6EAAkB;IAAA,4DAAS;;;IAAxD,wFAA4B;;;IAehG,6EAAsF;IAAA,uDAAuB;IAAA,4DAAS;;;IAA9G,sFAA0B;IAAoD,0DAAuB;IAAvB,qFAAuB;;AD9BlH,MAAM,2BAA2B;IAStC,YACY,mBAAwC,EACxC,uBAAgD,EAChD,eAAgC,EAChC,cAA8B;QAH9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAZ1C,aAAQ,GAAG,KAAK,CAAC;QACjB,iBAAY,GAAyB,IAAI,CAAC;QAC1C,6BAAwB,GAAG,MAAM,CAAC,IAAI,CAAC,mGAAkB,CAAC,CAAC;QAE3D,wBAAmB,GAAgB,EAAE,CAAC;QAEtC,aAAQ,GAA0B,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,EAAE,CAAC;QAS7F,oBAAe,GAAG,CAAC,EAAoB,EAAE,EAAoB,EAAW,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAFrH,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE;YACtD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,YAAY,CAAC,EAAE,KAAK,IAAI,EAAE;YAC5B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7E;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;SAC7E;IACH,CAAC;IAES,uBAAuB,CAAC,MAA+C;QAC/E,MAAM,CAAC,IAAI,CAAC,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YAC3D,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;YAChC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;SAChC,CAAC,CAAC;IACL,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,uBAAuB;IACzB,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAES,UAAU,CAAC,YAA2B;QAC9C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAEpE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAC9E,IAAI,CAAC,mBAAmB,EACxB,YAAY,CAAC,QAAQ,CACtB,CAAC;IACJ,CAAC;IAES,wBAAwB;QAChC,IAAI,CAAC,eAAe;aACjB,KAAK,CAAC,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC;aACzC,IAAI,CAAC,mDAAG,CAAC,CAAC,GAA8B,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;aAC7D,IAAI,CACH,mDAAG,CAAC,CAAC,SAAsB,EAAE,EAAE,CAC7B,IAAI,CAAC,eAAe,CAAC,gCAAgC,CAAY,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CACzG,CACF;aACA,SAAS,CAAC,CAAC,SAAsB,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,CAAC,CAAC;IACnF,CAAC;;sGAlFU,2BAA2B;yHAA3B,2BAA2B;QCjBxC,yEAA2C;QACzC;QAAA,yEAAmB;QACjB;QAAA,0EAAwF;QAA3C,uJAAY,UAAM,IAAC;QAC9D;QAAA,wEAA4E;QAAA,wFAA6B;QAAA,4DAAK;QAE9G;QAAA,sEAAK;QACH;QAAA,8EAAmC;QAEnC;QAAA,yHAGM;QAEN;QAAA,0EAAsB;QACpB;QAAA,4EAAmD;QAAA,yEAAa;QAAA,4DAAQ;QACxE;QAAA,0EAAoB;QAClB;QAAA,uEAQE;QACJ;QAAA,4DAAM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAsB;QACpB;QAAA,4EAA6C;QAAA,kEAAM;QAAA,4DAAQ;QAC3D;QAAA,8EAAuG;QACrG;QAAA,yEAAkC;QAClC;QAAA,gIAA4H;QAC9H;QAAA,4DAAS;QACX;QAAA,4DAAM;QAEN;QAAA,0EAAsB;QACpB;QAAA,6EAA+C;QAAA,oEAAQ;QAAA,4DAAQ;QAC/D;QAAA,8EAOC;QACC;QAAA,yEAAkC;QAClC;QAAA,gIAAsH;QACxH;QAAA,4DAAS;QACX;QAAA,4DAAM;QACR;QAAA,4DAAM;QAEN;QAAA,uEAAK;QACH;QAAA,8EAA8H;QAA1B,oJAAS,mBAAe,IAAC;QAC3H;QAAA,0EAA8B;QAAA,kEAAM;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACzD;QAAA,4DAAS;QAET;QAAA,8EAMC;QACC;QAAA,0EAA+B;QAAA,kEAAM;QAAA,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACxD;QAAA,4DAAS;QACX;QAAA,4DAAM;QACR;QAAA,4DAAO;QACT;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QApEqE,0DAAsB;QAAtB,mFAAsB;QAM5D,0DAAyC;QAAzC,yGAAyC;QAuBpD,2DAAgB;QAAhB,yEAAgB;QACe,0DAA2B;QAA3B,iGAA2B;QAYlE,0DAA+B;QAA/B,4FAA+B;QAEvB,0DAAgB;QAAhB,yEAAgB;QACsC,0DAAsB;QAAtB,4FAAsB;QActF,2DAAyC;QAAzC,0GAAyC","sources":["./src/main/webapp/app/entities/enumerations/notification-status.model.ts","./src/main/webapp/app/entities/notification/delete/notification-delete-dialog.component.ts","./src/main/webapp/app/entities/notification/delete/notification-delete-dialog.component.html","./src/main/webapp/app/entities/notification/detail/notification-detail.component.ts","./src/main/webapp/app/entities/notification/detail/notification-detail.component.html","./src/main/webapp/app/entities/notification/list/notification.component.ts","./src/main/webapp/app/entities/notification/list/notification.component.html","./src/main/webapp/app/entities/notification/notification.module.ts","./src/main/webapp/app/entities/notification/route/notification-routing-resolve.service.ts","./src/main/webapp/app/entities/notification/route/notification-routing.module.ts","./src/main/webapp/app/entities/notification/update/notification-form.service.ts","./src/main/webapp/app/entities/notification/update/notification-update.component.ts","./src/main/webapp/app/entities/notification/update/notification-update.component.html"],"sourcesContent":["export enum NotificationStatus {\r\n  READ = 'READ',\r\n\r\n  UNREAD = 'UNREAD',\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { INotification } from '../notification.model';\r\nimport { NotificationService } from '../service/notification.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './notification-delete-dialog.component.html',\r\n})\r\nexport class NotificationDeleteDialogComponent {\r\n  notification?: INotification;\r\n\r\n  constructor(protected notificationService: NotificationService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.notificationService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"notification\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(notification.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"notificationDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-notification-heading\">Are you sure you want to delete Notification {{ notification.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-notification\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { INotification } from '../notification.model';\r\n\r\n@Component({\r\n  selector: 'jhi-notification-detail',\r\n  templateUrl: './notification-detail.component.html',\r\n})\r\nexport class NotificationDetailComponent implements OnInit {\r\n  notification: INotification | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ notification }) => {\r\n      this.notification = notification;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"notification\">\r\n      <h2 data-cy=\"notificationDetailsHeading\"><span>Notification</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ notification.id }}</span>\r\n        </dd>\r\n        <dt><span>Received Date</span></dt>\r\n        <dd>\r\n          <span>{{ notification.receivedDate | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>Status</span></dt>\r\n        <dd>\r\n          <span>{{ notification.status }}</span>\r\n        </dd>\r\n        <dt><span>Supplier</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"notification.supplier\">\r\n            <a [routerLink]=\"['/supplier', notification.supplier.id, 'view']\">{{ notification.supplier.id }}</a>\r\n          </div>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/notification', notification.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { INotification } from '../notification.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, NotificationService } from '../service/notification.service';\r\nimport { NotificationDeleteDialogComponent } from '../delete/notification-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-notification',\r\n  templateUrl: './notification.component.html',\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  notifications?: INotification[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected notificationService: NotificationService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: INotification): number => this.notificationService.getNotificationIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(notification: INotification): void {\r\n    const modalRef = this.modalService.open(NotificationDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.notification = notification;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.notifications = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: INotification[]): INotification[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: INotification[] | null): INotification[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.notificationService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"NotificationHeading\">\r\n    <span>Notifications</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-notification\"\r\n        [routerLink]=\"['/notification/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Notification </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"notifications?.length === 0\">\r\n    <span>No Notifications found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"notifications && notifications.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"receivedDate\">\r\n            <div class=\"d-flex\">\r\n              <span>Received Date</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"status\">\r\n            <div class=\"d-flex\">\r\n              <span>Status</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"supplier.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Supplier</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let notification of notifications; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/notification', notification.id, 'view']\">{{ notification.id }}</a>\r\n          </td>\r\n          <td>{{ notification.receivedDate | formatMediumDatetime }}</td>\r\n          <td>{{ notification.status }}</td>\r\n          <td>\r\n            <div *ngIf=\"notification.supplier\">\r\n              <a [routerLink]=\"['/supplier', notification.supplier.id, 'view']\">{{ notification.supplier.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/notification', notification.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/notification', notification.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(notification)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { NotificationComponent } from './list/notification.component';\r\nimport { NotificationDetailComponent } from './detail/notification-detail.component';\r\nimport { NotificationUpdateComponent } from './update/notification-update.component';\r\nimport { NotificationDeleteDialogComponent } from './delete/notification-delete-dialog.component';\r\nimport { NotificationRoutingModule } from './route/notification-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, NotificationRoutingModule],\r\n  declarations: [NotificationComponent, NotificationDetailComponent, NotificationUpdateComponent, NotificationDeleteDialogComponent],\r\n})\r\nexport class NotificationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { INotification } from '../notification.model';\r\nimport { NotificationService } from '../service/notification.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationRoutingResolveService implements Resolve<INotification | null> {\r\n  constructor(protected service: NotificationService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<INotification | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((notification: HttpResponse<INotification>) => {\r\n          if (notification.body) {\r\n            return of(notification.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { NotificationComponent } from '../list/notification.component';\r\nimport { NotificationDetailComponent } from '../detail/notification-detail.component';\r\nimport { NotificationUpdateComponent } from '../update/notification-update.component';\r\nimport { NotificationRoutingResolveService } from './notification-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst notificationRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: NotificationDetailComponent,\r\n    resolve: {\r\n      notification: NotificationRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: NotificationUpdateComponent,\r\n    resolve: {\r\n      notification: NotificationRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: NotificationUpdateComponent,\r\n    resolve: {\r\n      notification: NotificationRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(notificationRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { INotification, NewNotification } from '../notification.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts INotification for edit and NewNotificationFormGroupInput for create.\r\n */\r\ntype NotificationFormGroupInput = INotification | PartialWithRequiredKeyOf<NewNotification>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends INotification | NewNotification> = Omit<T, 'receivedDate'> & {\r\n  receivedDate?: string | null;\r\n};\r\n\r\ntype NotificationFormRawValue = FormValueOf<INotification>;\r\n\r\ntype NewNotificationFormRawValue = FormValueOf<NewNotification>;\r\n\r\ntype NotificationFormDefaults = Pick<NewNotification, 'id' | 'receivedDate'>;\r\n\r\ntype NotificationFormGroupContent = {\r\n  id: FormControl<NotificationFormRawValue['id'] | NewNotification['id']>;\r\n  receivedDate: FormControl<NotificationFormRawValue['receivedDate']>;\r\n  status: FormControl<NotificationFormRawValue['status']>;\r\n  supplier: FormControl<NotificationFormRawValue['supplier']>;\r\n};\r\n\r\nexport type NotificationFormGroup = FormGroup<NotificationFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationFormService {\r\n  createNotificationFormGroup(notification: NotificationFormGroupInput = { id: null }): NotificationFormGroup {\r\n    const notificationRawValue = this.convertNotificationToNotificationRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...notification,\r\n    });\r\n    return new FormGroup<NotificationFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: notificationRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      receivedDate: new FormControl(notificationRawValue.receivedDate),\r\n      status: new FormControl(notificationRawValue.status),\r\n      supplier: new FormControl(notificationRawValue.supplier),\r\n    });\r\n  }\r\n\r\n  getNotification(form: NotificationFormGroup): INotification | NewNotification {\r\n    return this.convertNotificationRawValueToNotification(form.getRawValue() as NotificationFormRawValue | NewNotificationFormRawValue);\r\n  }\r\n\r\n  resetForm(form: NotificationFormGroup, notification: NotificationFormGroupInput): void {\r\n    const notificationRawValue = this.convertNotificationToNotificationRawValue({ ...this.getFormDefaults(), ...notification });\r\n    form.reset(\r\n      {\r\n        ...notificationRawValue,\r\n        id: { value: notificationRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): NotificationFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      receivedDate: currentTime,\r\n    };\r\n  }\r\n\r\n  private convertNotificationRawValueToNotification(\r\n    rawNotification: NotificationFormRawValue | NewNotificationFormRawValue\r\n  ): INotification | NewNotification {\r\n    return {\r\n      ...rawNotification,\r\n      receivedDate: dayjs(rawNotification.receivedDate, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertNotificationToNotificationRawValue(\r\n    notification: INotification | (Partial<NewNotification> & NotificationFormDefaults)\r\n  ): NotificationFormRawValue | PartialWithRequiredKeyOf<NewNotificationFormRawValue> {\r\n    return {\r\n      ...notification,\r\n      receivedDate: notification.receivedDate ? notification.receivedDate.format(DATE_TIME_FORMAT) : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { NotificationFormService, NotificationFormGroup } from './notification-form.service';\r\nimport { INotification } from '../notification.model';\r\nimport { NotificationService } from '../service/notification.service';\r\nimport { ISupplier } from 'app/entities/supplier/supplier.model';\r\nimport { SupplierService } from 'app/entities/supplier/service/supplier.service';\r\nimport { NotificationStatus } from 'app/entities/enumerations/notification-status.model';\r\n\r\n@Component({\r\n  selector: 'jhi-notification-update',\r\n  templateUrl: './notification-update.component.html',\r\n})\r\nexport class NotificationUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  notification: INotification | null = null;\r\n  notificationStatusValues = Object.keys(NotificationStatus);\r\n\r\n  suppliersCollection: ISupplier[] = [];\r\n\r\n  editForm: NotificationFormGroup = this.notificationFormService.createNotificationFormGroup();\r\n\r\n  constructor(\r\n    protected notificationService: NotificationService,\r\n    protected notificationFormService: NotificationFormService,\r\n    protected supplierService: SupplierService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  compareSupplier = (o1: ISupplier | null, o2: ISupplier | null): boolean => this.supplierService.compareSupplier(o1, o2);\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ notification }) => {\r\n      this.notification = notification;\r\n      if (notification) {\r\n        this.updateForm(notification);\r\n      }\r\n\r\n      this.loadRelationshipsOptions();\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const notification = this.notificationFormService.getNotification(this.editForm);\r\n    if (notification.id !== null) {\r\n      this.subscribeToSaveResponse(this.notificationService.update(notification));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.notificationService.create(notification));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<INotification>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(notification: INotification): void {\r\n    this.notification = notification;\r\n    this.notificationFormService.resetForm(this.editForm, notification);\r\n\r\n    this.suppliersCollection = this.supplierService.addSupplierToCollectionIfMissing<ISupplier>(\r\n      this.suppliersCollection,\r\n      notification.supplier\r\n    );\r\n  }\r\n\r\n  protected loadRelationshipsOptions(): void {\r\n    this.supplierService\r\n      .query({ filter: 'notification-is-null' })\r\n      .pipe(map((res: HttpResponse<ISupplier[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((suppliers: ISupplier[]) =>\r\n          this.supplierService.addSupplierToCollectionIfMissing<ISupplier>(suppliers, this.notification?.supplier)\r\n        )\r\n      )\r\n      .subscribe((suppliers: ISupplier[]) => (this.suppliersCollection = suppliers));\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-notification-heading\" data-cy=\"NotificationCreateUpdateHeading\">Create or edit a Notification</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_receivedDate\">Received Date</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_receivedDate\"\r\n              data-cy=\"receivedDate\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"receivedDate\"\r\n              formControlName=\"receivedDate\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_status\">Status</label>\r\n          <select class=\"form-control\" name=\"status\" formControlName=\"status\" id=\"field_status\" data-cy=\"status\">\r\n            <option [ngValue]=\"null\"></option>\r\n            <option *ngFor=\"let notificationStatus of notificationStatusValues\" [value]=\"notificationStatus\">notificationStatus</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_supplier\">Supplier</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_supplier\"\r\n            data-cy=\"supplier\"\r\n            name=\"supplier\"\r\n            formControlName=\"supplier\"\r\n            [compareWith]=\"compareSupplier\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"supplierOption\" *ngFor=\"let supplierOption of suppliersCollection\">{{ supplierOption.id }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}