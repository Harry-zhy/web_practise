{"version":3,"file":"src_main_webapp_app_entities_event-itinerary_event-itinerary_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/event-itinerary/delete/event-itinerary-delete-dialog.component.ts","./src/main/webapp/app/entities/event-itinerary/delete/event-itinerary-delete-dialog.component.html","./src/main/webapp/app/entities/event-itinerary/detail/event-itinerary-detail.component.ts","./src/main/webapp/app/entities/event-itinerary/detail/event-itinerary-detail.component.html","./src/main/webapp/app/entities/event-itinerary/event-itinerary.module.ts","./src/main/webapp/app/entities/event-itinerary/list/event-itinerary.component.ts","./src/main/webapp/app/entities/event-itinerary/list/event-itinerary.component.html","./src/main/webapp/app/entities/event-itinerary/route/event-itinerary-routing-resolve.service.ts","./src/main/webapp/app/entities/event-itinerary/route/event-itinerary-routing.module.ts","./src/main/webapp/app/entities/event-itinerary/update/event-itinerary-form.service.ts","./src/main/webapp/app/entities/event-itinerary/update/event-itinerary-update.component.ts","./src/main/webapp/app/entities/event-itinerary/update/event-itinerary-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IEventItinerary } from '../event-itinerary.model';\r\nimport { EventItineraryService } from '../service/event-itinerary.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './event-itinerary-delete-dialog.component.html',\r\n})\r\nexport class EventItineraryDeleteDialogComponent {\r\n  eventItinerary?: IEventItinerary;\r\n\r\n  constructor(protected eventItineraryService: EventItineraryService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.eventItineraryService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"eventItinerary\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(eventItinerary.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"eventItineraryDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-eventItinerary-heading\">Are you sure you want to delete Event Itinerary {{ eventItinerary.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-eventItinerary\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IEventItinerary } from '../event-itinerary.model';\r\n\r\n@Component({\r\n  selector: 'jhi-event-itinerary-detail',\r\n  templateUrl: './event-itinerary-detail.component.html',\r\n})\r\nexport class EventItineraryDetailComponent implements OnInit {\r\n  eventItinerary: IEventItinerary | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ eventItinerary }) => {\r\n      this.eventItinerary = eventItinerary;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"eventItinerary\">\r\n      <h2 data-cy=\"eventItineraryDetailsHeading\"><span>Event Itinerary</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ eventItinerary.id }}</span>\r\n        </dd>\r\n        <dt><span>Number Of Guests</span></dt>\r\n        <dd>\r\n          <span>{{ eventItinerary.numberOfGuests }}</span>\r\n        </dd>\r\n        <dt><span>Event Date</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"eventItinerary.eventDate\">\r\n            <a [routerLink]=\"['/itinerary-date-time', eventItinerary.eventDate.id, 'view']\">{{ eventItinerary.eventDate.id }}</a>\r\n          </div>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/event-itinerary', eventItinerary.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { EventItineraryComponent } from './list/event-itinerary.component';\r\nimport { EventItineraryDetailComponent } from './detail/event-itinerary-detail.component';\r\nimport { EventItineraryUpdateComponent } from './update/event-itinerary-update.component';\r\nimport { EventItineraryDeleteDialogComponent } from './delete/event-itinerary-delete-dialog.component';\r\nimport { EventItineraryRoutingModule } from './route/event-itinerary-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, EventItineraryRoutingModule],\r\n  declarations: [\r\n    EventItineraryComponent,\r\n    EventItineraryDetailComponent,\r\n    EventItineraryUpdateComponent,\r\n    EventItineraryDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class EventItineraryModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IEventItinerary } from '../event-itinerary.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, EventItineraryService } from '../service/event-itinerary.service';\r\nimport { EventItineraryDeleteDialogComponent } from '../delete/event-itinerary-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-event-itinerary',\r\n  templateUrl: './event-itinerary.component.html',\r\n})\r\nexport class EventItineraryComponent implements OnInit {\r\n  eventItineraries?: IEventItinerary[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected eventItineraryService: EventItineraryService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IEventItinerary): number => this.eventItineraryService.getEventItineraryIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(eventItinerary: IEventItinerary): void {\r\n    const modalRef = this.modalService.open(EventItineraryDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.eventItinerary = eventItinerary;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.eventItineraries = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IEventItinerary[]): IEventItinerary[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IEventItinerary[] | null): IEventItinerary[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.eventItineraryService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"EventItineraryHeading\">\r\n    <span>Event Itineraries</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-event-itinerary\"\r\n        [routerLink]=\"['/event-itinerary/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Event Itinerary </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"eventItineraries?.length === 0\">\r\n    <span>No Event Itineraries found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"eventItineraries && eventItineraries.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"numberOfGuests\">\r\n            <div class=\"d-flex\">\r\n              <span>Number Of Guests</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"eventDate.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Event Date</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let eventItinerary of eventItineraries; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/event-itinerary', eventItinerary.id, 'view']\">{{ eventItinerary.id }}</a>\r\n          </td>\r\n          <td>{{ eventItinerary.numberOfGuests }}</td>\r\n          <td>\r\n            <div *ngIf=\"eventItinerary.eventDate\">\r\n              <a [routerLink]=\"['/itinerary-date-time', eventItinerary.eventDate.id, 'view']\">{{ eventItinerary.eventDate.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/event-itinerary', eventItinerary.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/event-itinerary', eventItinerary.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(eventItinerary)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IEventItinerary } from '../event-itinerary.model';\r\nimport { EventItineraryService } from '../service/event-itinerary.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventItineraryRoutingResolveService implements Resolve<IEventItinerary | null> {\r\n  constructor(protected service: EventItineraryService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IEventItinerary | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((eventItinerary: HttpResponse<IEventItinerary>) => {\r\n          if (eventItinerary.body) {\r\n            return of(eventItinerary.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { EventItineraryComponent } from '../list/event-itinerary.component';\r\nimport { EventItineraryDetailComponent } from '../detail/event-itinerary-detail.component';\r\nimport { EventItineraryUpdateComponent } from '../update/event-itinerary-update.component';\r\nimport { EventItineraryRoutingResolveService } from './event-itinerary-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst eventItineraryRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: EventItineraryComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: EventItineraryDetailComponent,\r\n    resolve: {\r\n      eventItinerary: EventItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: EventItineraryUpdateComponent,\r\n    resolve: {\r\n      eventItinerary: EventItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: EventItineraryUpdateComponent,\r\n    resolve: {\r\n      eventItinerary: EventItineraryRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(eventItineraryRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EventItineraryRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { IEventItinerary, NewEventItinerary } from '../event-itinerary.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IEventItinerary for edit and NewEventItineraryFormGroupInput for create.\r\n */\r\ntype EventItineraryFormGroupInput = IEventItinerary | PartialWithRequiredKeyOf<NewEventItinerary>;\r\n\r\ntype EventItineraryFormDefaults = Pick<NewEventItinerary, 'id' | 'itineraryGuests'>;\r\n\r\ntype EventItineraryFormGroupContent = {\r\n  id: FormControl<IEventItinerary['id'] | NewEventItinerary['id']>;\r\n  numberOfGuests: FormControl<IEventItinerary['numberOfGuests']>;\r\n  eventDate: FormControl<IEventItinerary['eventDate']>;\r\n  itineraryGuests: FormControl<IEventItinerary['itineraryGuests']>;\r\n};\r\n\r\nexport type EventItineraryFormGroup = FormGroup<EventItineraryFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventItineraryFormService {\r\n  createEventItineraryFormGroup(eventItinerary: EventItineraryFormGroupInput = { id: null }): EventItineraryFormGroup {\r\n    const eventItineraryRawValue = {\r\n      ...this.getFormDefaults(),\r\n      ...eventItinerary,\r\n    };\r\n    return new FormGroup<EventItineraryFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: eventItineraryRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      numberOfGuests: new FormControl(eventItineraryRawValue.numberOfGuests),\r\n      eventDate: new FormControl(eventItineraryRawValue.eventDate),\r\n      itineraryGuests: new FormControl(eventItineraryRawValue.itineraryGuests ?? []),\r\n    });\r\n  }\r\n\r\n  getEventItinerary(form: EventItineraryFormGroup): IEventItinerary | NewEventItinerary {\r\n    return form.getRawValue() as IEventItinerary | NewEventItinerary;\r\n  }\r\n\r\n  resetForm(form: EventItineraryFormGroup, eventItinerary: EventItineraryFormGroupInput): void {\r\n    const eventItineraryRawValue = { ...this.getFormDefaults(), ...eventItinerary };\r\n    form.reset(\r\n      {\r\n        ...eventItineraryRawValue,\r\n        id: { value: eventItineraryRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): EventItineraryFormDefaults {\r\n    return {\r\n      id: null,\r\n      itineraryGuests: [],\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { EventItineraryFormService, EventItineraryFormGroup } from './event-itinerary-form.service';\r\nimport { IEventItinerary } from '../event-itinerary.model';\r\nimport { EventItineraryService } from '../service/event-itinerary.service';\r\nimport { IItineraryDateTime } from 'app/entities/itinerary-date-time/itinerary-date-time.model';\r\nimport { ItineraryDateTimeService } from 'app/entities/itinerary-date-time/service/itinerary-date-time.service';\r\n\r\n@Component({\r\n  selector: 'jhi-event-itinerary-update',\r\n  templateUrl: './event-itinerary-update.component.html',\r\n})\r\nexport class EventItineraryUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  eventItinerary: IEventItinerary | null = null;\r\n\r\n  itineraryDateTimesSharedCollection: IItineraryDateTime[] = [];\r\n\r\n  editForm: EventItineraryFormGroup = this.eventItineraryFormService.createEventItineraryFormGroup();\r\n\r\n  constructor(\r\n    protected eventItineraryService: EventItineraryService,\r\n    protected eventItineraryFormService: EventItineraryFormService,\r\n    protected itineraryDateTimeService: ItineraryDateTimeService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  compareItineraryDateTime = (o1: IItineraryDateTime | null, o2: IItineraryDateTime | null): boolean =>\r\n    this.itineraryDateTimeService.compareItineraryDateTime(o1, o2);\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ eventItinerary }) => {\r\n      this.eventItinerary = eventItinerary;\r\n      if (eventItinerary) {\r\n        this.updateForm(eventItinerary);\r\n      }\r\n\r\n      this.loadRelationshipsOptions();\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const eventItinerary = this.eventItineraryFormService.getEventItinerary(this.editForm);\r\n    if (eventItinerary.id !== null) {\r\n      this.subscribeToSaveResponse(this.eventItineraryService.update(eventItinerary));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.eventItineraryService.create(eventItinerary));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IEventItinerary>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(eventItinerary: IEventItinerary): void {\r\n    this.eventItinerary = eventItinerary;\r\n    this.eventItineraryFormService.resetForm(this.editForm, eventItinerary);\r\n\r\n    this.itineraryDateTimesSharedCollection = this.itineraryDateTimeService.addItineraryDateTimeToCollectionIfMissing<IItineraryDateTime>(\r\n      this.itineraryDateTimesSharedCollection,\r\n      eventItinerary.eventDate\r\n    );\r\n  }\r\n\r\n  protected loadRelationshipsOptions(): void {\r\n    this.itineraryDateTimeService\r\n      .query()\r\n      .pipe(map((res: HttpResponse<IItineraryDateTime[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((itineraryDateTimes: IItineraryDateTime[]) =>\r\n          this.itineraryDateTimeService.addItineraryDateTimeToCollectionIfMissing<IItineraryDateTime>(\r\n            itineraryDateTimes,\r\n            this.eventItinerary?.eventDate\r\n          )\r\n        )\r\n      )\r\n      .subscribe((itineraryDateTimes: IItineraryDateTime[]) => (this.itineraryDateTimesSharedCollection = itineraryDateTimes));\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-event-itinerary-heading\" data-cy=\"EventItineraryCreateUpdateHeading\">Create or edit a Event Itinerary</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_numberOfGuests\">Number Of Guests</label>\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            name=\"numberOfGuests\"\r\n            id=\"field_numberOfGuests\"\r\n            data-cy=\"numberOfGuests\"\r\n            formControlName=\"numberOfGuests\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_eventDate\">Event Date</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_eventDate\"\r\n            data-cy=\"eventDate\"\r\n            name=\"eventDate\"\r\n            formControlName=\"eventDate\"\r\n            [compareWith]=\"compareItineraryDateTime\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"itineraryDateTimeOption\" *ngFor=\"let itineraryDateTimeOption of itineraryDateTimesSharedCollection\">\r\n              {{ itineraryDateTimeOption.id }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}