{"version":3,"file":"src_main_webapp_app_admin_health_health_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/admin/health/health.component.ts","./src/main/webapp/app/admin/health/health.component.html","./src/main/webapp/app/admin/health/health.module.ts","./src/main/webapp/app/admin/health/health.route.ts","./src/main/webapp/app/admin/health/health.service.ts","./src/main/webapp/app/admin/health/modal/health-modal.component.ts","./src/main/webapp/app/admin/health/modal/health-modal.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HealthService } from './health.service';\r\nimport { Health, HealthDetails, HealthStatus } from './health.model';\r\nimport { HealthModalComponent } from './modal/health-modal.component';\r\n\r\n@Component({\r\n  selector: 'jhi-health',\r\n  templateUrl: './health.component.html',\r\n})\r\nexport class HealthComponent implements OnInit {\r\n  health?: Health;\r\n\r\n  constructor(private modalService: NgbModal, private healthService: HealthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  getBadgeClass(statusState: HealthStatus): string {\r\n    if (statusState === 'UP') {\r\n      return 'bg-success';\r\n    }\r\n    return 'bg-danger';\r\n  }\r\n\r\n  refresh(): void {\r\n    this.healthService.checkHealth().subscribe({\r\n      next: health => (this.health = health),\r\n      error: (error: HttpErrorResponse) => {\r\n        if (error.status === 503) {\r\n          this.health = error.error;\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  showHealth(health: { key: string; value: HealthDetails }): void {\r\n    const modalRef = this.modalService.open(HealthModalComponent);\r\n    modalRef.componentInstance.health = health;\r\n  }\r\n}\r\n","<div>\r\n  <h2>\r\n    <span id=\"health-page-heading\" data-cy=\"healthPageHeading\">Health Checks</span>\r\n\r\n    <button class=\"btn btn-primary float-end\" (click)=\"refresh()\"><fa-icon icon=\"sync\"></fa-icon> <span>Refresh</span></button>\r\n  </h2>\r\n\r\n  <div class=\"table-responsive\">\r\n    <table id=\"healthCheck\" class=\"table table-striped\" aria-describedby=\"health-page-heading\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Service name</th>\r\n          <th scope=\"col\" class=\"text-center\">Status</th>\r\n          <th scope=\"col\" class=\"text-center\">Details</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"health\">\r\n        <tr *ngFor=\"let componentHealth of health.components | keyvalue\">\r\n          <td>\r\n            <span class=\"text-capitalize\">{{ componentHealth.key }}</span>\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <span class=\"badge\" [ngClass]=\"getBadgeClass(componentHealth.value!.status)\">\r\n              {{\r\n                { UNKNOWN: 'UNKNOWN', UP: 'UP', OUT_OF_SERVICE: 'OUT_OF_SERVICE', DOWN: 'DOWN' }[componentHealth.value!.status || 'UNKNOWN']\r\n              }}\r\n            </span>\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <a\r\n              class=\"hand\"\r\n              (click)=\"showHealth({ key: componentHealth.key, value: componentHealth.value! })\"\r\n              *ngIf=\"componentHealth.value!.details\"\r\n            >\r\n              <fa-icon icon=\"eye\"></fa-icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nimport { HealthComponent } from './health.component';\r\nimport { HealthModalComponent } from './modal/health-modal.component';\r\nimport { healthRoute } from './health.route';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild([healthRoute])],\r\n  declarations: [HealthComponent, HealthModalComponent],\r\n})\r\nexport class HealthModule {}\r\n","import { Route } from '@angular/router';\r\n\r\nimport { HealthComponent } from './health.component';\r\n\r\nexport const healthRoute: Route = {\r\n  path: '',\r\n  component: HealthComponent,\r\n  data: {\r\n    pageTitle: 'Health Checks',\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { Health } from './health.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HealthService {\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  checkHealth(): Observable<Health> {\r\n    return this.http.get<Health>(this.applicationConfigService.getEndpointFor('management/health'));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HealthKey, HealthDetails } from '../health.model';\r\n\r\n@Component({\r\n  selector: 'jhi-health-modal',\r\n  templateUrl: './health-modal.component.html',\r\n})\r\nexport class HealthModalComponent {\r\n  health?: { key: HealthKey; value: HealthDetails };\r\n\r\n  constructor(private activeModal: NgbActiveModal) {}\r\n\r\n  readableValue(value: any): string {\r\n    if (this.health?.key === 'diskSpace') {\r\n      // Should display storage space in an human readable unit\r\n      const val = value / 1073741824;\r\n      if (val > 1) {\r\n        return `${val.toFixed(2)} GB`;\r\n      }\r\n      return `${(value / 1048576).toFixed(2)} MB`;\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      return JSON.stringify(value);\r\n    }\r\n    return String(value);\r\n  }\r\n\r\n  dismiss(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\" id=\"showHealthLabel\" *ngIf=\"health\">\r\n    <span class=\"text-capitalize\">{{ health.key }}</span>\r\n  </h4>\r\n\r\n  <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"btn-close\" type=\"button\" (click)=\"dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"modal-body pad\">\r\n  <div *ngIf=\"health\">\r\n    <h5>Properties</h5>\r\n\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-striped\" aria-describedby=\"showHealthLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" class=\"text-start\">Name</th>\r\n            <th scope=\"col\" class=\"text-start\">Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let healthDetail of health.value.details! | keyvalue\">\r\n            <td class=\"text-start\">{{ healthDetail.key }}</td>\r\n            <td class=\"text-start\">{{ readableValue(healthDetail.value) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <button data-dismiss=\"modal\" class=\"btn btn-secondary float-start\" type=\"button\" (click)=\"dismiss()\">Done</button>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}