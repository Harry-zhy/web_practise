{"version":3,"file":"src_main_webapp_app_entities_itinerary-activity_itinerary-activity_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/itinerary-activity/delete/itinerary-activity-delete-dialog.component.ts","./src/main/webapp/app/entities/itinerary-activity/delete/itinerary-activity-delete-dialog.component.html","./src/main/webapp/app/entities/itinerary-activity/detail/itinerary-activity-detail.component.ts","./src/main/webapp/app/entities/itinerary-activity/detail/itinerary-activity-detail.component.html","./src/main/webapp/app/entities/itinerary-activity/itinerary-activity.module.ts","./src/main/webapp/app/entities/itinerary-activity/list/itinerary-activity.component.ts","./src/main/webapp/app/entities/itinerary-activity/list/itinerary-activity.component.html","./src/main/webapp/app/entities/itinerary-activity/route/itinerary-activity-routing-resolve.service.ts","./src/main/webapp/app/entities/itinerary-activity/route/itinerary-activity-routing.module.ts","./src/main/webapp/app/entities/itinerary-activity/service/itinerary-activity.service.ts","./src/main/webapp/app/entities/itinerary-activity/update/itinerary-activity-form.service.ts","./src/main/webapp/app/entities/itinerary-activity/update/itinerary-activity-update.component.ts","./src/main/webapp/app/entities/itinerary-activity/update/itinerary-activity-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryActivity } from '../itinerary-activity.model';\r\nimport { ItineraryActivityService } from '../service/itinerary-activity.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './itinerary-activity-delete-dialog.component.html',\r\n})\r\nexport class ItineraryActivityDeleteDialogComponent {\r\n  itineraryActivity?: IItineraryActivity;\r\n\r\n  constructor(protected itineraryActivityService: ItineraryActivityService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.itineraryActivityService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"itineraryActivity\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(itineraryActivity.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"itineraryActivityDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-itineraryActivity-heading\">Are you sure you want to delete Itinerary Activity {{ itineraryActivity.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-itineraryActivity\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IItineraryActivity } from '../itinerary-activity.model';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-activity-detail',\r\n  templateUrl: './itinerary-activity-detail.component.html',\r\n})\r\nexport class ItineraryActivityDetailComponent implements OnInit {\r\n  itineraryActivity: IItineraryActivity | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryActivity }) => {\r\n      this.itineraryActivity = itineraryActivity;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"itineraryActivity\">\r\n      <h2 data-cy=\"itineraryActivityDetailsHeading\"><span>Itinerary Activity</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryActivity.id }}</span>\r\n        </dd>\r\n        <dt><span>Activity Name</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryActivity.activityName }}</span>\r\n        </dd>\r\n        <dt><span>Activity Cost</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryActivity.activityCost }}</span>\r\n        </dd>\r\n        <dt><span>Activity Host</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryActivity.activityHost }}</span>\r\n        </dd>\r\n        <dt><span>Activity Time</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryActivity.activityTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/itinerary-activity', itineraryActivity.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ItineraryActivityComponent } from './list/itinerary-activity.component';\r\nimport { ItineraryActivityDetailComponent } from './detail/itinerary-activity-detail.component';\r\nimport { ItineraryActivityUpdateComponent } from './update/itinerary-activity-update.component';\r\nimport { ItineraryActivityDeleteDialogComponent } from './delete/itinerary-activity-delete-dialog.component';\r\nimport { ItineraryActivityRoutingModule } from './route/itinerary-activity-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ItineraryActivityRoutingModule],\r\n  declarations: [\r\n    ItineraryActivityComponent,\r\n    ItineraryActivityDetailComponent,\r\n    ItineraryActivityUpdateComponent,\r\n    ItineraryActivityDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class ItineraryActivityModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryActivity } from '../itinerary-activity.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ItineraryActivityService } from '../service/itinerary-activity.service';\r\nimport { ItineraryActivityDeleteDialogComponent } from '../delete/itinerary-activity-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-activity',\r\n  templateUrl: './itinerary-activity.component.html',\r\n})\r\nexport class ItineraryActivityComponent implements OnInit {\r\n  itineraryActivities?: IItineraryActivity[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected itineraryActivityService: ItineraryActivityService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IItineraryActivity): number => this.itineraryActivityService.getItineraryActivityIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(itineraryActivity: IItineraryActivity): void {\r\n    const modalRef = this.modalService.open(ItineraryActivityDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.itineraryActivity = itineraryActivity;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.itineraryActivities = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IItineraryActivity[]): IItineraryActivity[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IItineraryActivity[] | null): IItineraryActivity[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.itineraryActivityService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ItineraryActivityHeading\">\r\n    <span>Itinerary Activities</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-itinerary-activity\"\r\n        [routerLink]=\"['/itinerary-activity/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Itinerary Activity </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"itineraryActivities?.length === 0\">\r\n    <span>No Itinerary Activities found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"itineraryActivities && itineraryActivities.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"activityName\">\r\n            <div class=\"d-flex\">\r\n              <span>Activity Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"activityCost\">\r\n            <div class=\"d-flex\">\r\n              <span>Activity Cost</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"activityHost\">\r\n            <div class=\"d-flex\">\r\n              <span>Activity Host</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"activityTime\">\r\n            <div class=\"d-flex\">\r\n              <span>Activity Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let itineraryActivity of itineraryActivities; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/itinerary-activity', itineraryActivity.id, 'view']\">{{ itineraryActivity.id }}</a>\r\n          </td>\r\n          <td>{{ itineraryActivity.activityName }}</td>\r\n          <td>{{ itineraryActivity.activityCost }}</td>\r\n          <td>{{ itineraryActivity.activityHost }}</td>\r\n          <td>{{ itineraryActivity.activityTime | formatMediumDatetime }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-activity', itineraryActivity.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-activity', itineraryActivity.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(itineraryActivity)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IItineraryActivity } from '../itinerary-activity.model';\r\nimport { ItineraryActivityService } from '../service/itinerary-activity.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryActivityRoutingResolveService implements Resolve<IItineraryActivity | null> {\r\n  constructor(protected service: ItineraryActivityService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IItineraryActivity | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((itineraryActivity: HttpResponse<IItineraryActivity>) => {\r\n          if (itineraryActivity.body) {\r\n            return of(itineraryActivity.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ItineraryActivityComponent } from '../list/itinerary-activity.component';\r\nimport { ItineraryActivityDetailComponent } from '../detail/itinerary-activity-detail.component';\r\nimport { ItineraryActivityUpdateComponent } from '../update/itinerary-activity-update.component';\r\nimport { ItineraryActivityRoutingResolveService } from './itinerary-activity-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst itineraryActivityRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ItineraryActivityComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ItineraryActivityDetailComponent,\r\n    resolve: {\r\n      itineraryActivity: ItineraryActivityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ItineraryActivityUpdateComponent,\r\n    resolve: {\r\n      itineraryActivity: ItineraryActivityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ItineraryActivityUpdateComponent,\r\n    resolve: {\r\n      itineraryActivity: ItineraryActivityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(itineraryActivityRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ItineraryActivityRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IItineraryActivity, NewItineraryActivity } from '../itinerary-activity.model';\r\n\r\nexport type PartialUpdateItineraryActivity = Partial<IItineraryActivity> & Pick<IItineraryActivity, 'id'>;\r\n\r\ntype RestOf<T extends IItineraryActivity | NewItineraryActivity> = Omit<T, 'activityTime'> & {\r\n  activityTime?: string | null;\r\n};\r\n\r\nexport type RestItineraryActivity = RestOf<IItineraryActivity>;\r\n\r\nexport type NewRestItineraryActivity = RestOf<NewItineraryActivity>;\r\n\r\nexport type PartialUpdateRestItineraryActivity = RestOf<PartialUpdateItineraryActivity>;\r\n\r\nexport type EntityResponseType = HttpResponse<IItineraryActivity>;\r\nexport type EntityArrayResponseType = HttpResponse<IItineraryActivity[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryActivityService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/itinerary-activities');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(itineraryActivity: NewItineraryActivity): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryActivity);\r\n    return this.http\r\n      .post<RestItineraryActivity>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(itineraryActivity: IItineraryActivity): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryActivity);\r\n    return this.http\r\n      .put<RestItineraryActivity>(`${this.resourceUrl}/${this.getItineraryActivityIdentifier(itineraryActivity)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(itineraryActivity: PartialUpdateItineraryActivity): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryActivity);\r\n    return this.http\r\n      .patch<RestItineraryActivity>(`${this.resourceUrl}/${this.getItineraryActivityIdentifier(itineraryActivity)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestItineraryActivity>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestItineraryActivity[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getItineraryActivityIdentifier(itineraryActivity: Pick<IItineraryActivity, 'id'>): number {\r\n    return itineraryActivity.id;\r\n  }\r\n\r\n  compareItineraryActivity(o1: Pick<IItineraryActivity, 'id'> | null, o2: Pick<IItineraryActivity, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getItineraryActivityIdentifier(o1) === this.getItineraryActivityIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addItineraryActivityToCollectionIfMissing<Type extends Pick<IItineraryActivity, 'id'>>(\r\n    itineraryActivityCollection: Type[],\r\n    ...itineraryActivitiesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const itineraryActivities: Type[] = itineraryActivitiesToCheck.filter(isPresent);\r\n    if (itineraryActivities.length > 0) {\r\n      const itineraryActivityCollectionIdentifiers = itineraryActivityCollection.map(\r\n        itineraryActivityItem => this.getItineraryActivityIdentifier(itineraryActivityItem)!\r\n      );\r\n      const itineraryActivitiesToAdd = itineraryActivities.filter(itineraryActivityItem => {\r\n        const itineraryActivityIdentifier = this.getItineraryActivityIdentifier(itineraryActivityItem);\r\n        if (itineraryActivityCollectionIdentifiers.includes(itineraryActivityIdentifier)) {\r\n          return false;\r\n        }\r\n        itineraryActivityCollectionIdentifiers.push(itineraryActivityIdentifier);\r\n        return true;\r\n      });\r\n      return [...itineraryActivitiesToAdd, ...itineraryActivityCollection];\r\n    }\r\n    return itineraryActivityCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IItineraryActivity | NewItineraryActivity | PartialUpdateItineraryActivity>(\r\n    itineraryActivity: T\r\n  ): RestOf<T> {\r\n    return {\r\n      ...itineraryActivity,\r\n      activityTime: itineraryActivity.activityTime?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restItineraryActivity: RestItineraryActivity): IItineraryActivity {\r\n    return {\r\n      ...restItineraryActivity,\r\n      activityTime: restItineraryActivity.activityTime ? dayjs(restItineraryActivity.activityTime) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestItineraryActivity>): HttpResponse<IItineraryActivity> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestItineraryActivity[]>): HttpResponse<IItineraryActivity[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { IItineraryActivity, NewItineraryActivity } from '../itinerary-activity.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IItineraryActivity for edit and NewItineraryActivityFormGroupInput for create.\r\n */\r\ntype ItineraryActivityFormGroupInput = IItineraryActivity | PartialWithRequiredKeyOf<NewItineraryActivity>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends IItineraryActivity | NewItineraryActivity> = Omit<T, 'activityTime'> & {\r\n  activityTime?: string | null;\r\n};\r\n\r\ntype ItineraryActivityFormRawValue = FormValueOf<IItineraryActivity>;\r\n\r\ntype NewItineraryActivityFormRawValue = FormValueOf<NewItineraryActivity>;\r\n\r\ntype ItineraryActivityFormDefaults = Pick<NewItineraryActivity, 'id' | 'activityTime'>;\r\n\r\ntype ItineraryActivityFormGroupContent = {\r\n  id: FormControl<ItineraryActivityFormRawValue['id'] | NewItineraryActivity['id']>;\r\n  activityName: FormControl<ItineraryActivityFormRawValue['activityName']>;\r\n  activityCost: FormControl<ItineraryActivityFormRawValue['activityCost']>;\r\n  activityHost: FormControl<ItineraryActivityFormRawValue['activityHost']>;\r\n  activityTime: FormControl<ItineraryActivityFormRawValue['activityTime']>;\r\n};\r\n\r\nexport type ItineraryActivityFormGroup = FormGroup<ItineraryActivityFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryActivityFormService {\r\n  createItineraryActivityFormGroup(itineraryActivity: ItineraryActivityFormGroupInput = { id: null }): ItineraryActivityFormGroup {\r\n    const itineraryActivityRawValue = this.convertItineraryActivityToItineraryActivityRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryActivity,\r\n    });\r\n    return new FormGroup<ItineraryActivityFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: itineraryActivityRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      activityName: new FormControl(itineraryActivityRawValue.activityName),\r\n      activityCost: new FormControl(itineraryActivityRawValue.activityCost),\r\n      activityHost: new FormControl(itineraryActivityRawValue.activityHost),\r\n      activityTime: new FormControl(itineraryActivityRawValue.activityTime),\r\n    });\r\n  }\r\n\r\n  getItineraryActivity(form: ItineraryActivityFormGroup): IItineraryActivity | NewItineraryActivity {\r\n    return this.convertItineraryActivityRawValueToItineraryActivity(\r\n      form.getRawValue() as ItineraryActivityFormRawValue | NewItineraryActivityFormRawValue\r\n    );\r\n  }\r\n\r\n  resetForm(form: ItineraryActivityFormGroup, itineraryActivity: ItineraryActivityFormGroupInput): void {\r\n    const itineraryActivityRawValue = this.convertItineraryActivityToItineraryActivityRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryActivity,\r\n    });\r\n    form.reset(\r\n      {\r\n        ...itineraryActivityRawValue,\r\n        id: { value: itineraryActivityRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ItineraryActivityFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      activityTime: currentTime,\r\n    };\r\n  }\r\n\r\n  private convertItineraryActivityRawValueToItineraryActivity(\r\n    rawItineraryActivity: ItineraryActivityFormRawValue | NewItineraryActivityFormRawValue\r\n  ): IItineraryActivity | NewItineraryActivity {\r\n    return {\r\n      ...rawItineraryActivity,\r\n      activityTime: dayjs(rawItineraryActivity.activityTime, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertItineraryActivityToItineraryActivityRawValue(\r\n    itineraryActivity: IItineraryActivity | (Partial<NewItineraryActivity> & ItineraryActivityFormDefaults)\r\n  ): ItineraryActivityFormRawValue | PartialWithRequiredKeyOf<NewItineraryActivityFormRawValue> {\r\n    return {\r\n      ...itineraryActivity,\r\n      activityTime: itineraryActivity.activityTime ? itineraryActivity.activityTime.format(DATE_TIME_FORMAT) : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ItineraryActivityFormService, ItineraryActivityFormGroup } from './itinerary-activity-form.service';\r\nimport { IItineraryActivity } from '../itinerary-activity.model';\r\nimport { ItineraryActivityService } from '../service/itinerary-activity.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-activity-update',\r\n  templateUrl: './itinerary-activity-update.component.html',\r\n})\r\nexport class ItineraryActivityUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  itineraryActivity: IItineraryActivity | null = null;\r\n\r\n  editForm: ItineraryActivityFormGroup = this.itineraryActivityFormService.createItineraryActivityFormGroup();\r\n\r\n  constructor(\r\n    protected itineraryActivityService: ItineraryActivityService,\r\n    protected itineraryActivityFormService: ItineraryActivityFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryActivity }) => {\r\n      this.itineraryActivity = itineraryActivity;\r\n      if (itineraryActivity) {\r\n        this.updateForm(itineraryActivity);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const itineraryActivity = this.itineraryActivityFormService.getItineraryActivity(this.editForm);\r\n    if (itineraryActivity.id !== null) {\r\n      this.subscribeToSaveResponse(this.itineraryActivityService.update(itineraryActivity));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.itineraryActivityService.create(itineraryActivity));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IItineraryActivity>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(itineraryActivity: IItineraryActivity): void {\r\n    this.itineraryActivity = itineraryActivity;\r\n    this.itineraryActivityFormService.resetForm(this.editForm, itineraryActivity);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-itinerary-activity-heading\" data-cy=\"ItineraryActivityCreateUpdateHeading\">Create or edit a Itinerary Activity</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_activityName\">Activity Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"activityName\"\r\n            id=\"field_activityName\"\r\n            data-cy=\"activityName\"\r\n            formControlName=\"activityName\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_activityCost\">Activity Cost</label>\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            name=\"activityCost\"\r\n            id=\"field_activityCost\"\r\n            data-cy=\"activityCost\"\r\n            formControlName=\"activityCost\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_activityHost\">Activity Host</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"activityHost\"\r\n            id=\"field_activityHost\"\r\n            data-cy=\"activityHost\"\r\n            formControlName=\"activityHost\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_activityTime\">Activity Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_activityTime\"\r\n              data-cy=\"activityTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"activityTime\"\r\n              formControlName=\"activityTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}