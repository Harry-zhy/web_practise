{"version":3,"file":"src_main_webapp_app_entities_activity-company_activity-company_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/activity-company/activity-company.module.ts","./src/main/webapp/app/entities/activity-company/delete/activity-company-delete-dialog.component.ts","./src/main/webapp/app/entities/activity-company/delete/activity-company-delete-dialog.component.html","./src/main/webapp/app/entities/activity-company/detail/activity-company-detail.component.ts","./src/main/webapp/app/entities/activity-company/detail/activity-company-detail.component.html","./src/main/webapp/app/entities/activity-company/list/activity-company.component.ts","./src/main/webapp/app/entities/activity-company/list/activity-company.component.html","./src/main/webapp/app/entities/activity-company/route/activity-company-routing-resolve.service.ts","./src/main/webapp/app/entities/activity-company/route/activity-company-routing.module.ts","./src/main/webapp/app/entities/activity-company/update/activity-company-form.service.ts","./src/main/webapp/app/entities/activity-company/update/activity-company-update.component.ts","./src/main/webapp/app/entities/activity-company/update/activity-company-update.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ActivityCompanyComponent } from './list/activity-company.component';\r\nimport { ActivityCompanyDetailComponent } from './detail/activity-company-detail.component';\r\nimport { ActivityCompanyUpdateComponent } from './update/activity-company-update.component';\r\nimport { ActivityCompanyDeleteDialogComponent } from './delete/activity-company-delete-dialog.component';\r\nimport { ActivityCompanyRoutingModule } from './route/activity-company-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ActivityCompanyRoutingModule],\r\n  declarations: [\r\n    ActivityCompanyComponent,\r\n    ActivityCompanyDetailComponent,\r\n    ActivityCompanyUpdateComponent,\r\n    ActivityCompanyDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class ActivityCompanyModule {}\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IActivityCompany } from '../activity-company.model';\r\nimport { ActivityCompanyService } from '../service/activity-company.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './activity-company-delete-dialog.component.html',\r\n})\r\nexport class ActivityCompanyDeleteDialogComponent {\r\n  activityCompany?: IActivityCompany;\r\n\r\n  constructor(protected activityCompanyService: ActivityCompanyService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.activityCompanyService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"activityCompany\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(activityCompany.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"activityCompanyDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-activityCompany-heading\">Are you sure you want to delete Activity Company {{ activityCompany.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-activityCompany\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IActivityCompany } from '../activity-company.model';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-company-detail',\r\n  templateUrl: './activity-company-detail.component.html',\r\n})\r\nexport class ActivityCompanyDetailComponent implements OnInit {\r\n  activityCompany: IActivityCompany | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ activityCompany }) => {\r\n      this.activityCompany = activityCompany;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"activityCompany\">\r\n      <h2 data-cy=\"activityCompanyDetailsHeading\"><span>Activity Company</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ activityCompany.id }}</span>\r\n        </dd>\r\n        <dt><span>Name</span></dt>\r\n        <dd>\r\n          <span>{{ activityCompany.name }}</span>\r\n        </dd>\r\n        <dt><span>About</span></dt>\r\n        <dd>\r\n          <span>{{ activityCompany.about }}</span>\r\n        </dd>\r\n        <dt><span>Supplier</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"activityCompany.supplier\">\r\n            <a [routerLink]=\"['/supplier', activityCompany.supplier.id, 'view']\">{{ activityCompany.supplier.id }}</a>\r\n          </div>\r\n        </dd>\r\n        <dt><span>Booked Activity</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"activityCompany.bookedActivity\">\r\n            <a [routerLink]=\"['/booked-activity', activityCompany.bookedActivity.id, 'view']\">{{ activityCompany.bookedActivity.id }}</a>\r\n          </div>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/activity-company', activityCompany.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IActivityCompany } from '../activity-company.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ActivityCompanyService } from '../service/activity-company.service';\r\nimport { ActivityCompanyDeleteDialogComponent } from '../delete/activity-company-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-company',\r\n  templateUrl: './activity-company.component.html',\r\n})\r\nexport class ActivityCompanyComponent implements OnInit {\r\n  activityCompanies?: IActivityCompany[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected activityCompanyService: ActivityCompanyService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IActivityCompany): number => this.activityCompanyService.getActivityCompanyIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(activityCompany: IActivityCompany): void {\r\n    const modalRef = this.modalService.open(ActivityCompanyDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.activityCompany = activityCompany;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.activityCompanies = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IActivityCompany[]): IActivityCompany[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IActivityCompany[] | null): IActivityCompany[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.activityCompanyService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ActivityCompanyHeading\">\r\n    <span>Activity Companies</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-activity-company\"\r\n        [routerLink]=\"['/activity-company/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Activity Company </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"activityCompanies?.length === 0\">\r\n    <span>No Activity Companies found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"activityCompanies && activityCompanies.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"name\">\r\n            <div class=\"d-flex\">\r\n              <span>Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"about\">\r\n            <div class=\"d-flex\">\r\n              <span>About</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"supplier.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Supplier</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"bookedActivity.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Booked Activity</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let activityCompany of activityCompanies; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/activity-company', activityCompany.id, 'view']\">{{ activityCompany.id }}</a>\r\n          </td>\r\n          <td>{{ activityCompany.name }}</td>\r\n          <td>{{ activityCompany.about }}</td>\r\n          <td>\r\n            <div *ngIf=\"activityCompany.supplier\">\r\n              <a [routerLink]=\"['/supplier', activityCompany.supplier.id, 'view']\">{{ activityCompany.supplier.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div *ngIf=\"activityCompany.bookedActivity\">\r\n              <a [routerLink]=\"['/booked-activity', activityCompany.bookedActivity.id, 'view']\">{{ activityCompany.bookedActivity.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/activity-company', activityCompany.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/activity-company', activityCompany.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(activityCompany)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IActivityCompany } from '../activity-company.model';\r\nimport { ActivityCompanyService } from '../service/activity-company.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivityCompanyRoutingResolveService implements Resolve<IActivityCompany | null> {\r\n  constructor(protected service: ActivityCompanyService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IActivityCompany | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((activityCompany: HttpResponse<IActivityCompany>) => {\r\n          if (activityCompany.body) {\r\n            return of(activityCompany.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ActivityCompanyComponent } from '../list/activity-company.component';\r\nimport { ActivityCompanyDetailComponent } from '../detail/activity-company-detail.component';\r\nimport { ActivityCompanyUpdateComponent } from '../update/activity-company-update.component';\r\nimport { ActivityCompanyRoutingResolveService } from './activity-company-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst activityCompanyRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ActivityCompanyComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ActivityCompanyDetailComponent,\r\n    resolve: {\r\n      activityCompany: ActivityCompanyRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ActivityCompanyUpdateComponent,\r\n    resolve: {\r\n      activityCompany: ActivityCompanyRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ActivityCompanyUpdateComponent,\r\n    resolve: {\r\n      activityCompany: ActivityCompanyRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(activityCompanyRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ActivityCompanyRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { IActivityCompany, NewActivityCompany } from '../activity-company.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IActivityCompany for edit and NewActivityCompanyFormGroupInput for create.\r\n */\r\ntype ActivityCompanyFormGroupInput = IActivityCompany | PartialWithRequiredKeyOf<NewActivityCompany>;\r\n\r\ntype ActivityCompanyFormDefaults = Pick<NewActivityCompany, 'id'>;\r\n\r\ntype ActivityCompanyFormGroupContent = {\r\n  id: FormControl<IActivityCompany['id'] | NewActivityCompany['id']>;\r\n  name: FormControl<IActivityCompany['name']>;\r\n  about: FormControl<IActivityCompany['about']>;\r\n  supplier: FormControl<IActivityCompany['supplier']>;\r\n  bookedActivity: FormControl<IActivityCompany['bookedActivity']>;\r\n};\r\n\r\nexport type ActivityCompanyFormGroup = FormGroup<ActivityCompanyFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivityCompanyFormService {\r\n  createActivityCompanyFormGroup(activityCompany: ActivityCompanyFormGroupInput = { id: null }): ActivityCompanyFormGroup {\r\n    const activityCompanyRawValue = {\r\n      ...this.getFormDefaults(),\r\n      ...activityCompany,\r\n    };\r\n    return new FormGroup<ActivityCompanyFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: activityCompanyRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      name: new FormControl(activityCompanyRawValue.name, {\r\n        validators: [Validators.required],\r\n      }),\r\n      about: new FormControl(activityCompanyRawValue.about),\r\n      supplier: new FormControl(activityCompanyRawValue.supplier),\r\n      bookedActivity: new FormControl(activityCompanyRawValue.bookedActivity),\r\n    });\r\n  }\r\n\r\n  getActivityCompany(form: ActivityCompanyFormGroup): IActivityCompany | NewActivityCompany {\r\n    return form.getRawValue() as IActivityCompany | NewActivityCompany;\r\n  }\r\n\r\n  resetForm(form: ActivityCompanyFormGroup, activityCompany: ActivityCompanyFormGroupInput): void {\r\n    const activityCompanyRawValue = { ...this.getFormDefaults(), ...activityCompany };\r\n    form.reset(\r\n      {\r\n        ...activityCompanyRawValue,\r\n        id: { value: activityCompanyRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ActivityCompanyFormDefaults {\r\n    return {\r\n      id: null,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { ActivityCompanyFormService, ActivityCompanyFormGroup } from './activity-company-form.service';\r\nimport { IActivityCompany } from '../activity-company.model';\r\nimport { ActivityCompanyService } from '../service/activity-company.service';\r\nimport { ISupplier } from 'app/entities/supplier/supplier.model';\r\nimport { SupplierService } from 'app/entities/supplier/service/supplier.service';\r\nimport { IBookedActivity } from 'app/entities/booked-activity/booked-activity.model';\r\nimport { BookedActivityService } from 'app/entities/booked-activity/service/booked-activity.service';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-company-update',\r\n  templateUrl: './activity-company-update.component.html',\r\n})\r\nexport class ActivityCompanyUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  activityCompany: IActivityCompany | null = null;\r\n\r\n  suppliersCollection: ISupplier[] = [];\r\n  bookedActivitiesSharedCollection: IBookedActivity[] = [];\r\n\r\n  editForm: ActivityCompanyFormGroup = this.activityCompanyFormService.createActivityCompanyFormGroup();\r\n\r\n  constructor(\r\n    protected activityCompanyService: ActivityCompanyService,\r\n    protected activityCompanyFormService: ActivityCompanyFormService,\r\n    protected supplierService: SupplierService,\r\n    protected bookedActivityService: BookedActivityService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  compareSupplier = (o1: ISupplier | null, o2: ISupplier | null): boolean => this.supplierService.compareSupplier(o1, o2);\r\n\r\n  compareBookedActivity = (o1: IBookedActivity | null, o2: IBookedActivity | null): boolean =>\r\n    this.bookedActivityService.compareBookedActivity(o1, o2);\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ activityCompany }) => {\r\n      this.activityCompany = activityCompany;\r\n      if (activityCompany) {\r\n        this.updateForm(activityCompany);\r\n      }\r\n\r\n      this.loadRelationshipsOptions();\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const activityCompany = this.activityCompanyFormService.getActivityCompany(this.editForm);\r\n    if (activityCompany.id !== null) {\r\n      this.subscribeToSaveResponse(this.activityCompanyService.update(activityCompany));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.activityCompanyService.create(activityCompany));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IActivityCompany>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(activityCompany: IActivityCompany): void {\r\n    this.activityCompany = activityCompany;\r\n    this.activityCompanyFormService.resetForm(this.editForm, activityCompany);\r\n\r\n    this.suppliersCollection = this.supplierService.addSupplierToCollectionIfMissing<ISupplier>(\r\n      this.suppliersCollection,\r\n      activityCompany.supplier\r\n    );\r\n    this.bookedActivitiesSharedCollection = this.bookedActivityService.addBookedActivityToCollectionIfMissing<IBookedActivity>(\r\n      this.bookedActivitiesSharedCollection,\r\n      activityCompany.bookedActivity\r\n    );\r\n  }\r\n\r\n  protected loadRelationshipsOptions(): void {\r\n    this.supplierService\r\n      .query({ filter: 'activitycompany-is-null' })\r\n      .pipe(map((res: HttpResponse<ISupplier[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((suppliers: ISupplier[]) =>\r\n          this.supplierService.addSupplierToCollectionIfMissing<ISupplier>(suppliers, this.activityCompany?.supplier)\r\n        )\r\n      )\r\n      .subscribe((suppliers: ISupplier[]) => (this.suppliersCollection = suppliers));\r\n\r\n    this.bookedActivityService\r\n      .query()\r\n      .pipe(map((res: HttpResponse<IBookedActivity[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((bookedActivities: IBookedActivity[]) =>\r\n          this.bookedActivityService.addBookedActivityToCollectionIfMissing<IBookedActivity>(\r\n            bookedActivities,\r\n            this.activityCompany?.bookedActivity\r\n          )\r\n        )\r\n      )\r\n      .subscribe((bookedActivities: IBookedActivity[]) => (this.bookedActivitiesSharedCollection = bookedActivities));\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-activity-company-heading\" data-cy=\"ActivityCompanyCreateUpdateHeading\">Create or edit a Activity Company</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_name\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"name\" id=\"field_name\" data-cy=\"name\" formControlName=\"name\" />\r\n          <div *ngIf=\"editForm.get('name')!.invalid && (editForm.get('name')!.dirty || editForm.get('name')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.required\"> This field is required. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_about\">About</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"about\" id=\"field_about\" data-cy=\"about\" formControlName=\"about\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_supplier\">Supplier</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_supplier\"\r\n            data-cy=\"supplier\"\r\n            name=\"supplier\"\r\n            formControlName=\"supplier\"\r\n            [compareWith]=\"compareSupplier\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"supplierOption\" *ngFor=\"let supplierOption of suppliersCollection\">{{ supplierOption.id }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_bookedActivity\">Booked Activity</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_bookedActivity\"\r\n            data-cy=\"bookedActivity\"\r\n            name=\"bookedActivity\"\r\n            formControlName=\"bookedActivity\"\r\n            [compareWith]=\"compareBookedActivity\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"bookedActivityOption\" *ngFor=\"let bookedActivityOption of bookedActivitiesSharedCollection\">\r\n              {{ bookedActivityOption.id }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}