{"version":3,"file":"src_main_webapp_app_admin_user-management_user-management_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAA,0EAA6E;IAAxC,sTAAY,iGAA0B,KAAC;IAC1E;IAAA,yEAA0B;IACxB;IAAA,wEAAwB;IAAA,mFAAwB;IAAA,4DAAK;IAErD;IAAA,4EAAmG;IAAnB,kTAAS,yEAAQ,KAAC;IAAC,iEAAO;IAAA,4DAAS;IACrH;IAAA,4DAAM;IAEN;IAAA,0EAAwB;IACtB;IAAA,8EAAmC;IAEnC;IAAA,qEAAG;IAAA,wDAAsD;IAAA,4DAAI;IAC/D;IAAA,4DAAM;IAEN;IAAA,0EAA0B;IACxB;IAAA,6EAAwF;IAAnB,mTAAS,yEAAQ,KAAC;IACrF;IAAA,yEAA8B;IAAA,kEAAM;IAAA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACzD;IAAA,4DAAS;IAET;IAAA,6EAA6C;IAAA,0EAAgC;IAAA,kEAAM;IAAA,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACxG;IAAA,4DAAM;IACR;IAAA,4DAAO;;;IAVA,2DAAsD;IAAtD,iIAAsD;;ADAtD,MAAM,mCAAmC;IAG9C,YAAoB,WAAkC,EAAU,WAA2B;QAAvE,gBAAW,GAAX,WAAW,CAAuB;QAAU,gBAAW,GAAX,WAAW,CAAgB;IAAG,CAAC;IAE/F,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;;sHAbU,mCAAmC;iIAAnC,mCAAmC;QCVhD,kIAoBO;QACP;;QArBO,0EAAU;;;;;;;;;;;;;;;;;;;;;;;;;IEYP,2EAAsD;IAAA,oEAAS;IAAA,4DAAO;;;IACtE,2EAAsD;IAAA,sEAAW;IAAA,4DAAO;;;IA2BtE,qEAA+C;IAC7C;IAAA,2EAA4B;IAAA,uDAAe;IAAA,4DAAO;IACpD;IAAA,4DAAK;;;IADyB,0DAAe;IAAf,6EAAe;;;IAvCrD,sEAAkB;IAChB;IAAA,qEAAI;IACF;IAAA,uEAAM;IAAA,+DAAI;IAAA,4DAAO;IAAC,6DAAC;IAAA,yEAAQ;IAAA,uDAAgB;IAAA,4DAC1C;IAAA,oEACH;IAAA,4DAAK;IAEL;IAAA,yEAAqC;IACnC;IAAA,sEAAI;IAAM,iEAAK;IAAA,4DAAO;IACtB;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAgB;IAAA,4DAAO;IAC7B;IAAA,mIAAsE;IACtE;IAAA,mIAAwE;IAC1E;IAAA,4DAAK;IAEL;IAAA,sEAAI;IAAM,sEAAU;IAAA,4DAAO;IAC3B;IAAA,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAE7B;IAAA,sEAAI;IAAM,qEAAS;IAAA,4DAAO;IAC1B;IAAA,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAE5B;IAAA,sEAAI;IAAM,iEAAK;IAAA,4DAAO;IACtB;IAAA,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IAEzB;IAAA,sEAAI;IAAM,sEAAU;IAAA,4DAAO;IAC3B;IAAA,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAE7B;IAAA,sEAAI;IAAM,wEAAY;IAAA,4DAAO;IAC7B;IAAA,sEAAI;IAAA,wDAA+C;;IAAA,4DAAK;IAExD;IAAA,sEAAI;IAAM,uEAAW;IAAA,4DAAO;IAC5B;IAAA,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAElC;IAAA,sEAAI;IAAM,yEAAa;IAAA,4DAAO;IAC9B;IAAA,sEAAI;IAAA,wDAAoD;;IAAA,4DAAK;IAE7D;IAAA,sEAAI;IAAM,oEAAQ;IAAA,4DAAO;IACzB;IAAA,sEAAI;IACF;IAAA,yEAA0B;IACxB;IAAA,+HAEK;IACP;IAAA,4DAAK;IACP;IAAA,4DAAK;IACP;IAAA,4DAAK;IAEL;IAAA,6EAA+D;IAAA,yEAAqC;IAAA,kEAAM;IAAA,wEAAM;IAAA,gEAAI;IAAA,4DAAO;IAC7H;IAAA,4DAAM;;;IA5CyB,0DAAgB;IAAhB,kFAAgB;IAOnC,2DAAgB;IAAhB,kFAAgB;IACf,0DAAoB;IAApB,uFAAoB;IACpB,0DAAqB;IAArB,wFAAqB;IAI1B,0DAAoB;IAApB,sFAAoB;IAGpB,0DAAmB;IAAnB,qFAAmB;IAGnB,0DAAgB;IAAhB,kFAAgB;IAGhB,0DAAoB;IAApB,sFAAoB;IAGpB,0DAA+C;IAA/C,6KAA+C;IAG/C,0DAAyB;IAAzB,2FAAyB;IAGzB,0DAAoD;IAApD,kLAAoD;IAK1B,2DAAmB;IAAnB,4FAAmB;;AD/BlD,MAAM,6BAA6B;IAGxC,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAFzC,SAAI,GAAgB,IAAI,CAAC;IAEmB,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;;0GATU,6BAA6B;2HAA7B,6BAA6B;QCT1C,yEAA2C;QACzC;QAAA,yEAAmB;QACjB;QAAA,2HA8CM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QAjDU,0DAAU;QAAV,0EAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCiB;AAG4B;AACC;AAKsC;;;;;;;;;;;;;;;IC8B5F,8EAA8F;IAAxD,6ZAAS,qFAAgB,IAAI,CAAC,KAAC;IAAyB,uEAAW;IAAA,6DAAS;;;;IAClH,8EAKC;IAHC,8ZAAS,sFAAgB,KAAK,CAAC,KAAC;IAIhC,mGACF;IAAA,6DAAS;;;;IAHP,8IAAmE;;;IAMrE,uEAAgD;IAC9C;IAAA,4EAA4B;IAAA,wDAAe;IAAA,6DAAO;IACpD;IAAA,6DAAM;;;IADwB,2DAAe;IAAf,+EAAe;;;;;;IAnBjD,sEAAuD;IACrD;IAAA,sEAAI;IACF;IAAA,yEAA6C;IAAA,wDAAa;IAAA,6DAAI;IAChE;IAAA,6DAAK;IACL;IAAA,sEAAI;IAAA,wDAAgB;IAAA,6DAAK;IACzB;IAAA,uEAAI;IAAA,yDAAgB;IAAA,6DAAK;IACzB;IAAA,uEAAI;IACF;IAAA,kJAAkH;IAClH;IAAA,kJAOS;IACX;IAAA,6DAAK;IACL;IAAA,uEAAI;IACF;IAAA,4IAEM;IACR;IAAA,6DAAK;IACL;IAAA,uEAAI;IAAA,yDAA+C;;IAAA,6DAAK;IACxD;IAAA,uEAAI;IAAA,yDAAyB;IAAA,6DAAK;IAClC;IAAA,uEAAI;IAAA,yDAAoD;;IAAA,6DAAK;IAC7D;IAAA,2EAAqB;IACnB;IAAA,4EAAuB;IACrB;IAAA,+EAA4F;IAC1F;IAAA,2EAA8B;IAC9B;IAAA,6EAAiC;IAAA,iEAAI;IAAA,6DAAO;IAC9C;IAAA,6DAAS;IAET;IAAA,+EAA2H;IACzH;IAAA,2EAAqC;IACrC;IAAA,6EAAiC;IAAA,iEAAI;IAAA,6DAAO;IAC9C;IAAA,6DAAS;IAET;IAAA,+EAKC;IAHC,sXAAS,sFAAgB,KAAC;IAI1B;IAAA,2EAAgC;IAChC;IAAA,6EAAiC;IAAA,mEAAM;IAAA,6DAAO;IAChD;IAAA,6DAAS;IACX;IAAA,6DAAM;IACR;IAAA,6DAAK;IACP;IAAA,6DAAK;;;;IA9CE,2DAAyC;IAAzC,+JAAyC;IAAC,2DAAa;IAAb,4EAAa;IAExD,2DAAgB;IAAhB,+EAAgB;IAChB,2DAAgB;IAAhB,+EAAgB;IAEqD,2DAAqB;IAArB,qFAAqB;IAIzF,2DAAoB;IAApB,oFAAoB;IAOI,2DAAmB;IAAnB,yFAAmB;IAI5C,2DAA+C;IAA/C,2KAA+C;IAC/C,2DAAyB;IAAzB,wFAAyB;IACzB,2DAAoD;IAApD,gLAAoD;IAG9B,2DAAyC;IAAzC,+JAAyC;IAKzC,2DAAyC;IAAzC,+JAAyC;IAS7D,2DAAmE;IAAnE,8IAAmE;;;IA1C7E,yEAAqB;IACnB;IAAA,qIAgDK;IACP;IAAA,6DAAQ;;;IAjDe,2DAAU;IAAV,kFAAU;;;;IAhBrC,0EAA4C;IAC1C;IAAA,4EAAmF;IACjF;IAAA,yEAAO;IACL;IAAA,0EAA4F;IAAhF,2ZAAyB,0lBAAyC,+EAAY,KAArD;IACnC;IAAA,0EAA+B;IAAM,+DAAE;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IACnF;IAAA,2EAAkC;IAAM,kEAAK;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IACzF;IAAA,2EAAkC;IAAM,kEAAK;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IACzF;IAAA,sEAAqB;IACrB;IAAA,2EAAgB;IAAM,qEAAQ;IAAA,6DAAO;IACrC;IAAA,2EAAwC;IAAM,yEAAY;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IACtG;IAAA,2EAA2C;IAAM,wEAAW;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IACxG;IAAA,2EAA6C;IAAM,0EAAa;IAAA,6DAAO;IAAC;IAAA,2EAA+B;IAAA,6DAAK;IAC5G;IAAA,sEAAqB;IACvB;IAAA,6DAAK;IACP;IAAA,6DAAQ;IACR;IAAA,iIAkDQ;IACV;IAAA,6DAAQ;IACV;IAAA,6DAAM;;;IAhEY,2DAAyB;IAAzB,wFAAyB;IAY/B,4DAAW;IAAX,+EAAW;;;;;IAsDvB,uEAAmB;IACjB;IAAA,2EAA2C;IACzC;IAAA,iFAA+G;IACjH;IAAA,6DAAM;IAEN;IAAA,2EAA2C;IACzC;IAAA,sFAQC;IANC,wZAAe,oQAKD,+EAAY,KALX;IAMhB,6DAAiB;IACpB;IAAA,6DAAM;IACR;IAAA,6DAAM;;;IAdc,2DAA6E;IAA7E,gMAA6E;IAK3F,2DAA6B;IAA7B,8FAA6B;;;AD7E9B,MAAM,uBAAuB;IAUlC,YACU,WAAkC,EAClC,cAA8B,EAC9B,cAA8B,EAC9B,MAAc,EACd,YAAsB;QAJtB,gBAAW,GAAX,WAAW,CAAuB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAU;QAdhC,mBAAc,GAAmB,IAAI,CAAC;QACtC,UAAK,GAAkB,IAAI,CAAC;QAC5B,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,CAAC,CAAC;QACf,iBAAY,GAAG,2EAAc,CAAC;IAW3B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,IAAU,EAAE,WAAoB;QACxC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,IAAU;QACtC,OAAO,IAAI,CAAC,EAAG,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gHAAmC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACjH,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;QACvC,iEAAiE;QACjE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW;aACb,KAAK,CAAC;YACL,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;YACnB,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SAClB,CAAC;aACD,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAyB,EAAE,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC;YACD,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;YAC3B,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM;YACtC,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,gEAAG,CAAC,CAAC,CAAC,iEAAI,EAAE;aACzD;SACF,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB;QACtB,oDAAa,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;YACxG,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,iEAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,gEAAG,CAAC;YACjC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,IAAI;QACV,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,gEAAG,CAAC,CAAC,CAAC,iEAAI,EAAE,CAAC,CAAC;QACpE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,SAAS,CAAC,KAAoB,EAAE,OAAoB;QAC1D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;;8FA3FU,uBAAuB;sHAAvB,uBAAuB;QClBpC,uEAAK;QACH;QAAA,sEAAI;QACF;QAAA,2EAA4E;QAAA,iEAAK;QAAA,6DAAO;QAExF;QAAA,0EAAwC;QACtC;QAAA,6EAA6E;QAA3C,gJAAS,aAAS,IAAC;QACnD;QAAA,0EAAkD;QAClD;QAAA,yEAAM;QAAA,yEAAY;QAAA,6DAAO;QAC3B;QAAA,6DAAS;QACT;QAAA,8EAA0E;QACxE;QAAA,0EAA+B;QAAC;QAAA,yEAAM;QAAA,8EAAiB;QAAA,6DAAO;QAChE;QAAA,6DAAS;QACX;QAAA,6DAAM;QACR;QAAA,6DAAK;QAEL;QAAA,+EAAmC;QAEnC;QAAA,yEAAuB;QAEvB;QAAA,uHAmEM;QAEN;QAAA,wHAgBM;QACR;QAAA,6DAAM;QACN;;QArG4D,2DAAsB;QAAtB,oFAAsB;QACrD,2DAAkB;QAAlB,gFAAkB;QAGQ,2DAAwB;QAAxB,+IAAwB;QAU9C,4DAAW;QAAX,4EAAW;QAqEpC,2DAAW;QAAX,4EAAW;;;;;;;;;;;;;;;;;;;;ACnFiD;;;;AAK7D,MAAM,qBAAqB;IAGhC,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAFxF,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;IAEa,CAAC;IAEpG,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,CAAC,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,KAAK,CAAC,GAAgB;QACpB,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAClG,CAAC;;0FA5BU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;;;ACRoC;;;;;;;;;ICgB1D,4EAAqF;IAAC,oFAAwB;IAAA,4DAAQ;;;IAEtH,4EAAsF;IACpF,oIACF;IAAA,4DAAQ;;;IAER,4EAAoF;IAClF,sJACF;IAAA,4DAAQ;;;IATV,sEAAgH;IAC9G;IAAA,qIAAsH;IAEtH;IAAA,qIAEQ;IAER;IAAA,qIAEQ;IACV;IAAA,4DAAM;;;;;;IATkC,0DAA6C;IAA7C,mLAA6C;IAE7C,0DAA8C;IAA9C,oLAA8C;IAI9C,0DAA4C;IAA5C,kLAA4C;;;IAWlF,4EAA0F;IACxF,oIACF;IAAA,4DAAQ;;;IAHV,sEAA4H;IAC1H;IAAA,qIAEQ;IACV;IAAA,4DAAM;;;;IAHkC,0DAAkD;IAAlD,wLAAkD;;;IAWxF,4EAAyF;IACvF,oIACF;IAAA,4DAAQ;;;IAHV,sEAAyH;IACvH;IAAA,qIAEQ;IACV;IAAA,4DAAM;;;;IAHkC,0DAAiD;IAAjD,uLAAiD;;;IAWvF,4EAAqF;IAAC,oFAAwB;IAAA,4DAAQ;;;IAEtH,4EAAsF;IACpF,qIACF;IAAA,4DAAQ;;;IAER,4EAAsF;IACpF,wIACF;IAAA,4DAAQ;;;IAER,4EAAkF;IAAC,mFAAuB;IAAA,4DAAQ;;;IAXpH,sEAAgH;IAC9G;IAAA,qIAAsH;IAEtH;IAAA,qIAEQ;IAER;IAAA,qIAEQ;IAER;IAAA,qIAAkH;IACpH;IAAA,4DAAM;;;;;;;IAXkC,0DAA6C;IAA7C,mLAA6C;IAE7C,0DAA8C;IAA9C,oLAA8C;IAI9C,0DAA8C;IAA9C,oLAA8C;IAI9C,0DAA0C;IAA1C,gLAA0C;;;IAqBhF,6EAAkE;IAAA,uDAAe;IAAA,4DAAS;;;IAA5C,gFAAmB;IAAC,0DAAe;IAAf,8EAAe;;ADhF3F,MAAM,YAAY,GAAG,EAAW,CAAC;AAEjC,MAAM,OAAO,GAAU;IACrB,SAAS,EAAE,IAAI;CACP,CAAC;AAMJ,MAAM,6BAA6B;IAyBxC,YAAoB,WAAkC,EAAU,KAAqB;QAAjE,gBAAW,GAAX,WAAW,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAxBrF,gBAAW,GAAa,EAAE,CAAC;QAC3B,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,IAAI,qDAAS,CAAC;YACvB,EAAE,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,EAAE,CAAC;YACpC,KAAK,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,KAAK,EAAE;gBACzC,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE;oBACV,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,EAAE,CAAC;oBACxB,8DAAkB,CAAC,sFAAsF,CAAC;iBAC3G;aACF,CAAC;YACF,SAAS,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,CAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC9F,QAAQ,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,UAAU,EAAE,CAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC5F,KAAK,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,KAAK,EAAE;gBACzC,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,CAAC,gEAAoB,CAAC,CAAC,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,EAAE,4DAAgB,CAAC;aACnF,CAAC;YACF,SAAS,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;YACzE,WAAW,EAAE,IAAI,uDAAW,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;SAC9E,CAAC,CAAC;IAEqF,CAAC;IAEzF,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;YACrC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBACtC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;gBAChC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;aAChC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBACtC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;gBAChC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;aAChC,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;;0GAjEU,6BAA6B;2HAA7B,6BAA6B;QCjB1C,yEAA2C;QACzC;QAAA,yEAAmB;QACjB;QAAA,0EAAwF;QAA3C,yJAAY,UAAM,IAAC;QAC9D;QAAA,wEAAqB;QAAA,gFAAqB;QAAA,4DAAK;QAE/C;QAAA,6EAAmC;QAEnC;QAAA,0EAAgD;QAC9C;QAAA,yEAAO;QAAA,8DAAE;QAAA,4DAAQ;QACjB;QAAA,uEAAkF;QACpF;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,4EAA0B;QAAA,iEAAK;QAAA,4DAAQ;QACvC;QAAA,uEAA+E;QAE/E;QAAA,2HAUM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,4EAA0B;QAAA,sEAAU;QAAA,4DAAQ;QAC5C;QAAA,wEAAuF;QAEvF;QAAA,2HAIM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB;QAAA,wEAAqF;QAErF;QAAA,2HAIM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,4EAA0B;QAAA,iEAAK;QAAA,4DAAQ;QACvC;QAAA,wEAAgF;QAEhF;QAAA,4HAYM;QACR;QAAA,4DAAM;QAEN;QAAA,2EAAwB;QACtB;QAAA,6EAAgD;QAC9C;QAAA,wEAOE;QACF;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QACxB;QAAA,4DAAQ;QACV;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB;QAAA,8EAAqF;QACnF;QAAA,kIAA0F;QAC5F;QAAA,4DAAS;QACX;QAAA,4DAAM;QACN;QAAA,8EAA0E;QAA1B,sJAAS,mBAAe,IAAC;QACvE;QAAA,0EAA8B;QAAA,kEAAM;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACzD;QAAA,4DAAS;QAET;QAAA,8EAAwF;QACtF;QAAA,0EAA+B;QAAA,kEAAM;QAAA,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACxD;QAAA,4DAAS;QACX;QAAA,4DAAO;QACT;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QAlGqE,0DAAsB;QAAtB,mFAAsB;QAKnE,0DAA6B;QAA7B,0FAA6B;QASvC,2DAAwG;QAAxG,6KAAwG;QAiBxG,2DAAoH;QAApH,yLAAoH;QAWpH,2DAAiH;QAAjH,sLAAiH;QAWjH,2DAAwG;QAAxG,6KAAwG;QAmB1G,0DAAqE;QAArE,8HAAqE;QAazC,2DAAc;QAAd,oFAAc;QAO1B,2DAAyC;QAAzC,0GAAyC;;;;;;;;;;;;;;;;;;;;;;;;AC7FtB;AAES;AACmB;AACe;AACA;AACa;AACzC;;;AAWvD,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHARrB,kEAAY,EAAE,kEAAqB,CAAC,uEAAmB,CAAC;mIAQvD,oBAAoB,mBAN7B,oFAAuB;QACvB,mGAA6B;QAC7B,mGAA6B;QAC7B,gHAAmC,aAL3B,kEAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;ACVgD;AACpC;AAIqC;AACe;AACA;;;AAGnF,MAAM,qBAAqB;IAChC,YAAoB,OAA8B;QAA9B,YAAO,GAAP,OAAO,CAAuB;IAAG,CAAC;IAEtD,OAAO,CAAC,KAA6B;QACnC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9B;QACD,OAAO,wCAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;;0FATU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;AAazB,MAAM,mBAAmB,GAAW;IACzC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAuB;QAClC,IAAI,EAAE;YACJ,WAAW,EAAE,QAAQ;SACtB;KACF;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,mGAA6B;QACxC,OAAO,EAAE;YACP,IAAI,EAAE,qBAAqB;SAC5B;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,mGAA6B;QACxC,OAAO,EAAE;YACP,IAAI,EAAE,qBAAqB;SAC5B;KACF;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,mGAA6B;QACxC,OAAO,EAAE;YACP,IAAI,EAAE,qBAAqB;SAC5B;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;ACpDK,MAAM,2BAA2B,GAAG,eAAe,CAAC;AACpD,MAAM,WAAW,GAAG,MAAM,CAAC;AAC3B,MAAM,cAAc,GAAG,EAAE,CAAC","sources":["./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.ts","./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.html","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.ts","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.html","./src/main/webapp/app/admin/user-management/list/user-management.component.ts","./src/main/webapp/app/admin/user-management/list/user-management.component.html","./src/main/webapp/app/admin/user-management/service/user-management.service.ts","./src/main/webapp/app/admin/user-management/update/user-management-update.component.ts","./src/main/webapp/app/admin/user-management/update/user-management-update.component.html","./src/main/webapp/app/admin/user-management/user-management.module.ts","./src/main/webapp/app/admin/user-management/user-management.route.ts","./src/main/webapp/app/config/pagination.constants.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { User } from '../user-management.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-delete-dialog',\r\n  templateUrl: './user-management-delete-dialog.component.html',\r\n})\r\nexport class UserManagementDeleteDialogComponent {\r\n  user?: User;\r\n\r\n  constructor(private userService: UserManagementService, private activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(login: string): void {\r\n    this.userService.delete(login).subscribe(() => {\r\n      this.activeModal.close('deleted');\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"user\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n\r\n    <p>Are you sure you want to delete user {{ user.login }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"btn btn-danger\"><fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span></button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { User } from '../user-management.model';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-detail',\r\n  templateUrl: './user-management-detail.component.html',\r\n})\r\nexport class UserManagementDetailComponent implements OnInit {\r\n  user: User | null = null;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(({ user }) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"user\">\r\n      <h2>\r\n        <span>User</span> [<strong>{{ user.login }}</strong\r\n        >]\r\n      </h2>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>Login</span></dt>\r\n        <dd>\r\n          <span>{{ user.login }}</span>\r\n          <span *ngIf=\"user.activated\" class=\"badge bg-success\">Activated</span>\r\n          <span *ngIf=\"!user.activated\" class=\"badge bg-danger\">Deactivated</span>\r\n        </dd>\r\n\r\n        <dt><span>First name</span></dt>\r\n        <dd>{{ user.firstName }}</dd>\r\n\r\n        <dt><span>Last name</span></dt>\r\n        <dd>{{ user.lastName }}</dd>\r\n\r\n        <dt><span>Email</span></dt>\r\n        <dd>{{ user.email }}</dd>\r\n\r\n        <dt><span>Created by</span></dt>\r\n        <dd>{{ user.createdBy }}</dd>\r\n\r\n        <dt><span>Created date</span></dt>\r\n        <dd>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n\r\n        <dt><span>Modified by</span></dt>\r\n        <dd>{{ user.lastModifiedBy }}</dd>\r\n\r\n        <dt><span>Modified date</span></dt>\r\n        <dd>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n\r\n        <dt><span>Profiles</span></dt>\r\n        <dd>\r\n          <ul class=\"list-unstyled\">\r\n            <li *ngFor=\"let authority of user.authorities\">\r\n              <span class=\"badge bg-info\">{{ authority }}</span>\r\n            </li>\r\n          </ul>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" routerLink=\"../../\" class=\"btn btn-info\"><fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ITEMS_PER_PAGE } from 'app/config/pagination.constants';\r\nimport { ASC, DESC, SORT } from 'app/config/navigation.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\nimport { User } from '../user-management.model';\r\nimport { UserManagementDeleteDialogComponent } from '../delete/user-management-delete-dialog.component';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt',\r\n  templateUrl: './user-management.component.html',\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  currentAccount: Account | null = null;\r\n  users: User[] | null = null;\r\n  isLoading = false;\r\n  totalItems = 0;\r\n  itemsPerPage = ITEMS_PER_PAGE;\r\n  page!: number;\r\n  predicate!: string;\r\n  ascending!: boolean;\r\n\r\n  constructor(\r\n    private userService: UserManagementService,\r\n    private accountService: AccountService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\r\n    this.handleNavigation();\r\n  }\r\n\r\n  setActive(user: User, isActivated: boolean): void {\r\n    this.userService.update({ ...user, activated: isActivated }).subscribe(() => this.loadAll());\r\n  }\r\n\r\n  trackIdentity(_index: number, item: User): number {\r\n    return item.id!;\r\n  }\r\n\r\n  deleteUser(user: User): void {\r\n    const modalRef = this.modalService.open(UserManagementDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.user = user;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed.subscribe(reason => {\r\n      if (reason === 'deleted') {\r\n        this.loadAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAll(): void {\r\n    this.isLoading = true;\r\n    this.userService\r\n      .query({\r\n        page: this.page - 1,\r\n        size: this.itemsPerPage,\r\n        sort: this.sort(),\r\n      })\r\n      .subscribe({\r\n        next: (res: HttpResponse<User[]>) => {\r\n          this.isLoading = false;\r\n          this.onSuccess(res.body, res.headers);\r\n        },\r\n        error: () => (this.isLoading = false),\r\n      });\r\n  }\r\n\r\n  transition(): void {\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute.parent,\r\n      queryParams: {\r\n        page: this.page,\r\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  private handleNavigation(): void {\r\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\r\n      const page = params.get('page');\r\n      this.page = +(page ?? 1);\r\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\r\n      this.predicate = sort[0];\r\n      this.ascending = sort[1] === ASC;\r\n      this.loadAll();\r\n    });\r\n  }\r\n\r\n  private sort(): string[] {\r\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private onSuccess(users: User[] | null, headers: HttpHeaders): void {\r\n    this.totalItems = Number(headers.get('X-Total-Count'));\r\n    this.users = users;\r\n  }\r\n}\r\n","<div>\r\n  <h2>\r\n    <span id=\"user-management-page-heading\" data-cy=\"userManagementPageHeading\">Users</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\r\n        <fa-icon icon=\"plus\"></fa-icon> <span>Create a new user</span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"table-responsive\" *ngIf=\"users\">\r\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\"><span>ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"login\"><span>Login</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"email\"><span>Email</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"><span>Profiles</span></th>\r\n          <th scope=\"col\" jhiSortBy=\"createdDate\"><span>Created date</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedBy\"><span>Modified by</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedDate\"><span>Modified date</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"users\">\r\n        <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\r\n          <td>\r\n            <a [routerLink]=\"['./', user.login, 'view']\">{{ user.id }}</a>\r\n          </td>\r\n          <td>{{ user.login }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <button class=\"btn btn-danger btn-sm\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\">Deactivated</button>\r\n            <button\r\n              class=\"btn btn-success btn-sm\"\r\n              (click)=\"setActive(user, false)\"\r\n              *ngIf=\"user.activated\"\r\n              [disabled]=\"!currentAccount || currentAccount.login === user.login\"\r\n            >\r\n              Activated\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <div *ngFor=\"let authority of user.authorities\">\r\n              <span class=\"badge bg-info\">{{ authority }}</span>\r\n            </div>\r\n          </td>\r\n          <td>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td>{{ user.lastModifiedBy }}</td>\r\n          <td>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'view']\" class=\"btn btn-info btn-sm\">\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'edit']\" queryParamsHandling=\"merge\" class=\"btn btn-primary btn-sm\">\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"deleteUser(user)\"\r\n                class=\"btn btn-danger btn-sm\"\r\n                [disabled]=\"!currentAccount || currentAccount.login === user.login\"\r\n              >\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div *ngIf=\"users\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <ngb-pagination\r\n        [collectionSize]=\"totalItems\"\r\n        [(page)]=\"page\"\r\n        [pageSize]=\"itemsPerPage\"\r\n        [maxSize]=\"5\"\r\n        [rotate]=\"true\"\r\n        [boundaryLinks]=\"true\"\r\n        (pageChange)=\"transition()\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { Pagination } from 'app/core/request/request.model';\r\nimport { IUser } from '../user-management.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserManagementService {\r\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/admin/users');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(user: IUser): Observable<IUser> {\r\n    return this.http.post<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  update(user: IUser): Observable<IUser> {\r\n    return this.http.put<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  find(login: string): Observable<IUser> {\r\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  query(req?: Pagination): Observable<HttpResponse<IUser[]>> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(login: string): Observable<{}> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  authorities(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.applicationConfigService.getEndpointFor('api/authorities'));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IUser } from '../user-management.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\n\r\nconst userTemplate = {} as IUser;\r\n\r\nconst newUser: IUser = {\r\n  activated: true,\r\n} as IUser;\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-update',\r\n  templateUrl: './user-management-update.component.html',\r\n})\r\nexport class UserManagementUpdateComponent implements OnInit {\r\n  authorities: string[] = [];\r\n  isSaving = false;\r\n\r\n  editForm = new FormGroup({\r\n    id: new FormControl(userTemplate.id),\r\n    login: new FormControl(userTemplate.login, {\r\n      nonNullable: true,\r\n      validators: [\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.maxLength(50),\r\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\r\n      ],\r\n    }),\r\n    firstName: new FormControl(userTemplate.firstName, { validators: [Validators.maxLength(50)] }),\r\n    lastName: new FormControl(userTemplate.lastName, { validators: [Validators.maxLength(50)] }),\r\n    email: new FormControl(userTemplate.email, {\r\n      nonNullable: true,\r\n      validators: [Validators.minLength(5), Validators.maxLength(254), Validators.email],\r\n    }),\r\n    activated: new FormControl(userTemplate.activated, { nonNullable: true }),\r\n    authorities: new FormControl(userTemplate.authorities, { nonNullable: true }),\r\n  });\r\n\r\n  constructor(private userService: UserManagementService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(({ user }) => {\r\n      if (user) {\r\n        this.editForm.reset(user);\r\n      } else {\r\n        this.editForm.reset(newUser);\r\n      }\r\n    });\r\n    this.userService.authorities().subscribe(authorities => (this.authorities = authorities));\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const user = this.editForm.getRawValue();\r\n    if (user.id !== null) {\r\n      this.userService.update(user).subscribe({\r\n        next: () => this.onSaveSuccess(),\r\n        error: () => this.onSaveError(),\r\n      });\r\n    } else {\r\n      this.userService.create(user).subscribe({\r\n        next: () => this.onSaveSuccess(),\r\n        error: () => this.onSaveError(),\r\n      });\r\n    }\r\n  }\r\n\r\n  private onSaveSuccess(): void {\r\n    this.isSaving = false;\r\n    this.previousState();\r\n  }\r\n\r\n  private onSaveError(): void {\r\n    this.isSaving = false;\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"myUserLabel\">Create or edit a user</h2>\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <div class=\"mb-3\" [hidden]=\"!editForm.value.id\">\r\n        <label>ID</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Login</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"login\" formControlName=\"login\" />\r\n\r\n        <div *ngIf=\"editForm.get('login')!.invalid && (editForm.get('login')!.dirty || editForm.get('login')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.required\"> This field is required. </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.maxlength\">\r\n            This field cannot be longer than 50 characters.\r\n          </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.pattern\">\r\n            This field can only contain letters, digits and e-mail addresses.\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">First name</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"firstName\" formControlName=\"firstName\" />\r\n\r\n        <div *ngIf=\"editForm.get('firstName')!.invalid && (editForm.get('firstName')!.dirty || editForm.get('firstName')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('firstName')?.errors?.maxlength\">\r\n            This field cannot be longer than 50 characters.\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label>Last name</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"lastName\" formControlName=\"lastName\" />\r\n\r\n        <div *ngIf=\"editForm.get('lastName')!.invalid && (editForm.get('lastName')!.dirty || editForm.get('lastName')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('lastName')?.errors?.maxlength\">\r\n            This field cannot be longer than 50 characters.\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\" />\r\n\r\n        <div *ngIf=\"editForm.get('email')!.invalid && (editForm.get('email')!.dirty || editForm.get('email')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.required\"> This field is required. </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.maxlength\">\r\n            This field cannot be longer than 100 characters.\r\n          </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.minlength\">\r\n            This field is required to be at least 5 characters.\r\n          </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.email\"> Your email is invalid. </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-check\">\r\n        <label class=\"form-check-label\" for=\"activated\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            [attr.disabled]=\"editForm.value.id === undefined ? 'disabled' : null\"\r\n            type=\"checkbox\"\r\n            id=\"activated\"\r\n            name=\"activated\"\r\n            formControlName=\"activated\"\r\n          />\r\n          <span>Activated</span>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label>Profiles</label>\r\n        <select class=\"form-control\" multiple name=\"authority\" formControlName=\"authorities\">\r\n          <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{ authority }}</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n        <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n      </button>\r\n\r\n      <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { UserManagementComponent } from './list/user-management.component';\r\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\r\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\r\nimport { UserManagementDeleteDialogComponent } from './delete/user-management-delete-dialog.component';\r\nimport { userManagementRoute } from './user-management.route';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(userManagementRoute)],\r\n  declarations: [\r\n    UserManagementComponent,\r\n    UserManagementDetailComponent,\r\n    UserManagementUpdateComponent,\r\n    UserManagementDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class UserManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Routes } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { IUser } from './user-management.model';\r\nimport { UserManagementService } from './service/user-management.service';\r\nimport { UserManagementComponent } from './list/user-management.component';\r\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\r\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserManagementResolve implements Resolve<IUser | null> {\r\n  constructor(private service: UserManagementService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IUser | null> {\r\n    const id = route.params['login'];\r\n    if (id) {\r\n      return this.service.find(id);\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n\r\nexport const userManagementRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserManagementComponent,\r\n    data: {\r\n      defaultSort: 'id,asc',\r\n    },\r\n  },\r\n  {\r\n    path: ':login/view',\r\n    component: UserManagementDetailComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: UserManagementUpdateComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n  {\r\n    path: ':login/edit',\r\n    component: UserManagementUpdateComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n];\r\n","export const TOTAL_COUNT_RESPONSE_HEADER = 'X-Total-Count';\r\nexport const PAGE_HEADER = 'page';\r\nexport const ITEMS_PER_PAGE = 20;\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}