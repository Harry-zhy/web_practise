{"version":3,"file":"src_main_webapp_app_entities_mock-caterer-entity_mock-caterer-entity_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/mock-caterer-entity/delete/mock-caterer-entity-delete-dialog.component.ts","./src/main/webapp/app/entities/mock-caterer-entity/delete/mock-caterer-entity-delete-dialog.component.html","./src/main/webapp/app/entities/mock-caterer-entity/detail/mock-caterer-entity-detail.component.ts","./src/main/webapp/app/entities/mock-caterer-entity/detail/mock-caterer-entity-detail.component.html","./src/main/webapp/app/entities/mock-caterer-entity/list/mock-caterer-entity.component.ts","./src/main/webapp/app/entities/mock-caterer-entity/list/mock-caterer-entity.component.html","./src/main/webapp/app/entities/mock-caterer-entity/mock-caterer-entity.module.ts","./src/main/webapp/app/entities/mock-caterer-entity/route/mock-caterer-entity-routing-resolve.service.ts","./src/main/webapp/app/entities/mock-caterer-entity/route/mock-caterer-entity-routing.module.ts","./src/main/webapp/app/entities/mock-caterer-entity/service/mock-caterer-entity.service.ts","./src/main/webapp/app/entities/mock-caterer-entity/update/mock-caterer-entity-form.service.ts","./src/main/webapp/app/entities/mock-caterer-entity/update/mock-caterer-entity-update.component.ts","./src/main/webapp/app/entities/mock-caterer-entity/update/mock-caterer-entity-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IMockCatererEntity } from '../mock-caterer-entity.model';\r\nimport { MockCatererEntityService } from '../service/mock-caterer-entity.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './mock-caterer-entity-delete-dialog.component.html',\r\n})\r\nexport class MockCatererEntityDeleteDialogComponent {\r\n  mockCatererEntity?: IMockCatererEntity;\r\n\r\n  constructor(protected mockCatererEntityService: MockCatererEntityService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.mockCatererEntityService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"mockCatererEntity\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(mockCatererEntity.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"mockCatererEntityDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-mockCatererEntity-heading\">Are you sure you want to delete Mock Caterer Entity {{ mockCatererEntity.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-mockCatererEntity\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IMockCatererEntity } from '../mock-caterer-entity.model';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-caterer-entity-detail',\r\n  templateUrl: './mock-caterer-entity-detail.component.html',\r\n})\r\nexport class MockCatererEntityDetailComponent implements OnInit {\r\n  mockCatererEntity: IMockCatererEntity | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ mockCatererEntity }) => {\r\n      this.mockCatererEntity = mockCatererEntity;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"mockCatererEntity\">\r\n      <h2 data-cy=\"mockCatererEntityDetailsHeading\"><span>Mock Caterer Entity</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.id }}</span>\r\n        </dd>\r\n        <dt><span>Name</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.name }}</span>\r\n        </dd>\r\n        <dt><span>Cuisine</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.cuisine }}</span>\r\n        </dd>\r\n        <dt><span>Rating</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.rating }}</span>\r\n        </dd>\r\n        <dt><span>Description</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.description }}</span>\r\n        </dd>\r\n        <dt><span>Quantity</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.quantity }}</span>\r\n        </dd>\r\n        <dt><span>Contact</span></dt>\r\n        <dd>\r\n          <span>{{ mockCatererEntity.contact }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/mock-caterer-entity', mockCatererEntity.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IMockCatererEntity } from '../mock-caterer-entity.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, MockCatererEntityService } from '../service/mock-caterer-entity.service';\r\nimport { MockCatererEntityDeleteDialogComponent } from '../delete/mock-caterer-entity-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-caterer-entity',\r\n  templateUrl: './mock-caterer-entity.component.html',\r\n})\r\nexport class MockCatererEntityComponent implements OnInit {\r\n  mockCatererEntities?: IMockCatererEntity[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected mockCatererEntityService: MockCatererEntityService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IMockCatererEntity): number => this.mockCatererEntityService.getMockCatererEntityIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(mockCatererEntity: IMockCatererEntity): void {\r\n    const modalRef = this.modalService.open(MockCatererEntityDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.mockCatererEntity = mockCatererEntity;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.mockCatererEntities = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IMockCatererEntity[]): IMockCatererEntity[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IMockCatererEntity[] | null): IMockCatererEntity[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.mockCatererEntityService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"MockCatererEntityHeading\">\r\n    <span>Mock Caterer Entities</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-mock-caterer-entity\"\r\n        [routerLink]=\"['/mock-caterer-entity/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Mock Caterer Entity </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"mockCatererEntities?.length === 0\">\r\n    <span>No Mock Caterer Entities found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"mockCatererEntities && mockCatererEntities.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"name\">\r\n            <div class=\"d-flex\">\r\n              <span>Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"cuisine\">\r\n            <div class=\"d-flex\">\r\n              <span>Cuisine</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"rating\">\r\n            <div class=\"d-flex\">\r\n              <span>Rating</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"description\">\r\n            <div class=\"d-flex\">\r\n              <span>Description</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"quantity\">\r\n            <div class=\"d-flex\">\r\n              <span>Quantity</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"contact\">\r\n            <div class=\"d-flex\">\r\n              <span>Contact</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let mockCatererEntity of mockCatererEntities; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/mock-caterer-entity', mockCatererEntity.id, 'view']\">{{ mockCatererEntity.id }}</a>\r\n          </td>\r\n          <td>{{ mockCatererEntity.name }}</td>\r\n          <td>{{ mockCatererEntity.cuisine }}</td>\r\n          <td>{{ mockCatererEntity.rating }}</td>\r\n          <td>{{ mockCatererEntity.description }}</td>\r\n          <td>{{ mockCatererEntity.quantity }}</td>\r\n          <td>{{ mockCatererEntity.contact }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/mock-caterer-entity', mockCatererEntity.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/mock-caterer-entity', mockCatererEntity.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(mockCatererEntity)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MockCatererEntityComponent } from './list/mock-caterer-entity.component';\r\nimport { MockCatererEntityDetailComponent } from './detail/mock-caterer-entity-detail.component';\r\nimport { MockCatererEntityUpdateComponent } from './update/mock-caterer-entity-update.component';\r\nimport { MockCatererEntityDeleteDialogComponent } from './delete/mock-caterer-entity-delete-dialog.component';\r\nimport { MockCatererEntityRoutingModule } from './route/mock-caterer-entity-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, MockCatererEntityRoutingModule],\r\n  declarations: [\r\n    MockCatererEntityComponent,\r\n    MockCatererEntityDetailComponent,\r\n    MockCatererEntityUpdateComponent,\r\n    MockCatererEntityDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class MockCatererEntityModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IMockCatererEntity } from '../mock-caterer-entity.model';\r\nimport { MockCatererEntityService } from '../service/mock-caterer-entity.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockCatererEntityRoutingResolveService implements Resolve<IMockCatererEntity | null> {\r\n  constructor(protected service: MockCatererEntityService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IMockCatererEntity | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((mockCatererEntity: HttpResponse<IMockCatererEntity>) => {\r\n          if (mockCatererEntity.body) {\r\n            return of(mockCatererEntity.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { MockCatererEntityComponent } from '../list/mock-caterer-entity.component';\r\nimport { MockCatererEntityDetailComponent } from '../detail/mock-caterer-entity-detail.component';\r\nimport { MockCatererEntityUpdateComponent } from '../update/mock-caterer-entity-update.component';\r\nimport { MockCatererEntityRoutingResolveService } from './mock-caterer-entity-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst mockCatererEntityRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: MockCatererEntityComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: MockCatererEntityDetailComponent,\r\n    resolve: {\r\n      mockCatererEntity: MockCatererEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: MockCatererEntityUpdateComponent,\r\n    resolve: {\r\n      mockCatererEntity: MockCatererEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: MockCatererEntityUpdateComponent,\r\n    resolve: {\r\n      mockCatererEntity: MockCatererEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(mockCatererEntityRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MockCatererEntityRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IMockCatererEntity, NewMockCatererEntity } from '../mock-caterer-entity.model';\r\n\r\nexport type PartialUpdateMockCatererEntity = Partial<IMockCatererEntity> & Pick<IMockCatererEntity, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IMockCatererEntity>;\r\nexport type EntityArrayResponseType = HttpResponse<IMockCatererEntity[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockCatererEntityService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/mock-caterer-entities');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(mockCatererEntity: NewMockCatererEntity): Observable<EntityResponseType> {\r\n    return this.http.post<IMockCatererEntity>(this.resourceUrl, mockCatererEntity, { observe: 'response' });\r\n  }\r\n\r\n  update(mockCatererEntity: IMockCatererEntity): Observable<EntityResponseType> {\r\n    return this.http.put<IMockCatererEntity>(\r\n      `${this.resourceUrl}/${this.getMockCatererEntityIdentifier(mockCatererEntity)}`,\r\n      mockCatererEntity,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  partialUpdate(mockCatererEntity: PartialUpdateMockCatererEntity): Observable<EntityResponseType> {\r\n    return this.http.patch<IMockCatererEntity>(\r\n      `${this.resourceUrl}/${this.getMockCatererEntityIdentifier(mockCatererEntity)}`,\r\n      mockCatererEntity,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IMockCatererEntity>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IMockCatererEntity[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getMockCatererEntityIdentifier(mockCatererEntity: Pick<IMockCatererEntity, 'id'>): number {\r\n    return mockCatererEntity.id;\r\n  }\r\n\r\n  compareMockCatererEntity(o1: Pick<IMockCatererEntity, 'id'> | null, o2: Pick<IMockCatererEntity, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getMockCatererEntityIdentifier(o1) === this.getMockCatererEntityIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addMockCatererEntityToCollectionIfMissing<Type extends Pick<IMockCatererEntity, 'id'>>(\r\n    mockCatererEntityCollection: Type[],\r\n    ...mockCatererEntitiesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const mockCatererEntities: Type[] = mockCatererEntitiesToCheck.filter(isPresent);\r\n    if (mockCatererEntities.length > 0) {\r\n      const mockCatererEntityCollectionIdentifiers = mockCatererEntityCollection.map(\r\n        mockCatererEntityItem => this.getMockCatererEntityIdentifier(mockCatererEntityItem)!\r\n      );\r\n      const mockCatererEntitiesToAdd = mockCatererEntities.filter(mockCatererEntityItem => {\r\n        const mockCatererEntityIdentifier = this.getMockCatererEntityIdentifier(mockCatererEntityItem);\r\n        if (mockCatererEntityCollectionIdentifiers.includes(mockCatererEntityIdentifier)) {\r\n          return false;\r\n        }\r\n        mockCatererEntityCollectionIdentifiers.push(mockCatererEntityIdentifier);\r\n        return true;\r\n      });\r\n      return [...mockCatererEntitiesToAdd, ...mockCatererEntityCollection];\r\n    }\r\n    return mockCatererEntityCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { IMockCatererEntity, NewMockCatererEntity } from '../mock-caterer-entity.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IMockCatererEntity for edit and NewMockCatererEntityFormGroupInput for create.\r\n */\r\ntype MockCatererEntityFormGroupInput = IMockCatererEntity | PartialWithRequiredKeyOf<NewMockCatererEntity>;\r\n\r\ntype MockCatererEntityFormDefaults = Pick<NewMockCatererEntity, 'id'>;\r\n\r\ntype MockCatererEntityFormGroupContent = {\r\n  id: FormControl<IMockCatererEntity['id'] | NewMockCatererEntity['id']>;\r\n  name: FormControl<IMockCatererEntity['name']>;\r\n  cuisine: FormControl<IMockCatererEntity['cuisine']>;\r\n  rating: FormControl<IMockCatererEntity['rating']>;\r\n  description: FormControl<IMockCatererEntity['description']>;\r\n  quantity: FormControl<IMockCatererEntity['quantity']>;\r\n  contact: FormControl<IMockCatererEntity['contact']>;\r\n};\r\n\r\nexport type MockCatererEntityFormGroup = FormGroup<MockCatererEntityFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockCatererEntityFormService {\r\n  createMockCatererEntityFormGroup(mockCatererEntity: MockCatererEntityFormGroupInput = { id: null }): MockCatererEntityFormGroup {\r\n    const mockCatererEntityRawValue = {\r\n      ...this.getFormDefaults(),\r\n      ...mockCatererEntity,\r\n    };\r\n    return new FormGroup<MockCatererEntityFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: mockCatererEntityRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      name: new FormControl(mockCatererEntityRawValue.name),\r\n      cuisine: new FormControl(mockCatererEntityRawValue.cuisine),\r\n      rating: new FormControl(mockCatererEntityRawValue.rating, {\r\n        validators: [Validators.required, Validators.min(0), Validators.max(5)],\r\n      }),\r\n      description: new FormControl(mockCatererEntityRawValue.description),\r\n      quantity: new FormControl(mockCatererEntityRawValue.quantity),\r\n      contact: new FormControl(mockCatererEntityRawValue.contact),\r\n    });\r\n  }\r\n\r\n  getMockCatererEntity(form: MockCatererEntityFormGroup): IMockCatererEntity | NewMockCatererEntity {\r\n    return form.getRawValue() as IMockCatererEntity | NewMockCatererEntity;\r\n  }\r\n\r\n  resetForm(form: MockCatererEntityFormGroup, mockCatererEntity: MockCatererEntityFormGroupInput): void {\r\n    const mockCatererEntityRawValue = { ...this.getFormDefaults(), ...mockCatererEntity };\r\n    form.reset(\r\n      {\r\n        ...mockCatererEntityRawValue,\r\n        id: { value: mockCatererEntityRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): MockCatererEntityFormDefaults {\r\n    return {\r\n      id: null,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { MockCatererEntityFormService, MockCatererEntityFormGroup } from './mock-caterer-entity-form.service';\r\nimport { IMockCatererEntity } from '../mock-caterer-entity.model';\r\nimport { MockCatererEntityService } from '../service/mock-caterer-entity.service';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-caterer-entity-update',\r\n  templateUrl: './mock-caterer-entity-update.component.html',\r\n})\r\nexport class MockCatererEntityUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  mockCatererEntity: IMockCatererEntity | null = null;\r\n\r\n  editForm: MockCatererEntityFormGroup = this.mockCatererEntityFormService.createMockCatererEntityFormGroup();\r\n\r\n  constructor(\r\n    protected mockCatererEntityService: MockCatererEntityService,\r\n    protected mockCatererEntityFormService: MockCatererEntityFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ mockCatererEntity }) => {\r\n      this.mockCatererEntity = mockCatererEntity;\r\n      if (mockCatererEntity) {\r\n        this.updateForm(mockCatererEntity);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const mockCatererEntity = this.mockCatererEntityFormService.getMockCatererEntity(this.editForm);\r\n    if (mockCatererEntity.id !== null) {\r\n      this.subscribeToSaveResponse(this.mockCatererEntityService.update(mockCatererEntity));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.mockCatererEntityService.create(mockCatererEntity));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IMockCatererEntity>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(mockCatererEntity: IMockCatererEntity): void {\r\n    this.mockCatererEntity = mockCatererEntity;\r\n    this.mockCatererEntityFormService.resetForm(this.editForm, mockCatererEntity);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-mock-caterer-entity-heading\" data-cy=\"MockCatererEntityCreateUpdateHeading\">Create or edit a Mock Caterer Entity</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_name\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"name\" id=\"field_name\" data-cy=\"name\" formControlName=\"name\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_cuisine\">Cuisine</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"cuisine\" id=\"field_cuisine\" data-cy=\"cuisine\" formControlName=\"cuisine\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_rating\">Rating</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"rating\" id=\"field_rating\" data-cy=\"rating\" formControlName=\"rating\" />\r\n          <div *ngIf=\"editForm.get('rating')!.invalid && (editForm.get('rating')!.dirty || editForm.get('rating')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.required\"> This field is required. </small>\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.min\"> This field should be at least 0. </small>\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.max\"> This field cannot be more than 5. </small>\r\n            <small class=\"form-text text-danger\" [hidden]=\"!editForm.get('rating')?.errors?.number\"> This field should be a number. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"description\"\r\n            id=\"field_description\"\r\n            data-cy=\"description\"\r\n            formControlName=\"description\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_quantity\">Quantity</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"quantity\" id=\"field_quantity\" data-cy=\"quantity\" formControlName=\"quantity\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_contact\">Contact</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"contact\" id=\"field_contact\" data-cy=\"contact\" formControlName=\"contact\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}