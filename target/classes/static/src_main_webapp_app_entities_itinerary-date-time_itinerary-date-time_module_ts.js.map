{"version":3,"file":"src_main_webapp_app_entities_itinerary-date-time_itinerary-date-time_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/itinerary-date-time/delete/itinerary-date-time-delete-dialog.component.ts","./src/main/webapp/app/entities/itinerary-date-time/delete/itinerary-date-time-delete-dialog.component.html","./src/main/webapp/app/entities/itinerary-date-time/detail/itinerary-date-time-detail.component.ts","./src/main/webapp/app/entities/itinerary-date-time/detail/itinerary-date-time-detail.component.html","./src/main/webapp/app/entities/itinerary-date-time/itinerary-date-time.module.ts","./src/main/webapp/app/entities/itinerary-date-time/list/itinerary-date-time.component.ts","./src/main/webapp/app/entities/itinerary-date-time/list/itinerary-date-time.component.html","./src/main/webapp/app/entities/itinerary-date-time/route/itinerary-date-time-routing-resolve.service.ts","./src/main/webapp/app/entities/itinerary-date-time/route/itinerary-date-time-routing.module.ts","./src/main/webapp/app/entities/itinerary-date-time/update/itinerary-date-time-form.service.ts","./src/main/webapp/app/entities/itinerary-date-time/update/itinerary-date-time-update.component.ts","./src/main/webapp/app/entities/itinerary-date-time/update/itinerary-date-time-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryDateTime } from '../itinerary-date-time.model';\r\nimport { ItineraryDateTimeService } from '../service/itinerary-date-time.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './itinerary-date-time-delete-dialog.component.html',\r\n})\r\nexport class ItineraryDateTimeDeleteDialogComponent {\r\n  itineraryDateTime?: IItineraryDateTime;\r\n\r\n  constructor(protected itineraryDateTimeService: ItineraryDateTimeService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.itineraryDateTimeService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"itineraryDateTime\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(itineraryDateTime.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"itineraryDateTimeDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-itineraryDateTime-heading\">Are you sure you want to delete Itinerary Date Time {{ itineraryDateTime.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-itineraryDateTime\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IItineraryDateTime } from '../itinerary-date-time.model';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-date-time-detail',\r\n  templateUrl: './itinerary-date-time-detail.component.html',\r\n})\r\nexport class ItineraryDateTimeDetailComponent implements OnInit {\r\n  itineraryDateTime: IItineraryDateTime | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryDateTime }) => {\r\n      this.itineraryDateTime = itineraryDateTime;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"itineraryDateTime\">\r\n      <h2 data-cy=\"itineraryDateTimeDetailsHeading\"><span>Itinerary Date Time</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryDateTime.id }}</span>\r\n        </dd>\r\n        <dt><span>Date</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryDateTime.date | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>Start Time</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryDateTime.startTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>End Time</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryDateTime.endTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/itinerary-date-time', itineraryDateTime.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ItineraryDateTimeComponent } from './list/itinerary-date-time.component';\r\nimport { ItineraryDateTimeDetailComponent } from './detail/itinerary-date-time-detail.component';\r\nimport { ItineraryDateTimeUpdateComponent } from './update/itinerary-date-time-update.component';\r\nimport { ItineraryDateTimeDeleteDialogComponent } from './delete/itinerary-date-time-delete-dialog.component';\r\nimport { ItineraryDateTimeRoutingModule } from './route/itinerary-date-time-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ItineraryDateTimeRoutingModule],\r\n  declarations: [\r\n    ItineraryDateTimeComponent,\r\n    ItineraryDateTimeDetailComponent,\r\n    ItineraryDateTimeUpdateComponent,\r\n    ItineraryDateTimeDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class ItineraryDateTimeModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryDateTime } from '../itinerary-date-time.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ItineraryDateTimeService } from '../service/itinerary-date-time.service';\r\nimport { ItineraryDateTimeDeleteDialogComponent } from '../delete/itinerary-date-time-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-date-time',\r\n  templateUrl: './itinerary-date-time.component.html',\r\n})\r\nexport class ItineraryDateTimeComponent implements OnInit {\r\n  itineraryDateTimes?: IItineraryDateTime[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected itineraryDateTimeService: ItineraryDateTimeService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IItineraryDateTime): number => this.itineraryDateTimeService.getItineraryDateTimeIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(itineraryDateTime: IItineraryDateTime): void {\r\n    const modalRef = this.modalService.open(ItineraryDateTimeDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.itineraryDateTime = itineraryDateTime;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.itineraryDateTimes = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IItineraryDateTime[]): IItineraryDateTime[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IItineraryDateTime[] | null): IItineraryDateTime[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.itineraryDateTimeService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ItineraryDateTimeHeading\">\r\n    <span>Itinerary Date Times</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-itinerary-date-time\"\r\n        [routerLink]=\"['/itinerary-date-time/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Itinerary Date Time </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"itineraryDateTimes?.length === 0\">\r\n    <span>No Itinerary Date Times found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"itineraryDateTimes && itineraryDateTimes.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"date\">\r\n            <div class=\"d-flex\">\r\n              <span>Date</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"startTime\">\r\n            <div class=\"d-flex\">\r\n              <span>Start Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"endTime\">\r\n            <div class=\"d-flex\">\r\n              <span>End Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let itineraryDateTime of itineraryDateTimes; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/itinerary-date-time', itineraryDateTime.id, 'view']\">{{ itineraryDateTime.id }}</a>\r\n          </td>\r\n          <td>{{ itineraryDateTime.date | formatMediumDatetime }}</td>\r\n          <td>{{ itineraryDateTime.startTime | formatMediumDatetime }}</td>\r\n          <td>{{ itineraryDateTime.endTime | formatMediumDatetime }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-date-time', itineraryDateTime.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-date-time', itineraryDateTime.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(itineraryDateTime)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IItineraryDateTime } from '../itinerary-date-time.model';\r\nimport { ItineraryDateTimeService } from '../service/itinerary-date-time.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryDateTimeRoutingResolveService implements Resolve<IItineraryDateTime | null> {\r\n  constructor(protected service: ItineraryDateTimeService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IItineraryDateTime | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((itineraryDateTime: HttpResponse<IItineraryDateTime>) => {\r\n          if (itineraryDateTime.body) {\r\n            return of(itineraryDateTime.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ItineraryDateTimeComponent } from '../list/itinerary-date-time.component';\r\nimport { ItineraryDateTimeDetailComponent } from '../detail/itinerary-date-time-detail.component';\r\nimport { ItineraryDateTimeUpdateComponent } from '../update/itinerary-date-time-update.component';\r\nimport { ItineraryDateTimeRoutingResolveService } from './itinerary-date-time-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst itineraryDateTimeRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ItineraryDateTimeComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ItineraryDateTimeDetailComponent,\r\n    resolve: {\r\n      itineraryDateTime: ItineraryDateTimeRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ItineraryDateTimeUpdateComponent,\r\n    resolve: {\r\n      itineraryDateTime: ItineraryDateTimeRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ItineraryDateTimeUpdateComponent,\r\n    resolve: {\r\n      itineraryDateTime: ItineraryDateTimeRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(itineraryDateTimeRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ItineraryDateTimeRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { IItineraryDateTime, NewItineraryDateTime } from '../itinerary-date-time.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IItineraryDateTime for edit and NewItineraryDateTimeFormGroupInput for create.\r\n */\r\ntype ItineraryDateTimeFormGroupInput = IItineraryDateTime | PartialWithRequiredKeyOf<NewItineraryDateTime>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends IItineraryDateTime | NewItineraryDateTime> = Omit<T, 'date' | 'startTime' | 'endTime'> & {\r\n  date?: string | null;\r\n  startTime?: string | null;\r\n  endTime?: string | null;\r\n};\r\n\r\ntype ItineraryDateTimeFormRawValue = FormValueOf<IItineraryDateTime>;\r\n\r\ntype NewItineraryDateTimeFormRawValue = FormValueOf<NewItineraryDateTime>;\r\n\r\ntype ItineraryDateTimeFormDefaults = Pick<NewItineraryDateTime, 'id' | 'date' | 'startTime' | 'endTime'>;\r\n\r\ntype ItineraryDateTimeFormGroupContent = {\r\n  id: FormControl<ItineraryDateTimeFormRawValue['id'] | NewItineraryDateTime['id']>;\r\n  date: FormControl<ItineraryDateTimeFormRawValue['date']>;\r\n  startTime: FormControl<ItineraryDateTimeFormRawValue['startTime']>;\r\n  endTime: FormControl<ItineraryDateTimeFormRawValue['endTime']>;\r\n};\r\n\r\nexport type ItineraryDateTimeFormGroup = FormGroup<ItineraryDateTimeFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryDateTimeFormService {\r\n  createItineraryDateTimeFormGroup(itineraryDateTime: ItineraryDateTimeFormGroupInput = { id: null }): ItineraryDateTimeFormGroup {\r\n    const itineraryDateTimeRawValue = this.convertItineraryDateTimeToItineraryDateTimeRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryDateTime,\r\n    });\r\n    return new FormGroup<ItineraryDateTimeFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: itineraryDateTimeRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      date: new FormControl(itineraryDateTimeRawValue.date),\r\n      startTime: new FormControl(itineraryDateTimeRawValue.startTime),\r\n      endTime: new FormControl(itineraryDateTimeRawValue.endTime),\r\n    });\r\n  }\r\n\r\n  getItineraryDateTime(form: ItineraryDateTimeFormGroup): IItineraryDateTime | NewItineraryDateTime {\r\n    return this.convertItineraryDateTimeRawValueToItineraryDateTime(\r\n      form.getRawValue() as ItineraryDateTimeFormRawValue | NewItineraryDateTimeFormRawValue\r\n    );\r\n  }\r\n\r\n  resetForm(form: ItineraryDateTimeFormGroup, itineraryDateTime: ItineraryDateTimeFormGroupInput): void {\r\n    const itineraryDateTimeRawValue = this.convertItineraryDateTimeToItineraryDateTimeRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryDateTime,\r\n    });\r\n    form.reset(\r\n      {\r\n        ...itineraryDateTimeRawValue,\r\n        id: { value: itineraryDateTimeRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ItineraryDateTimeFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      date: currentTime,\r\n      startTime: currentTime,\r\n      endTime: currentTime,\r\n    };\r\n  }\r\n\r\n  private convertItineraryDateTimeRawValueToItineraryDateTime(\r\n    rawItineraryDateTime: ItineraryDateTimeFormRawValue | NewItineraryDateTimeFormRawValue\r\n  ): IItineraryDateTime | NewItineraryDateTime {\r\n    return {\r\n      ...rawItineraryDateTime,\r\n      date: dayjs(rawItineraryDateTime.date, DATE_TIME_FORMAT),\r\n      startTime: dayjs(rawItineraryDateTime.startTime, DATE_TIME_FORMAT),\r\n      endTime: dayjs(rawItineraryDateTime.endTime, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertItineraryDateTimeToItineraryDateTimeRawValue(\r\n    itineraryDateTime: IItineraryDateTime | (Partial<NewItineraryDateTime> & ItineraryDateTimeFormDefaults)\r\n  ): ItineraryDateTimeFormRawValue | PartialWithRequiredKeyOf<NewItineraryDateTimeFormRawValue> {\r\n    return {\r\n      ...itineraryDateTime,\r\n      date: itineraryDateTime.date ? itineraryDateTime.date.format(DATE_TIME_FORMAT) : undefined,\r\n      startTime: itineraryDateTime.startTime ? itineraryDateTime.startTime.format(DATE_TIME_FORMAT) : undefined,\r\n      endTime: itineraryDateTime.endTime ? itineraryDateTime.endTime.format(DATE_TIME_FORMAT) : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ItineraryDateTimeFormService, ItineraryDateTimeFormGroup } from './itinerary-date-time-form.service';\r\nimport { IItineraryDateTime } from '../itinerary-date-time.model';\r\nimport { ItineraryDateTimeService } from '../service/itinerary-date-time.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-date-time-update',\r\n  templateUrl: './itinerary-date-time-update.component.html',\r\n})\r\nexport class ItineraryDateTimeUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  itineraryDateTime: IItineraryDateTime | null = null;\r\n\r\n  editForm: ItineraryDateTimeFormGroup = this.itineraryDateTimeFormService.createItineraryDateTimeFormGroup();\r\n\r\n  constructor(\r\n    protected itineraryDateTimeService: ItineraryDateTimeService,\r\n    protected itineraryDateTimeFormService: ItineraryDateTimeFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryDateTime }) => {\r\n      this.itineraryDateTime = itineraryDateTime;\r\n      if (itineraryDateTime) {\r\n        this.updateForm(itineraryDateTime);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const itineraryDateTime = this.itineraryDateTimeFormService.getItineraryDateTime(this.editForm);\r\n    if (itineraryDateTime.id !== null) {\r\n      this.subscribeToSaveResponse(this.itineraryDateTimeService.update(itineraryDateTime));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.itineraryDateTimeService.create(itineraryDateTime));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IItineraryDateTime>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(itineraryDateTime: IItineraryDateTime): void {\r\n    this.itineraryDateTime = itineraryDateTime;\r\n    this.itineraryDateTimeFormService.resetForm(this.editForm, itineraryDateTime);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-itinerary-date-time-heading\" data-cy=\"ItineraryDateTimeCreateUpdateHeading\">Create or edit a Itinerary Date Time</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_date\">Date</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_date\"\r\n              data-cy=\"date\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"date\"\r\n              formControlName=\"date\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_startTime\">Start Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_startTime\"\r\n              data-cy=\"startTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"startTime\"\r\n              formControlName=\"startTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_endTime\">End Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_endTime\"\r\n              data-cy=\"endTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"endTime\"\r\n              formControlName=\"endTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}