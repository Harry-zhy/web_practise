{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;AAAO,MAAM,WAAW,GAAG,YAAY,CAAC;AACjC,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;ACD5C,MAAM,GAAG,GAAG,KAAK,CAAC;AAClB,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,kBAAkB,GAAG,SAAS,CAAC;AACrC,MAAM,iBAAiB,GAAG,aAAa,CAAC;;;;;;;;;;;;;;;;;ACFH;;AAU5C;;GAEG;AAII,MAAM,SAAS;IACpB;;OAEG;IACH,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,IAAY,EAAE,WAAsC;QAC3D,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;QAEhC,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,WAAW,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC/C;QACD,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;QAC9C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;YACjC,IAAI,EAAE,WAAW;SAClB,CAAC,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,GAAI,CAAC,MAAM,GAAG;YACZ,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;;;;OAUG;IACH,cAAc,CAAC,KAAY,EAAE,QAAmB,EAAE,KAAa,EAAE,OAAgB;QAC/E,OAAO,IAAI,4CAAU,CAAC,CAAC,QAAwB,EAAE,EAAE;YACjD,MAAM,WAAW,GAA4B,KAAK,CAAC,MAAiC,CAAC;YACrF,IAAI,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC3B,MAAM,IAAI,GAAS,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC9C,MAAM,KAAK,GAAkB;wBAC3B,OAAO,EAAE,yDAAyD,IAAI,CAAC,IAAI,GAAG;wBAC9E,GAAG,EAAE,WAAW;wBAChB,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE;qBAChC,CAAC;oBACF,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACvB;qBAAM;oBACL,MAAM,gBAAgB,GAAW,KAAK,GAAG,aAAa,CAAC;oBACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,UAAkB,EAAE,EAAE;wBACzC,QAAQ,CAAC,UAAU,CAAC;4BAClB,CAAC,KAAK,CAAC,EAAE,UAAU;4BACnB,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,IAAI;yBAC9B,CAAC,CAAC;wBACH,QAAQ,CAAC,IAAI,EAAE,CAAC;wBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;iBACJ;aACF;iBAAM;gBACL,MAAM,KAAK,GAAkB;oBAC3B,OAAO,EAAE,wBAAwB;oBACjC,GAAG,EAAE,mBAAmB;oBACxB,MAAM,EAAE,EAAE,KAAK,EAAE;iBAClB,CAAC;gBACF,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,QAAQ,CAAC,IAAU,EAAE,QAAsC;QACjE,MAAM,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC;QAChD,UAAU,CAAC,MAAM,GAAG,CAAC,CAA4B,EAAE,EAAE;YACnD,IAAI,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,KAAK,QAAQ,EAAE;gBACxC,MAAM,UAAU,GAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC5G,QAAQ,CAAC,UAAU,CAAC,CAAC;aACtB;QACH,CAAC,CAAC;QACF,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEO,QAAQ,CAAC,MAAc,EAAE,GAAW;QAC1C,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEO,WAAW,CAAC,KAAa;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAC9B,OAAO,CAAC,CAAC;SACV;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;YAC7B,OAAO,CAAC,CAAC;SACV;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAEO,IAAI,CAAC,KAAa;QACxB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEO,aAAa,CAAC,IAAY;QAChC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,UAAU;IACrF,CAAC;;kEA7GU,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;ACZgC;AAEgB;;;;AAS7D,MAAM,sBAAsB;IAGjC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;IAEQ,CAAC;IAExG,MAAM,CAAC,eAAmC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,eAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,EAAE;YACnI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,eAA6C;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,EAAE;YACrI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,4BAA4B,CAAC,eAA6C;QACxE,OAAO,eAAe,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,sBAAsB,CAAC,EAAuC,EAAE,EAAuC;QACrG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChH,CAAC;IAED,uCAAuC,CACrC,yBAAiC,EACjC,GAAG,wBAAqD;QAExD,MAAM,iBAAiB,GAAW,wBAAwB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC7E,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,oCAAoC,GAAG,yBAAyB,CAAC,GAAG,CACxE,mBAAmB,CAAC,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAE,CAC/E,CAAC;YACF,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;gBAC5E,MAAM,yBAAyB,GAAG,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,CAAC;gBACzF,IAAI,oCAAoC,CAAC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;oBAC5E,OAAO,KAAK,CAAC;iBACd;gBACD,oCAAoC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBACrE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,sBAAsB,EAAE,GAAG,yBAAyB,CAAC,CAAC;SAClE;QACD,OAAO,yBAAyB,CAAC;IACnC,CAAC;;4FA9DU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBADT,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAmB7D,MAAM,oBAAoB;IAG/B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAEW,CAAC;IAExG,MAAM,CAAC,aAA+B;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAoB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,aAA6B;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC9H,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,aAAyC;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAChI,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAsB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,0BAA0B,CAAC,aAAyC;QAClE,OAAO,aAAa,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB,CAAC,EAAqC,EAAE,EAAqC;QAC/F,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC5G,CAAC;IAED,qCAAqC,CACnC,uBAA+B,EAC/B,GAAG,qBAAkD;QAErD,MAAM,cAAc,GAAW,qBAAqB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvE,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,kCAAkC,GAAG,uBAAuB,CAAC,GAAG,CACpE,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAE,CACzE,CAAC;YACF,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACpE,MAAM,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnF,IAAI,kCAAkC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;oBACxE,OAAO,KAAK,CAAC;iBACd;gBACD,kCAAkC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACjE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,mBAAmB,EAAE,GAAG,uBAAuB,CAAC,CAAC;SAC7D;QACD,OAAO,uBAAuB,CAAC;IACjC,CAAC;IAES,qBAAqB,CAA2E,aAAgB;QACxH,OAAO;YACL,GAAG,aAAa;YAChB,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,IAAI;SAC3C,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,iBAAoC;QAClE,OAAO;YACL,GAAG,iBAAiB;YACpB,IAAI,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,qDAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SACzE,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAoC;QACtE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAAsC;QAC7E,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;wFAjGU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADP,MAAM;;;;;;;;;;;;;;;;;;;;ACtBoB;AAEgB;;;;AAS7D,MAAM,mBAAmB;IAG9B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAEW,CAAC;IAExG,MAAM,CAAC,YAA6B;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,YAA2B;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,EAAE;YACvH,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,YAAuC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,EAAE;YACzH,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,yBAAyB,CAAC,YAAuC;QAC/D,OAAO,YAAY,CAAC,EAAE,CAAC;IACzB,CAAC;IAED,mBAAmB,CAAC,EAAoC,EAAE,EAAoC;QAC5F,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC1G,CAAC;IAED,oCAAoC,CAClC,sBAA8B,EAC9B,GAAG,qBAAkD;QAErD,MAAM,cAAc,GAAW,qBAAqB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvE,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,iCAAiC,GAAG,sBAAsB,CAAC,GAAG,CAClE,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAE,CACtE,CAAC;YACF,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE;gBACnE,MAAM,sBAAsB,GAAG,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC;gBAChF,IAAI,iCAAiC,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;oBACtE,OAAO,KAAK,CAAC;iBACd;gBACD,iCAAiC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBAC/D,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,mBAAmB,EAAE,GAAG,sBAAsB,CAAC,CAAC;SAC5D;QACD,OAAO,sBAAsB,CAAC;IAChC,CAAC;;sFA9DU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBADN,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,qBAAqB;IAGhC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;IAES,CAAC;IAExG,MAAM,CAAC,cAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YAC/H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,cAA2C;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YACjI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,2BAA2B,CAAC,cAA2C;QACrE,OAAO,cAAc,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB,CAAC,EAAsC,EAAE,EAAsC;QAClG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC9G,CAAC;IAED,sCAAsC,CACpC,wBAAgC,EAChC,GAAG,uBAAoD;QAEvD,MAAM,gBAAgB,GAAW,uBAAuB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC3E,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,MAAM,mCAAmC,GAAG,wBAAwB,CAAC,GAAG,CACtE,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAE,CAC5E,CAAC;YACF,MAAM,qBAAqB,GAAG,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;gBACzE,MAAM,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;gBACtF,IAAI,mCAAmC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;oBAC1E,OAAO,KAAK,CAAC;iBACd;gBACD,mCAAmC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBACnE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,qBAAqB,EAAE,GAAG,wBAAwB,CAAC,CAAC;SAChE;QACD,OAAO,wBAAwB,CAAC;IAClC,CAAC;;0FA9DU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,oBAAoB;IAG/B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAEW,CAAC;IAExG,MAAM,CAAC,aAA+B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,aAA6B;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,EAAE;YAC3H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,aAAyC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAiB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,aAAa,EAAE;YAC7H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACrG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,0BAA0B,CAAC,aAAyC;QAClE,OAAO,aAAa,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB,CAAC,EAAqC,EAAE,EAAqC;QAC/F,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC5G,CAAC;IAED,qCAAqC,CACnC,uBAA+B,EAC/B,GAAG,qBAAkD;QAErD,MAAM,cAAc,GAAW,qBAAqB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvE,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,kCAAkC,GAAG,uBAAuB,CAAC,GAAG,CACpE,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAE,CACzE,CAAC;YACF,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACpE,MAAM,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnF,IAAI,kCAAkC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;oBACxE,OAAO,KAAK,CAAC;iBACd;gBACD,kCAAkC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACjE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,mBAAmB,EAAE,GAAG,uBAAuB,CAAC,CAAC;SAC7D;QACD,OAAO,uBAAuB,CAAC;IACjC,CAAC;;wFA9DU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADP,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,eAAe;IAG1B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAEkB,CAAC;IAExG,MAAM,CAAC,QAAqB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,MAAM,CAAC,QAAmB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpI,CAAC;IAED,aAAa,CAAC,QAA+B;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtI,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,qBAAqB,CAAC,QAA+B;QACnD,OAAO,QAAQ,CAAC,EAAE,CAAC;IACrB,CAAC;IAED,eAAe,CAAC,EAAgC,EAAE,EAAgC;QAChF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAClG,CAAC;IAED,gCAAgC,CAC9B,kBAA0B,EAC1B,GAAG,eAA4C;QAE/C,MAAM,QAAQ,GAAW,eAAe,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC3D,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAM,6BAA6B,GAAG,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAE,CAAC,CAAC;YACxH,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gBACnD,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;gBACpE,IAAI,6BAA6B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;oBAC9D,OAAO,KAAK,CAAC;iBACd;gBACD,6BAA6B,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,aAAa,EAAE,GAAG,kBAAkB,CAAC,CAAC;SAClD;QACD,OAAO,kBAAkB,CAAC;IAC5B,CAAC;;8EAxDU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBADF,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,cAAc;IAGzB,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAEkB,CAAC;IAExG,MAAM,CAAC,OAAmB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtF,CAAC;IAED,MAAM,CAAC,OAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChI,CAAC;IAED,aAAa,CAAC,OAA6B;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClI,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,oBAAoB,CAAC,OAA6B;QAChD,OAAO,OAAO,CAAC,EAAE,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,EAA+B,EAAE,EAA+B;QAC7E,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChG,CAAC;IAED,+BAA+B,CAC7B,iBAAyB,EACzB,GAAG,eAA4C;QAE/C,MAAM,QAAQ,GAAW,eAAe,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC3D,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,MAAM,4BAA4B,GAAG,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAE,CAAC,CAAC;YACnH,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gBAClD,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;gBACjE,IAAI,4BAA4B,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;oBAC5D,OAAO,KAAK,CAAC;iBACd;gBACD,4BAA4B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACrD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,aAAa,EAAE,GAAG,iBAAiB,CAAC,CAAC;SACjD;QACD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;;4EAxDU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,kBAAkB;IAG7B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;IAEY,CAAC;IAExG,MAAM,CAAC,WAA2B;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,WAAyB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,EAAE;YACnH,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,WAAqC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAe,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,EAAE;YACrH,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACnG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,wBAAwB,CAAC,WAAqC;QAC5D,OAAO,WAAW,CAAC,EAAE,CAAC;IACxB,CAAC;IAED,kBAAkB,CAAC,EAAmC,EAAE,EAAmC;QACzF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACxG,CAAC;IAED,mCAAmC,CACjC,qBAA6B,EAC7B,GAAG,oBAAiD;QAEpD,MAAM,aAAa,GAAW,oBAAoB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACrE,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,MAAM,gCAAgC,GAAG,qBAAqB,CAAC,GAAG,CAChE,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAE,CACnE,CAAC;YACF,MAAM,kBAAkB,GAAG,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE;gBAChE,MAAM,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;gBAC7E,IAAI,gCAAgC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;oBACpE,OAAO,KAAK,CAAC;iBACd;gBACD,gCAAgC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC7D,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,kBAAkB,EAAE,GAAG,qBAAqB,CAAC,CAAC;SAC1D;QACD,OAAO,qBAAqB,CAAC;IAC/B,CAAC;;oFA9DU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBADL,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,yBAAyB;IAGpC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;IAEM,CAAC;IAExG,MAAM,CAAC,kBAAyC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,IAAI,CAAC,WAAW,EAAE,kBAAkB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5G,CAAC;IAED,MAAM,CAAC,kBAAuC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,+BAA+B,CAAC,kBAAkB,CAAC,EAAE,EACjF,kBAAkB,EAClB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,kBAAmD;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,+BAA+B,CAAC,kBAAkB,CAAC,EAAE,EACjF,kBAAkB,EAClB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,+BAA+B,CAAC,kBAAmD;QACjF,OAAO,kBAAkB,CAAC,EAAE,CAAC;IAC/B,CAAC;IAED,yBAAyB,CAAC,EAA0C,EAAE,EAA0C;QAC9G,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACtH,CAAC;IAED,0CAA0C,CACxC,4BAAoC,EACpC,GAAG,yBAAsD;QAEzD,MAAM,kBAAkB,GAAW,yBAAyB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC/E,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,uCAAuC,GAAG,4BAA4B,CAAC,GAAG,CAC9E,sBAAsB,CAAC,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,sBAAsB,CAAE,CACxF,CAAC;YACF,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAE;gBACjF,MAAM,4BAA4B,GAAG,IAAI,CAAC,+BAA+B,CAAC,sBAAsB,CAAC,CAAC;gBAClG,IAAI,uCAAuC,CAAC,QAAQ,CAAC,4BAA4B,CAAC,EAAE;oBAClF,OAAO,KAAK,CAAC;iBACd;gBACD,uCAAuC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;gBAC3E,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,uBAAuB,EAAE,GAAG,4BAA4B,CAAC,CAAC;SACtE;QACD,OAAO,4BAA4B,CAAC;IACtC,CAAC;;kGAlEU,yBAAyB;0HAAzB,yBAAyB,WAAzB,yBAAyB,mBADZ,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,uBAAuB;IAGlC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;IAEM,CAAC;IAExG,MAAM,CAAC,gBAAqC;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,IAAI,CAAC,WAAW,EAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,MAAM,CAAC,gBAAmC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,EAAE,EAC7E,gBAAgB,EAChB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,gBAA+C;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,EAAE,EAC7E,gBAAgB,EAChB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,6BAA6B,CAAC,gBAA+C;QAC3E,OAAO,gBAAgB,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,uBAAuB,CAAC,EAAwC,EAAE,EAAwC;QACxG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAClH,CAAC;IAED,wCAAwC,CACtC,0BAAkC,EAClC,GAAG,yBAAsD;QAEzD,MAAM,kBAAkB,GAAW,yBAAyB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC/E,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,qCAAqC,GAAG,0BAA0B,CAAC,GAAG,CAC1E,oBAAoB,CAAC,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAE,CAClF,CAAC;YACF,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE;gBAC/E,MAAM,0BAA0B,GAAG,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,CAAC;gBAC5F,IAAI,qCAAqC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;oBAC9E,OAAO,KAAK,CAAC;iBACd;gBACD,qCAAqC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBACvE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,uBAAuB,EAAE,GAAG,0BAA0B,CAAC,CAAC;SACpE;QACD,OAAO,0BAA0B,CAAC;IACpC,CAAC;;8FAlEU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBADV,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,qBAAqB;IAGhC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;IAES,CAAC;IAExG,MAAM,CAAC,cAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YAC/H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,cAA2C;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YACjI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,2BAA2B,CAAC,cAA2C;QACrE,OAAO,cAAc,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB,CAAC,EAAsC,EAAE,EAAsC;QAClG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC9G,CAAC;IAED,sCAAsC,CACpC,wBAAgC,EAChC,GAAG,sBAAmD;QAEtD,MAAM,eAAe,GAAW,sBAAsB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACzE,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,MAAM,mCAAmC,GAAG,wBAAwB,CAAC,GAAG,CACtE,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAE,CAC5E,CAAC;YACF,MAAM,oBAAoB,GAAG,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;gBACvE,MAAM,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;gBACtF,IAAI,mCAAmC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;oBAC1E,OAAO,KAAK,CAAC;iBACd;gBACD,mCAAmC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBACnE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,oBAAoB,EAAE,GAAG,wBAAwB,CAAC,CAAC;SAC/D;QACD,OAAO,wBAAwB,CAAC;IAClC,CAAC;;0FA9DU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,iBAAiB;IAG5B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;IAEe,CAAC;IAExG,MAAM,CAAC,UAAyB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,MAAM,CAAC,UAAuB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE;YAC/G,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,UAAmC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAc,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,EAAE;YACjH,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,uBAAuB,CAAC,UAAmC;QACzD,OAAO,UAAU,CAAC,EAAE,CAAC;IACvB,CAAC;IAED,iBAAiB,CAAC,EAAkC,EAAE,EAAkC;QACtF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACtG,CAAC;IAED,kCAAkC,CAChC,oBAA4B,EAC5B,GAAG,iBAA8C;QAEjD,MAAM,UAAU,GAAW,iBAAiB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC/D,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,MAAM,+BAA+B,GAAG,oBAAoB,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAE,CAAC,CAAC;YAClI,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;gBACzD,MAAM,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;gBAC1E,IAAI,+BAA+B,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;oBAClE,OAAO,KAAK,CAAC;iBACd;gBACD,+BAA+B,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,eAAe,EAAE,GAAG,oBAAoB,CAAC,CAAC;SACtD;QACD,OAAO,oBAAoB,CAAC;IAC9B,CAAC;;kFA5DU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBADJ,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,0BAA0B;IAGrC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;IAEM,CAAC;IAExG,MAAM,CAAC,mBAA2C;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAuB,IAAI,CAAC,WAAW,EAAE,mBAAmB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9G,CAAC;IAED,MAAM,CAAC,mBAAyC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gCAAgC,CAAC,mBAAmB,CAAC,EAAE,EACnF,mBAAmB,EACnB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,mBAAqD;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CACpB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gCAAgC,CAAC,mBAAmB,CAAC,EAAE,EACnF,mBAAmB,EACnB,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACnG,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3G,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,gCAAgC,CAAC,mBAAqD;QACpF,OAAO,mBAAmB,CAAC,EAAE,CAAC;IAChC,CAAC;IAED,0BAA0B,CAAC,EAA2C,EAAE,EAA2C;QACjH,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,gCAAgC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACxH,CAAC;IAED,2CAA2C,CACzC,6BAAqC,EACrC,GAAG,0BAAuD;QAE1D,MAAM,mBAAmB,GAAW,0BAA0B,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACjF,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,MAAM,wCAAwC,GAAG,6BAA6B,CAAC,GAAG,CAChF,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,gCAAgC,CAAC,uBAAuB,CAAE,CAC3F,CAAC;YACF,MAAM,wBAAwB,GAAG,mBAAmB,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAE;gBACpF,MAAM,6BAA6B,GAAG,IAAI,CAAC,gCAAgC,CAAC,uBAAuB,CAAC,CAAC;gBACrG,IAAI,wCAAwC,CAAC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;oBACpF,OAAO,KAAK,CAAC;iBACd;gBACD,wCAAwC,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;gBAC7E,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,wBAAwB,EAAE,GAAG,6BAA6B,CAAC,CAAC;SACxE;QACD,OAAO,6BAA6B,CAAC;IACvC,CAAC;;oGAlEU,0BAA0B;2HAA1B,0BAA0B,WAA1B,0BAA0B,mBADb,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,qBAAqB;IAGhC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;IAES,CAAC;IAExG,MAAM,CAAC,cAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YAC/H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,cAA2C;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YACjI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,2BAA2B,CAAC,cAA2C;QACrE,OAAO,cAAc,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB,CAAC,EAAsC,EAAE,EAAsC;QAClG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC9G,CAAC;IAED,sCAAsC,CACpC,wBAAgC,EAChC,GAAG,uBAAoD;QAEvD,MAAM,gBAAgB,GAAW,uBAAuB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC3E,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,MAAM,mCAAmC,GAAG,wBAAwB,CAAC,GAAG,CACtE,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAE,CAC5E,CAAC;YACF,MAAM,qBAAqB,GAAG,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;gBACzE,MAAM,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;gBACtF,IAAI,mCAAmC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;oBAC1E,OAAO,KAAK,CAAC;iBACd;gBACD,mCAAmC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBACnE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,qBAAqB,EAAE,GAAG,wBAAwB,CAAC,CAAC;SAChE;QACD,OAAO,wBAAwB,CAAC;IAClC,CAAC;;0FA9DU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAmB7D,MAAM,YAAY;IAGvB,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAEoB,CAAC;IAExG,MAAM,CAAC,KAAe;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1I,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACtG,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,KAAyB;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxG,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAc,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAC,KAAyB;QAC1C,OAAO,KAAK,CAAC,EAAE,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,EAA6B,EAAE,EAA6B;QACvE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC5F,CAAC;IAED,6BAA6B,CAC3B,eAAuB,EACvB,GAAG,aAA0C;QAE7C,MAAM,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,0BAA0B,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAE,CAAC,CAAC;YACzG,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC5C,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAC3D,IAAI,0BAA0B,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;oBACxD,OAAO,KAAK,CAAC;iBACd;gBACD,0BAA0B,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,WAAW,EAAE,GAAG,eAAe,CAAC,CAAC;SAC7C;QACD,OAAO,eAAe,CAAC;IACzB,CAAC;IAES,qBAAqB,CAAmD,KAAQ;QACxF,OAAO;YACL,GAAG,KAAK;YACR,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,IAAI;SACnC,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,SAAoB;QAClD,OAAO;YACL,GAAG,SAAS;YACZ,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,qDAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SACzD,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAA4B;QAC9D,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAA8B;QACrE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;wEA7FU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBADC,MAAM;;;;;;;;;;;;;;;;;;;;ACtBoB;AAEgB;;;;AAS7D,MAAM,qBAAqB;IAGhC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;IAEU,CAAC;IAExG,MAAM,CAAC,cAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAkB,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,MAAM,CAAC,cAA+B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YAC/H,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,cAA2C;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,EAAE,cAAc,EAAE;YACjI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,2BAA2B,CAAC,cAA2C;QACrE,OAAO,cAAc,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB,CAAC,EAAsC,EAAE,EAAsC;QAClG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC9G,CAAC;IAED,sCAAsC,CACpC,wBAAgC,EAChC,GAAG,sBAAmD;QAEtD,MAAM,eAAe,GAAW,sBAAsB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACzE,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,MAAM,mCAAmC,GAAG,wBAAwB,CAAC,GAAG,CACtE,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAE,CAC5E,CAAC;YACF,MAAM,oBAAoB,GAAG,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;gBACvE,MAAM,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;gBACtF,IAAI,mCAAmC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;oBAC1E,OAAO,KAAK,CAAC;iBACd;gBACD,mCAAmC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBACnE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,oBAAoB,EAAE,GAAG,wBAAwB,CAAC,CAAC;SAC/D;QACD,OAAO,wBAAwB,CAAC;IAClC,CAAC;;0FA9DU,qBAAqB;sHAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAmB7D,MAAM,gBAAgB;IAG3B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAEiB,CAAC;IAExG,MAAM,CAAC,SAAuB;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAgB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,SAAqB;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAClH,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,SAAiC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpH,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAkB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAChF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,sBAAsB,CAAC,SAAiC;QACtD,OAAO,SAAS,CAAC,EAAE,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,EAAiC,EAAE,EAAiC;QACnF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACpG,CAAC;IAED,iCAAiC,CAC/B,mBAA2B,EAC3B,GAAG,gBAA6C;QAEhD,MAAM,SAAS,GAAW,gBAAgB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC7D,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,MAAM,8BAA8B,GAAG,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAE,CAAC,CAAC;YAC7H,MAAM,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;gBACtD,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;gBACvE,IAAI,8BAA8B,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;oBAChE,OAAO,KAAK,CAAC;iBACd;gBACD,8BAA8B,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,cAAc,EAAE,GAAG,mBAAmB,CAAC,CAAC;SACpD;QACD,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAES,qBAAqB,CAA+D,SAAY;QACxG,OAAO;YACL,GAAG,SAAS;YACZ,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,IAAI;SACvC,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,aAA4B;QAC1D,OAAO;YACL,GAAG,aAAa;YAChB,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,qDAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SACjE,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAgC;QAClE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAAkC;QACzE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;gFA/FU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBADH,MAAM;;;;;;;;;;;;;;;;;;;;ACtBoB;AAEgB;;;;AAS7D,MAAM,YAAY;IAGvB,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAEoB,CAAC;IAExG,MAAM,CAAC,KAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxH,CAAC;IAED,aAAa,CAAC,KAAyB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAS,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1H,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACrF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAC,KAAyB;QAC1C,OAAO,KAAK,CAAC,EAAE,CAAC;IAClB,CAAC;IAED,YAAY,CAAC,EAA6B,EAAE,EAA6B;QACvE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC5F,CAAC;IAED,6BAA6B,CAC3B,eAAuB,EACvB,GAAG,aAA0C;QAE7C,MAAM,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,0BAA0B,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAE,CAAC,CAAC;YACzG,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;gBAC5C,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAC3D,IAAI,0BAA0B,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;oBACxD,OAAO,KAAK,CAAC;iBACd;gBACD,0BAA0B,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,WAAW,EAAE,GAAG,eAAe,CAAC,CAAC;SAC7C;QACD,OAAO,eAAe,CAAC;IACzB,CAAC;;wEAxDU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBADC,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAqB7D,MAAM,wBAAwB;IAGnC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;IAEM,CAAC;IAExG,MAAM,CAAC,iBAAuC;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAwB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,iBAAqC;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAwB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,EAAE;YACjH,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,iBAAiD;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAwB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,EAAE;YACnH,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAwB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAChF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAA0B,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,8BAA8B,CAAC,iBAAiD;QAC9E,OAAO,iBAAiB,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,wBAAwB,CAAC,EAAyC,EAAE,EAAyC;QAC3G,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACpH,CAAC;IAED,yCAAyC,CACvC,2BAAmC,EACnC,GAAG,yBAAsD;QAEzD,MAAM,kBAAkB,GAAW,yBAAyB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC/E,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,MAAM,sCAAsC,GAAG,2BAA2B,CAAC,GAAG,CAC5E,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,qBAAqB,CAAE,CACrF,CAAC;YACF,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE;gBAChF,MAAM,2BAA2B,GAAG,IAAI,CAAC,8BAA8B,CAAC,qBAAqB,CAAC,CAAC;gBAC/F,IAAI,sCAAsC,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;oBAChF,OAAO,KAAK,CAAC;iBACd;gBACD,sCAAsC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;gBACzE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,uBAAuB,EAAE,GAAG,2BAA2B,CAAC,CAAC;SACrE;QACD,OAAO,2BAA2B,CAAC;IACrC,CAAC;IAES,qBAAqB,CAC7B,iBAAoB;QAEpB,OAAO;YACL,GAAG,iBAAiB;YACpB,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,IAAI;YAC9C,SAAS,EAAE,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,IAAI;YACxD,OAAO,EAAE,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,IAAI;SACrD,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,qBAA4C;QAC1E,OAAO;YACL,GAAG,qBAAqB;YACxB,IAAI,EAAE,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,qDAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;YAChF,SAAS,EAAE,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,qDAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/F,OAAO,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,qDAAK,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1F,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAwC;QAC1E,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAA0C;QACjF,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;gGA3GU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB,mBADX,MAAM;;;;;;;;;;;;;;;;;;;;;;ACzBK;AACP;AAEsB;AAEgB;;;;AAoB7D,MAAM,gBAAgB;IAG3B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;IAEe,CAAC;IAExG,MAAM,CAAC,SAAuB;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAgB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,SAAqB;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAClH,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,SAAiC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpH,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAkB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAChF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,sBAAsB,CAAC,SAAiC;QACtD,OAAO,SAAS,CAAC,EAAE,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,EAAiC,EAAE,EAAiC;QACnF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IACpG,CAAC;IAED,iCAAiC,CAC/B,mBAA2B,EAC3B,GAAG,kBAA+C;QAElD,MAAM,WAAW,GAAW,kBAAkB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACjE,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,MAAM,8BAA8B,GAAG,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAE,CAAC,CAAC;YAC7H,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;gBAC1D,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;gBACvE,IAAI,8BAA8B,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;oBAChE,OAAO,KAAK,CAAC;iBACd;gBACD,8BAA8B,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACzD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,gBAAgB,EAAE,GAAG,mBAAmB,CAAC,CAAC;SACtD;QACD,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAES,qBAAqB,CAA+D,SAAY;QACxG,OAAO;YACL,GAAG,SAAS;YACZ,SAAS,EAAE,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,IAAI;YAChD,OAAO,EAAE,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,IAAI;SAC7C,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,aAA4B;QAC1D,OAAO;YACL,GAAG,aAAa;YAChB,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,qDAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/E,OAAO,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,qDAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;SAC1E,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAgC;QAClE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAAkC;QACzE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;gFAjGU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBADH,MAAM;;;;;;;;;;;;;;;;;;;;ACvBoB;AAEgB;;;;AAS7D,MAAM,sBAAsB;IAGjC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC;IAEO,CAAC;IAExG,MAAM,CAAC,eAAmC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,MAAM,CAAC,eAAiC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,EAAE;YACnI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,eAA6C;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,EAAE,EAAE,eAAe,EAAE;YACrI,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,4BAA4B,CAAC,eAA6C;QACxE,OAAO,eAAe,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,sBAAsB,CAAC,EAAuC,EAAE,EAAuC;QACrG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAChH,CAAC;IAED,uCAAuC,CACrC,yBAAiC,EACjC,GAAG,wBAAqD;QAExD,MAAM,iBAAiB,GAAW,wBAAwB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC7E,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,oCAAoC,GAAG,yBAAyB,CAAC,GAAG,CACxE,mBAAmB,CAAC,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAE,CAC/E,CAAC;YACF,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;gBAC5E,MAAM,yBAAyB,GAAG,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,CAAC;gBACzF,IAAI,oCAAoC,CAAC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;oBAC5E,OAAO,KAAK,CAAC;iBACd;gBACD,oCAAoC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBACrE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,sBAAsB,EAAE,GAAG,yBAAyB,CAAC,CAAC;SAClE;QACD,OAAO,yBAAyB,CAAC;IACnC,CAAC;;4FA9DU,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBADT,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAmB7D,MAAM,oBAAoB;IAG/B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;IAEY,CAAC;IAExG,MAAM,CAAC,aAA+B;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAoB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACxE,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,aAA6B;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC9H,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,aAAyC;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAChI,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAoB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAsB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACpF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,0BAA0B,CAAC,aAAyC;QAClE,OAAO,aAAa,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAoB,CAAC,EAAqC,EAAE,EAAqC;QAC/F,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC5G,CAAC;IAED,qCAAqC,CACnC,uBAA+B,EAC/B,GAAG,qBAAkD;QAErD,MAAM,cAAc,GAAW,qBAAqB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACvE,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,kCAAkC,GAAG,uBAAuB,CAAC,GAAG,CACpE,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAE,CACzE,CAAC;YACF,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACpE,MAAM,uBAAuB,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;gBACnF,IAAI,kCAAkC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;oBACxE,OAAO,KAAK,CAAC;iBACd;gBACD,kCAAkC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACjE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,mBAAmB,EAAE,GAAG,uBAAuB,CAAC,CAAC;SAC7D;QACD,OAAO,uBAAuB,CAAC;IACjC,CAAC;IAES,qBAAqB,CAA2E,aAAgB;QACxH,OAAO;YACL,GAAG,aAAa;YAChB,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,IAAI;SAC3C,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,iBAAoC;QAClE,OAAO;YACL,GAAG,iBAAiB;YACpB,IAAI,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,qDAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;SACzE,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAoC;QACtE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAAsC;QAC7E,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;wFAjGU,oBAAoB;qHAApB,oBAAoB,WAApB,oBAAoB,mBADP,MAAM;;;;;;;;;;;;;;;;;;;;ACtBoB;AAEgB;;;;AAS7D,MAAM,aAAa;IAGxB,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IAEmB,CAAC;IAExG,MAAM,CAAC,MAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,MAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5H,CAAC;IAED,aAAa,CAAC,MAA2B;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAU,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9H,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,mBAAmB,CAAC,MAA2B;QAC7C,OAAO,MAAM,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,aAAa,CAAC,EAA8B,EAAE,EAA8B;QAC1E,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAC9F,CAAC;IAED,8BAA8B,CAC5B,gBAAwB,EACxB,GAAG,cAA2C;QAE9C,MAAM,OAAO,GAAW,cAAc,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QACzD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,MAAM,2BAA2B,GAAG,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAE,CAAC,CAAC;YAC9G,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;gBAC/C,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBAC9D,IAAI,2BAA2B,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;oBAC1D,OAAO,KAAK,CAAC;iBACd;gBACD,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,YAAY,EAAE,GAAG,gBAAgB,CAAC,CAAC;SAC/C;QACD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;;0EAxDU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBADA,MAAM;;;;;;;;;;;;;;;;;;;;ACVoB;AAEgB;;;;AAS7D,MAAM,eAAe;IAG1B,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAEiB,CAAC;IAExG,MAAM,CAAC,QAAqB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,MAAM,CAAC,QAAmB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpI,CAAC;IAED,aAAa,CAAC,QAA+B;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtI,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,qBAAqB,CAAC,QAA+B;QACnD,OAAO,QAAQ,CAAC,EAAE,CAAC;IACrB,CAAC;IAED,eAAe,CAAC,EAAgC,EAAE,EAAgC;QAChF,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAClG,CAAC;IAED,gCAAgC,CAC9B,kBAA0B,EAC1B,GAAG,gBAA6C;QAEhD,MAAM,SAAS,GAAW,gBAAgB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC7D,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,MAAM,6BAA6B,GAAG,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAE,CAAC,CAAC;YACxH,MAAM,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gBACrD,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;gBACpE,IAAI,6BAA6B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;oBAC9D,OAAO,KAAK,CAAC;iBACd;gBACD,6BAA6B,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,cAAc,EAAE,GAAG,kBAAkB,CAAC,CAAC;SACnD;QACD,OAAO,kBAAkB,CAAC;IAC5B,CAAC;;8EAxDU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBADF,MAAM;;;;;;;;;;;;;;;;;;;;;;ACXK;AACP;AAEsB;AAEgB;;;;AAoB7D,MAAM,uBAAuB;IAGlC,YAAsB,IAAgB,EAAY,wBAAkD;QAA9E,SAAI,GAAJ,IAAI,CAAY;QAAY,6BAAwB,GAAxB,wBAAwB,CAA0B;QAF1F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;IAEQ,CAAC;IAExG,MAAM,CAAC,gBAAqC;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAuB,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC3E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,gBAAmC;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAuB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE;YAC9G,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,gBAA+C;QAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI;aACb,KAAK,CAAuB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE;YAChH,OAAO,EAAE,UAAU;SACpB,CAAC;aACD,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAuB,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC/E,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kFAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAyB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACvF,IAAI,CAAC,mDAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,6BAA6B,CAAC,gBAA+C;QAC3E,OAAO,gBAAgB,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,uBAAuB,CAAC,EAAwC,EAAE,EAAwC;QACxG,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC;IAClH,CAAC;IAED,wCAAwC,CACtC,0BAAkC,EAClC,GAAG,wBAAqD;QAExD,MAAM,iBAAiB,GAAW,wBAAwB,CAAC,MAAM,CAAC,8DAAS,CAAC,CAAC;QAC7E,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,MAAM,qCAAqC,GAAG,0BAA0B,CAAC,GAAG,CAC1E,oBAAoB,CAAC,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAE,CAClF,CAAC;YACF,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE;gBAC7E,MAAM,0BAA0B,GAAG,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,CAAC;gBAC5F,IAAI,qCAAqC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;oBAC9E,OAAO,KAAK,CAAC;iBACd;gBACD,qCAAqC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBACvE,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,sBAAsB,EAAE,GAAG,0BAA0B,CAAC,CAAC;SACnE;QACD,OAAO,0BAA0B,CAAC;IACpC,CAAC;IAES,qBAAqB,CAC7B,gBAAmB;QAEnB,OAAO;YACL,GAAG,gBAAgB;YACnB,eAAe,EAAE,gBAAgB,CAAC,eAAe,EAAE,MAAM,EAAE,IAAI,IAAI;YACnE,gBAAgB,EAAE,gBAAgB,CAAC,gBAAgB,EAAE,MAAM,EAAE,IAAI,IAAI;SACtE,CAAC;IACJ,CAAC;IAES,qBAAqB,CAAC,oBAA0C;QACxE,OAAO;YACL,GAAG,oBAAoB;YACvB,eAAe,EAAE,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,qDAAK,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS;YAC/G,gBAAgB,EAAE,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,qDAAK,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS;SACnH,CAAC;IACJ,CAAC;IAES,yBAAyB,CAAC,GAAuC;QACzE,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;SAC7D,CAAC,CAAC;IACL,CAAC;IAES,8BAA8B,CAAC,GAAyC;QAChF,OAAO,GAAG,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;SAC/E,CAAC,CAAC;IACL,CAAC;;8FAzGU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBADV,MAAM;;;;;;;;;;;;;;;;;ACxBzB,MAAM,WAAW;IADxB;QAEU,aAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC9C,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,MAAM;SACpB,CAAC,CAAC;KAKJ;IAHQ,SAAS,CAAC,QAAgB,EAAE,KAAa;QAC9C,OAAO,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC;IACrF,CAAC;;sEARU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBADE,MAAM","sources":["./src/main/webapp/app/config/input.constants.ts","./src/main/webapp/app/config/navigation.constants.ts","./src/main/webapp/app/core/util/data-util.service.ts","./src/main/webapp/app/entities/activity-company/service/activity-company.service.ts","./src/main/webapp/app/entities/activity-saved/service/activity-saved.service.ts","./src/main/webapp/app/entities/activity-self/service/activity-self.service.ts","./src/main/webapp/app/entities/booked-activity/service/booked-activity.service.ts","./src/main/webapp/app/entities/booked-caterer/service/booked-caterer.service.ts","./src/main/webapp/app/entities/caterers/service/caterers.service.ts","./src/main/webapp/app/entities/cuisine/service/cuisine.service.ts","./src/main/webapp/app/entities/deco-company/service/deco-company.service.ts","./src/main/webapp/app/entities/deco-contact-details/service/deco-contact-details.service.ts","./src/main/webapp/app/entities/deco-saved-company/service/deco-saved-company.service.ts","./src/main/webapp/app/entities/deco-saved-theme/service/deco-saved-theme.service.ts","./src/main/webapp/app/entities/deco-themes/service/deco-themes.service.ts","./src/main/webapp/app/entities/dietary-requirements/service/dietary-requirements.service.ts","./src/main/webapp/app/entities/event-itinerary/service/event-itinerary.service.ts","./src/main/webapp/app/entities/event/service/event.service.ts","./src/main/webapp/app/entities/favourites-list/service/favourites-list.service.ts","./src/main/webapp/app/entities/feedbacks/service/feedbacks.service.ts","./src/main/webapp/app/entities/intro/service/intro.service.ts","./src/main/webapp/app/entities/itinerary-date-time/service/itinerary-date-time.service.ts","./src/main/webapp/app/entities/itinerary/service/itinerary.service.ts","./src/main/webapp/app/entities/mock-venue-entity/service/mock-venue-entity.service.ts","./src/main/webapp/app/entities/questionnaire/service/questionnaire.service.ts","./src/main/webapp/app/entities/rating/service/rating.service.ts","./src/main/webapp/app/entities/supplier/service/supplier.service.ts","./src/main/webapp/app/entities/venue-information/service/venue-information.service.ts","./src/main/webapp/app/shared/sort/sort.service.ts"],"sourcesContent":["export const DATE_FORMAT = 'YYYY-MM-DD';\r\nexport const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm';\r\n","export const ASC = 'asc';\r\nexport const DESC = 'desc';\r\nexport const SORT = 'sort';\r\nexport const ITEM_DELETED_EVENT = 'deleted';\r\nexport const DEFAULT_SORT_DATA = 'defaultSort';\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nexport type FileLoadErrorType = 'not.image' | 'could.not.extract';\r\n\r\nexport interface FileLoadError {\r\n  message: string;\r\n  key: FileLoadErrorType;\r\n  params?: any;\r\n}\r\n\r\n/**\r\n * An utility service for data.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataUtils {\r\n  /**\r\n   * Method to find the byte size of the string provides\r\n   */\r\n  byteSize(base64String: string): string {\r\n    return this.formatAsBytes(this.size(base64String));\r\n  }\r\n\r\n  /**\r\n   * Method to open file\r\n   */\r\n  openFile(data: string, contentType: string | null | undefined): void {\r\n    contentType = contentType ?? '';\r\n\r\n    const byteCharacters = atob(data);\r\n    const byteNumbers = new Array(byteCharacters.length);\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    const blob = new Blob([byteArray], {\r\n      type: contentType,\r\n    });\r\n    const fileURL = window.URL.createObjectURL(blob);\r\n    const win = window.open(fileURL);\r\n    win!.onload = function () {\r\n      URL.revokeObjectURL(fileURL);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object\r\n   * and returns an observable.\r\n   *\r\n   * @param event the object containing the file (at event.target.files[0])\r\n   * @param editForm the form group where the input field is located\r\n   * @param field the field name to set the file's 'base 64 data' on\r\n   * @param isImage boolean representing if the file represented by the event is an image\r\n   * @returns an observable that loads file to form field and completes if sussessful\r\n   *      or returns error as FileLoadError on failure\r\n   */\r\n  loadFileToForm(event: Event, editForm: FormGroup, field: string, isImage: boolean): Observable<void> {\r\n    return new Observable((observer: Observer<void>) => {\r\n      const eventTarget: HTMLInputElement | null = event.target as HTMLInputElement | null;\r\n      if (eventTarget?.files?.[0]) {\r\n        const file: File = eventTarget.files[0];\r\n        if (isImage && !file.type.startsWith('image/')) {\r\n          const error: FileLoadError = {\r\n            message: `File was expected to be an image but was found to be '${file.type}'`,\r\n            key: 'not.image',\r\n            params: { fileType: file.type },\r\n          };\r\n          observer.error(error);\r\n        } else {\r\n          const fieldContentType: string = field + 'ContentType';\r\n          this.toBase64(file, (base64Data: string) => {\r\n            editForm.patchValue({\r\n              [field]: base64Data,\r\n              [fieldContentType]: file.type,\r\n            });\r\n            observer.next();\r\n            observer.complete();\r\n          });\r\n        }\r\n      } else {\r\n        const error: FileLoadError = {\r\n          message: 'Could not extract file',\r\n          key: 'could.not.extract',\r\n          params: { event },\r\n        };\r\n        observer.error(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to convert the file to base64\r\n   */\r\n  private toBase64(file: File, callback: (base64Data: string) => void): void {\r\n    const fileReader: FileReader = new FileReader();\r\n    fileReader.onload = (e: ProgressEvent<FileReader>) => {\r\n      if (typeof e.target?.result === 'string') {\r\n        const base64Data: string = e.target.result.substring(e.target.result.indexOf('base64,') + 'base64,'.length);\r\n        callback(base64Data);\r\n      }\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }\r\n\r\n  private endsWith(suffix: string, str: string): boolean {\r\n    return str.includes(suffix, str.length - suffix.length);\r\n  }\r\n\r\n  private paddingSize(value: string): number {\r\n    if (this.endsWith('==', value)) {\r\n      return 2;\r\n    }\r\n    if (this.endsWith('=', value)) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private size(value: string): number {\r\n    return (value.length / 4) * 3 - this.paddingSize(value);\r\n  }\r\n\r\n  private formatAsBytes(size: number): string {\r\n    return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes'; // NOSONAR\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IActivityCompany, NewActivityCompany } from '../activity-company.model';\r\n\r\nexport type PartialUpdateActivityCompany = Partial<IActivityCompany> & Pick<IActivityCompany, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IActivityCompany>;\r\nexport type EntityArrayResponseType = HttpResponse<IActivityCompany[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivityCompanyService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/activity-companies');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(activityCompany: NewActivityCompany): Observable<EntityResponseType> {\r\n    return this.http.post<IActivityCompany>(this.resourceUrl, activityCompany, { observe: 'response' });\r\n  }\r\n\r\n  update(activityCompany: IActivityCompany): Observable<EntityResponseType> {\r\n    return this.http.put<IActivityCompany>(`${this.resourceUrl}/${this.getActivityCompanyIdentifier(activityCompany)}`, activityCompany, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(activityCompany: PartialUpdateActivityCompany): Observable<EntityResponseType> {\r\n    return this.http.patch<IActivityCompany>(`${this.resourceUrl}/${this.getActivityCompanyIdentifier(activityCompany)}`, activityCompany, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IActivityCompany>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IActivityCompany[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getActivityCompanyIdentifier(activityCompany: Pick<IActivityCompany, 'id'>): number {\r\n    return activityCompany.id;\r\n  }\r\n\r\n  compareActivityCompany(o1: Pick<IActivityCompany, 'id'> | null, o2: Pick<IActivityCompany, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getActivityCompanyIdentifier(o1) === this.getActivityCompanyIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addActivityCompanyToCollectionIfMissing<Type extends Pick<IActivityCompany, 'id'>>(\r\n    activityCompanyCollection: Type[],\r\n    ...activityCompaniesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const activityCompanies: Type[] = activityCompaniesToCheck.filter(isPresent);\r\n    if (activityCompanies.length > 0) {\r\n      const activityCompanyCollectionIdentifiers = activityCompanyCollection.map(\r\n        activityCompanyItem => this.getActivityCompanyIdentifier(activityCompanyItem)!\r\n      );\r\n      const activityCompaniesToAdd = activityCompanies.filter(activityCompanyItem => {\r\n        const activityCompanyIdentifier = this.getActivityCompanyIdentifier(activityCompanyItem);\r\n        if (activityCompanyCollectionIdentifiers.includes(activityCompanyIdentifier)) {\r\n          return false;\r\n        }\r\n        activityCompanyCollectionIdentifiers.push(activityCompanyIdentifier);\r\n        return true;\r\n      });\r\n      return [...activityCompaniesToAdd, ...activityCompanyCollection];\r\n    }\r\n    return activityCompanyCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IActivitySaved, NewActivitySaved } from '../activity-saved.model';\r\n\r\nexport type PartialUpdateActivitySaved = Partial<IActivitySaved> & Pick<IActivitySaved, 'id'>;\r\n\r\ntype RestOf<T extends IActivitySaved | NewActivitySaved> = Omit<T, 'date'> & {\r\n  date?: string | null;\r\n};\r\n\r\nexport type RestActivitySaved = RestOf<IActivitySaved>;\r\n\r\nexport type NewRestActivitySaved = RestOf<NewActivitySaved>;\r\n\r\nexport type PartialUpdateRestActivitySaved = RestOf<PartialUpdateActivitySaved>;\r\n\r\nexport type EntityResponseType = HttpResponse<IActivitySaved>;\r\nexport type EntityArrayResponseType = HttpResponse<IActivitySaved[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivitySavedService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/activity-saveds');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(activitySaved: NewActivitySaved): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(activitySaved);\r\n    return this.http\r\n      .post<RestActivitySaved>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(activitySaved: IActivitySaved): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(activitySaved);\r\n    return this.http\r\n      .put<RestActivitySaved>(`${this.resourceUrl}/${this.getActivitySavedIdentifier(activitySaved)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(activitySaved: PartialUpdateActivitySaved): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(activitySaved);\r\n    return this.http\r\n      .patch<RestActivitySaved>(`${this.resourceUrl}/${this.getActivitySavedIdentifier(activitySaved)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestActivitySaved>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestActivitySaved[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getActivitySavedIdentifier(activitySaved: Pick<IActivitySaved, 'id'>): number {\r\n    return activitySaved.id;\r\n  }\r\n\r\n  compareActivitySaved(o1: Pick<IActivitySaved, 'id'> | null, o2: Pick<IActivitySaved, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getActivitySavedIdentifier(o1) === this.getActivitySavedIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addActivitySavedToCollectionIfMissing<Type extends Pick<IActivitySaved, 'id'>>(\r\n    activitySavedCollection: Type[],\r\n    ...activitySavedsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const activitySaveds: Type[] = activitySavedsToCheck.filter(isPresent);\r\n    if (activitySaveds.length > 0) {\r\n      const activitySavedCollectionIdentifiers = activitySavedCollection.map(\r\n        activitySavedItem => this.getActivitySavedIdentifier(activitySavedItem)!\r\n      );\r\n      const activitySavedsToAdd = activitySaveds.filter(activitySavedItem => {\r\n        const activitySavedIdentifier = this.getActivitySavedIdentifier(activitySavedItem);\r\n        if (activitySavedCollectionIdentifiers.includes(activitySavedIdentifier)) {\r\n          return false;\r\n        }\r\n        activitySavedCollectionIdentifiers.push(activitySavedIdentifier);\r\n        return true;\r\n      });\r\n      return [...activitySavedsToAdd, ...activitySavedCollection];\r\n    }\r\n    return activitySavedCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IActivitySaved | NewActivitySaved | PartialUpdateActivitySaved>(activitySaved: T): RestOf<T> {\r\n    return {\r\n      ...activitySaved,\r\n      date: activitySaved.date?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restActivitySaved: RestActivitySaved): IActivitySaved {\r\n    return {\r\n      ...restActivitySaved,\r\n      date: restActivitySaved.date ? dayjs(restActivitySaved.date) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestActivitySaved>): HttpResponse<IActivitySaved> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestActivitySaved[]>): HttpResponse<IActivitySaved[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IActivitySelf, NewActivitySelf } from '../activity-self.model';\r\n\r\nexport type PartialUpdateActivitySelf = Partial<IActivitySelf> & Pick<IActivitySelf, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IActivitySelf>;\r\nexport type EntityArrayResponseType = HttpResponse<IActivitySelf[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivitySelfService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/activity-selves');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(activitySelf: NewActivitySelf): Observable<EntityResponseType> {\r\n    return this.http.post<IActivitySelf>(this.resourceUrl, activitySelf, { observe: 'response' });\r\n  }\r\n\r\n  update(activitySelf: IActivitySelf): Observable<EntityResponseType> {\r\n    return this.http.put<IActivitySelf>(`${this.resourceUrl}/${this.getActivitySelfIdentifier(activitySelf)}`, activitySelf, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(activitySelf: PartialUpdateActivitySelf): Observable<EntityResponseType> {\r\n    return this.http.patch<IActivitySelf>(`${this.resourceUrl}/${this.getActivitySelfIdentifier(activitySelf)}`, activitySelf, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IActivitySelf>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IActivitySelf[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getActivitySelfIdentifier(activitySelf: Pick<IActivitySelf, 'id'>): number {\r\n    return activitySelf.id;\r\n  }\r\n\r\n  compareActivitySelf(o1: Pick<IActivitySelf, 'id'> | null, o2: Pick<IActivitySelf, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getActivitySelfIdentifier(o1) === this.getActivitySelfIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addActivitySelfToCollectionIfMissing<Type extends Pick<IActivitySelf, 'id'>>(\r\n    activitySelfCollection: Type[],\r\n    ...activitySelvesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const activitySelves: Type[] = activitySelvesToCheck.filter(isPresent);\r\n    if (activitySelves.length > 0) {\r\n      const activitySelfCollectionIdentifiers = activitySelfCollection.map(\r\n        activitySelfItem => this.getActivitySelfIdentifier(activitySelfItem)!\r\n      );\r\n      const activitySelvesToAdd = activitySelves.filter(activitySelfItem => {\r\n        const activitySelfIdentifier = this.getActivitySelfIdentifier(activitySelfItem);\r\n        if (activitySelfCollectionIdentifiers.includes(activitySelfIdentifier)) {\r\n          return false;\r\n        }\r\n        activitySelfCollectionIdentifiers.push(activitySelfIdentifier);\r\n        return true;\r\n      });\r\n      return [...activitySelvesToAdd, ...activitySelfCollection];\r\n    }\r\n    return activitySelfCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IBookedActivity, NewBookedActivity } from '../booked-activity.model';\r\n\r\nexport type PartialUpdateBookedActivity = Partial<IBookedActivity> & Pick<IBookedActivity, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IBookedActivity>;\r\nexport type EntityArrayResponseType = HttpResponse<IBookedActivity[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BookedActivityService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/booked-activities');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(bookedActivity: NewBookedActivity): Observable<EntityResponseType> {\r\n    return this.http.post<IBookedActivity>(this.resourceUrl, bookedActivity, { observe: 'response' });\r\n  }\r\n\r\n  update(bookedActivity: IBookedActivity): Observable<EntityResponseType> {\r\n    return this.http.put<IBookedActivity>(`${this.resourceUrl}/${this.getBookedActivityIdentifier(bookedActivity)}`, bookedActivity, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(bookedActivity: PartialUpdateBookedActivity): Observable<EntityResponseType> {\r\n    return this.http.patch<IBookedActivity>(`${this.resourceUrl}/${this.getBookedActivityIdentifier(bookedActivity)}`, bookedActivity, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IBookedActivity>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IBookedActivity[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getBookedActivityIdentifier(bookedActivity: Pick<IBookedActivity, 'id'>): number {\r\n    return bookedActivity.id;\r\n  }\r\n\r\n  compareBookedActivity(o1: Pick<IBookedActivity, 'id'> | null, o2: Pick<IBookedActivity, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getBookedActivityIdentifier(o1) === this.getBookedActivityIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addBookedActivityToCollectionIfMissing<Type extends Pick<IBookedActivity, 'id'>>(\r\n    bookedActivityCollection: Type[],\r\n    ...bookedActivitiesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const bookedActivities: Type[] = bookedActivitiesToCheck.filter(isPresent);\r\n    if (bookedActivities.length > 0) {\r\n      const bookedActivityCollectionIdentifiers = bookedActivityCollection.map(\r\n        bookedActivityItem => this.getBookedActivityIdentifier(bookedActivityItem)!\r\n      );\r\n      const bookedActivitiesToAdd = bookedActivities.filter(bookedActivityItem => {\r\n        const bookedActivityIdentifier = this.getBookedActivityIdentifier(bookedActivityItem);\r\n        if (bookedActivityCollectionIdentifiers.includes(bookedActivityIdentifier)) {\r\n          return false;\r\n        }\r\n        bookedActivityCollectionIdentifiers.push(bookedActivityIdentifier);\r\n        return true;\r\n      });\r\n      return [...bookedActivitiesToAdd, ...bookedActivityCollection];\r\n    }\r\n    return bookedActivityCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IBookedCaterer, NewBookedCaterer } from '../booked-caterer.model';\r\n\r\nexport type PartialUpdateBookedCaterer = Partial<IBookedCaterer> & Pick<IBookedCaterer, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IBookedCaterer>;\r\nexport type EntityArrayResponseType = HttpResponse<IBookedCaterer[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BookedCatererService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/booked-caterers');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(bookedCaterer: NewBookedCaterer): Observable<EntityResponseType> {\r\n    return this.http.post<IBookedCaterer>(this.resourceUrl, bookedCaterer, { observe: 'response' });\r\n  }\r\n\r\n  update(bookedCaterer: IBookedCaterer): Observable<EntityResponseType> {\r\n    return this.http.put<IBookedCaterer>(`${this.resourceUrl}/${this.getBookedCatererIdentifier(bookedCaterer)}`, bookedCaterer, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(bookedCaterer: PartialUpdateBookedCaterer): Observable<EntityResponseType> {\r\n    return this.http.patch<IBookedCaterer>(`${this.resourceUrl}/${this.getBookedCatererIdentifier(bookedCaterer)}`, bookedCaterer, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IBookedCaterer>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IBookedCaterer[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getBookedCatererIdentifier(bookedCaterer: Pick<IBookedCaterer, 'id'>): number {\r\n    return bookedCaterer.id;\r\n  }\r\n\r\n  compareBookedCaterer(o1: Pick<IBookedCaterer, 'id'> | null, o2: Pick<IBookedCaterer, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getBookedCatererIdentifier(o1) === this.getBookedCatererIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addBookedCatererToCollectionIfMissing<Type extends Pick<IBookedCaterer, 'id'>>(\r\n    bookedCatererCollection: Type[],\r\n    ...bookedCaterersToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const bookedCaterers: Type[] = bookedCaterersToCheck.filter(isPresent);\r\n    if (bookedCaterers.length > 0) {\r\n      const bookedCatererCollectionIdentifiers = bookedCatererCollection.map(\r\n        bookedCatererItem => this.getBookedCatererIdentifier(bookedCatererItem)!\r\n      );\r\n      const bookedCaterersToAdd = bookedCaterers.filter(bookedCatererItem => {\r\n        const bookedCatererIdentifier = this.getBookedCatererIdentifier(bookedCatererItem);\r\n        if (bookedCatererCollectionIdentifiers.includes(bookedCatererIdentifier)) {\r\n          return false;\r\n        }\r\n        bookedCatererCollectionIdentifiers.push(bookedCatererIdentifier);\r\n        return true;\r\n      });\r\n      return [...bookedCaterersToAdd, ...bookedCatererCollection];\r\n    }\r\n    return bookedCatererCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { ICaterers, NewCaterers } from '../caterers.model';\r\n\r\nexport type PartialUpdateCaterers = Partial<ICaterers> & Pick<ICaterers, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<ICaterers>;\r\nexport type EntityArrayResponseType = HttpResponse<ICaterers[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CaterersService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/caterers');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(caterers: NewCaterers): Observable<EntityResponseType> {\r\n    return this.http.post<ICaterers>(this.resourceUrl, caterers, { observe: 'response' });\r\n  }\r\n\r\n  update(caterers: ICaterers): Observable<EntityResponseType> {\r\n    return this.http.put<ICaterers>(`${this.resourceUrl}/${this.getCaterersIdentifier(caterers)}`, caterers, { observe: 'response' });\r\n  }\r\n\r\n  partialUpdate(caterers: PartialUpdateCaterers): Observable<EntityResponseType> {\r\n    return this.http.patch<ICaterers>(`${this.resourceUrl}/${this.getCaterersIdentifier(caterers)}`, caterers, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<ICaterers>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<ICaterers[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getCaterersIdentifier(caterers: Pick<ICaterers, 'id'>): number {\r\n    return caterers.id;\r\n  }\r\n\r\n  compareCaterers(o1: Pick<ICaterers, 'id'> | null, o2: Pick<ICaterers, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getCaterersIdentifier(o1) === this.getCaterersIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addCaterersToCollectionIfMissing<Type extends Pick<ICaterers, 'id'>>(\r\n    caterersCollection: Type[],\r\n    ...caterersToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const caterers: Type[] = caterersToCheck.filter(isPresent);\r\n    if (caterers.length > 0) {\r\n      const caterersCollectionIdentifiers = caterersCollection.map(caterersItem => this.getCaterersIdentifier(caterersItem)!);\r\n      const caterersToAdd = caterers.filter(caterersItem => {\r\n        const caterersIdentifier = this.getCaterersIdentifier(caterersItem);\r\n        if (caterersCollectionIdentifiers.includes(caterersIdentifier)) {\r\n          return false;\r\n        }\r\n        caterersCollectionIdentifiers.push(caterersIdentifier);\r\n        return true;\r\n      });\r\n      return [...caterersToAdd, ...caterersCollection];\r\n    }\r\n    return caterersCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { ICuisine, NewCuisine } from '../cuisine.model';\r\n\r\nexport type PartialUpdateCuisine = Partial<ICuisine> & Pick<ICuisine, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<ICuisine>;\r\nexport type EntityArrayResponseType = HttpResponse<ICuisine[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CuisineService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/cuisines');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(cuisine: NewCuisine): Observable<EntityResponseType> {\r\n    return this.http.post<ICuisine>(this.resourceUrl, cuisine, { observe: 'response' });\r\n  }\r\n\r\n  update(cuisine: ICuisine): Observable<EntityResponseType> {\r\n    return this.http.put<ICuisine>(`${this.resourceUrl}/${this.getCuisineIdentifier(cuisine)}`, cuisine, { observe: 'response' });\r\n  }\r\n\r\n  partialUpdate(cuisine: PartialUpdateCuisine): Observable<EntityResponseType> {\r\n    return this.http.patch<ICuisine>(`${this.resourceUrl}/${this.getCuisineIdentifier(cuisine)}`, cuisine, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<ICuisine>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<ICuisine[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getCuisineIdentifier(cuisine: Pick<ICuisine, 'id'>): number {\r\n    return cuisine.id;\r\n  }\r\n\r\n  compareCuisine(o1: Pick<ICuisine, 'id'> | null, o2: Pick<ICuisine, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getCuisineIdentifier(o1) === this.getCuisineIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addCuisineToCollectionIfMissing<Type extends Pick<ICuisine, 'id'>>(\r\n    cuisineCollection: Type[],\r\n    ...cuisinesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const cuisines: Type[] = cuisinesToCheck.filter(isPresent);\r\n    if (cuisines.length > 0) {\r\n      const cuisineCollectionIdentifiers = cuisineCollection.map(cuisineItem => this.getCuisineIdentifier(cuisineItem)!);\r\n      const cuisinesToAdd = cuisines.filter(cuisineItem => {\r\n        const cuisineIdentifier = this.getCuisineIdentifier(cuisineItem);\r\n        if (cuisineCollectionIdentifiers.includes(cuisineIdentifier)) {\r\n          return false;\r\n        }\r\n        cuisineCollectionIdentifiers.push(cuisineIdentifier);\r\n        return true;\r\n      });\r\n      return [...cuisinesToAdd, ...cuisineCollection];\r\n    }\r\n    return cuisineCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDecoCompany, NewDecoCompany } from '../deco-company.model';\r\n\r\nexport type PartialUpdateDecoCompany = Partial<IDecoCompany> & Pick<IDecoCompany, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDecoCompany>;\r\nexport type EntityArrayResponseType = HttpResponse<IDecoCompany[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DecoCompanyService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/deco-companies');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(decoCompany: NewDecoCompany): Observable<EntityResponseType> {\r\n    return this.http.post<IDecoCompany>(this.resourceUrl, decoCompany, { observe: 'response' });\r\n  }\r\n\r\n  update(decoCompany: IDecoCompany): Observable<EntityResponseType> {\r\n    return this.http.put<IDecoCompany>(`${this.resourceUrl}/${this.getDecoCompanyIdentifier(decoCompany)}`, decoCompany, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(decoCompany: PartialUpdateDecoCompany): Observable<EntityResponseType> {\r\n    return this.http.patch<IDecoCompany>(`${this.resourceUrl}/${this.getDecoCompanyIdentifier(decoCompany)}`, decoCompany, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDecoCompany>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDecoCompany[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDecoCompanyIdentifier(decoCompany: Pick<IDecoCompany, 'id'>): number {\r\n    return decoCompany.id;\r\n  }\r\n\r\n  compareDecoCompany(o1: Pick<IDecoCompany, 'id'> | null, o2: Pick<IDecoCompany, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDecoCompanyIdentifier(o1) === this.getDecoCompanyIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDecoCompanyToCollectionIfMissing<Type extends Pick<IDecoCompany, 'id'>>(\r\n    decoCompanyCollection: Type[],\r\n    ...decoCompaniesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const decoCompanies: Type[] = decoCompaniesToCheck.filter(isPresent);\r\n    if (decoCompanies.length > 0) {\r\n      const decoCompanyCollectionIdentifiers = decoCompanyCollection.map(\r\n        decoCompanyItem => this.getDecoCompanyIdentifier(decoCompanyItem)!\r\n      );\r\n      const decoCompaniesToAdd = decoCompanies.filter(decoCompanyItem => {\r\n        const decoCompanyIdentifier = this.getDecoCompanyIdentifier(decoCompanyItem);\r\n        if (decoCompanyCollectionIdentifiers.includes(decoCompanyIdentifier)) {\r\n          return false;\r\n        }\r\n        decoCompanyCollectionIdentifiers.push(decoCompanyIdentifier);\r\n        return true;\r\n      });\r\n      return [...decoCompaniesToAdd, ...decoCompanyCollection];\r\n    }\r\n    return decoCompanyCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDecoContactDetails, NewDecoContactDetails } from '../deco-contact-details.model';\r\n\r\nexport type PartialUpdateDecoContactDetails = Partial<IDecoContactDetails> & Pick<IDecoContactDetails, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDecoContactDetails>;\r\nexport type EntityArrayResponseType = HttpResponse<IDecoContactDetails[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DecoContactDetailsService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/deco-contact-details');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(decoContactDetails: NewDecoContactDetails): Observable<EntityResponseType> {\r\n    return this.http.post<IDecoContactDetails>(this.resourceUrl, decoContactDetails, { observe: 'response' });\r\n  }\r\n\r\n  update(decoContactDetails: IDecoContactDetails): Observable<EntityResponseType> {\r\n    return this.http.put<IDecoContactDetails>(\r\n      `${this.resourceUrl}/${this.getDecoContactDetailsIdentifier(decoContactDetails)}`,\r\n      decoContactDetails,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  partialUpdate(decoContactDetails: PartialUpdateDecoContactDetails): Observable<EntityResponseType> {\r\n    return this.http.patch<IDecoContactDetails>(\r\n      `${this.resourceUrl}/${this.getDecoContactDetailsIdentifier(decoContactDetails)}`,\r\n      decoContactDetails,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDecoContactDetails>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDecoContactDetails[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDecoContactDetailsIdentifier(decoContactDetails: Pick<IDecoContactDetails, 'id'>): number {\r\n    return decoContactDetails.id;\r\n  }\r\n\r\n  compareDecoContactDetails(o1: Pick<IDecoContactDetails, 'id'> | null, o2: Pick<IDecoContactDetails, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDecoContactDetailsIdentifier(o1) === this.getDecoContactDetailsIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDecoContactDetailsToCollectionIfMissing<Type extends Pick<IDecoContactDetails, 'id'>>(\r\n    decoContactDetailsCollection: Type[],\r\n    ...decoContactDetailsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const decoContactDetails: Type[] = decoContactDetailsToCheck.filter(isPresent);\r\n    if (decoContactDetails.length > 0) {\r\n      const decoContactDetailsCollectionIdentifiers = decoContactDetailsCollection.map(\r\n        decoContactDetailsItem => this.getDecoContactDetailsIdentifier(decoContactDetailsItem)!\r\n      );\r\n      const decoContactDetailsToAdd = decoContactDetails.filter(decoContactDetailsItem => {\r\n        const decoContactDetailsIdentifier = this.getDecoContactDetailsIdentifier(decoContactDetailsItem);\r\n        if (decoContactDetailsCollectionIdentifiers.includes(decoContactDetailsIdentifier)) {\r\n          return false;\r\n        }\r\n        decoContactDetailsCollectionIdentifiers.push(decoContactDetailsIdentifier);\r\n        return true;\r\n      });\r\n      return [...decoContactDetailsToAdd, ...decoContactDetailsCollection];\r\n    }\r\n    return decoContactDetailsCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDecoSavedCompany, NewDecoSavedCompany } from '../deco-saved-company.model';\r\n\r\nexport type PartialUpdateDecoSavedCompany = Partial<IDecoSavedCompany> & Pick<IDecoSavedCompany, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDecoSavedCompany>;\r\nexport type EntityArrayResponseType = HttpResponse<IDecoSavedCompany[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DecoSavedCompanyService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/deco-saved-companies');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(decoSavedCompany: NewDecoSavedCompany): Observable<EntityResponseType> {\r\n    return this.http.post<IDecoSavedCompany>(this.resourceUrl, decoSavedCompany, { observe: 'response' });\r\n  }\r\n\r\n  update(decoSavedCompany: IDecoSavedCompany): Observable<EntityResponseType> {\r\n    return this.http.put<IDecoSavedCompany>(\r\n      `${this.resourceUrl}/${this.getDecoSavedCompanyIdentifier(decoSavedCompany)}`,\r\n      decoSavedCompany,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  partialUpdate(decoSavedCompany: PartialUpdateDecoSavedCompany): Observable<EntityResponseType> {\r\n    return this.http.patch<IDecoSavedCompany>(\r\n      `${this.resourceUrl}/${this.getDecoSavedCompanyIdentifier(decoSavedCompany)}`,\r\n      decoSavedCompany,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDecoSavedCompany>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDecoSavedCompany[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDecoSavedCompanyIdentifier(decoSavedCompany: Pick<IDecoSavedCompany, 'id'>): number {\r\n    return decoSavedCompany.id;\r\n  }\r\n\r\n  compareDecoSavedCompany(o1: Pick<IDecoSavedCompany, 'id'> | null, o2: Pick<IDecoSavedCompany, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDecoSavedCompanyIdentifier(o1) === this.getDecoSavedCompanyIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDecoSavedCompanyToCollectionIfMissing<Type extends Pick<IDecoSavedCompany, 'id'>>(\r\n    decoSavedCompanyCollection: Type[],\r\n    ...decoSavedCompaniesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const decoSavedCompanies: Type[] = decoSavedCompaniesToCheck.filter(isPresent);\r\n    if (decoSavedCompanies.length > 0) {\r\n      const decoSavedCompanyCollectionIdentifiers = decoSavedCompanyCollection.map(\r\n        decoSavedCompanyItem => this.getDecoSavedCompanyIdentifier(decoSavedCompanyItem)!\r\n      );\r\n      const decoSavedCompaniesToAdd = decoSavedCompanies.filter(decoSavedCompanyItem => {\r\n        const decoSavedCompanyIdentifier = this.getDecoSavedCompanyIdentifier(decoSavedCompanyItem);\r\n        if (decoSavedCompanyCollectionIdentifiers.includes(decoSavedCompanyIdentifier)) {\r\n          return false;\r\n        }\r\n        decoSavedCompanyCollectionIdentifiers.push(decoSavedCompanyIdentifier);\r\n        return true;\r\n      });\r\n      return [...decoSavedCompaniesToAdd, ...decoSavedCompanyCollection];\r\n    }\r\n    return decoSavedCompanyCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDecoSavedTheme, NewDecoSavedTheme } from '../deco-saved-theme.model';\r\n\r\nexport type PartialUpdateDecoSavedTheme = Partial<IDecoSavedTheme> & Pick<IDecoSavedTheme, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDecoSavedTheme>;\r\nexport type EntityArrayResponseType = HttpResponse<IDecoSavedTheme[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DecoSavedThemeService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/deco-saved-themes');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(decoSavedTheme: NewDecoSavedTheme): Observable<EntityResponseType> {\r\n    return this.http.post<IDecoSavedTheme>(this.resourceUrl, decoSavedTheme, { observe: 'response' });\r\n  }\r\n\r\n  update(decoSavedTheme: IDecoSavedTheme): Observable<EntityResponseType> {\r\n    return this.http.put<IDecoSavedTheme>(`${this.resourceUrl}/${this.getDecoSavedThemeIdentifier(decoSavedTheme)}`, decoSavedTheme, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(decoSavedTheme: PartialUpdateDecoSavedTheme): Observable<EntityResponseType> {\r\n    return this.http.patch<IDecoSavedTheme>(`${this.resourceUrl}/${this.getDecoSavedThemeIdentifier(decoSavedTheme)}`, decoSavedTheme, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDecoSavedTheme>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDecoSavedTheme[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDecoSavedThemeIdentifier(decoSavedTheme: Pick<IDecoSavedTheme, 'id'>): number {\r\n    return decoSavedTheme.id;\r\n  }\r\n\r\n  compareDecoSavedTheme(o1: Pick<IDecoSavedTheme, 'id'> | null, o2: Pick<IDecoSavedTheme, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDecoSavedThemeIdentifier(o1) === this.getDecoSavedThemeIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDecoSavedThemeToCollectionIfMissing<Type extends Pick<IDecoSavedTheme, 'id'>>(\r\n    decoSavedThemeCollection: Type[],\r\n    ...decoSavedThemesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const decoSavedThemes: Type[] = decoSavedThemesToCheck.filter(isPresent);\r\n    if (decoSavedThemes.length > 0) {\r\n      const decoSavedThemeCollectionIdentifiers = decoSavedThemeCollection.map(\r\n        decoSavedThemeItem => this.getDecoSavedThemeIdentifier(decoSavedThemeItem)!\r\n      );\r\n      const decoSavedThemesToAdd = decoSavedThemes.filter(decoSavedThemeItem => {\r\n        const decoSavedThemeIdentifier = this.getDecoSavedThemeIdentifier(decoSavedThemeItem);\r\n        if (decoSavedThemeCollectionIdentifiers.includes(decoSavedThemeIdentifier)) {\r\n          return false;\r\n        }\r\n        decoSavedThemeCollectionIdentifiers.push(decoSavedThemeIdentifier);\r\n        return true;\r\n      });\r\n      return [...decoSavedThemesToAdd, ...decoSavedThemeCollection];\r\n    }\r\n    return decoSavedThemeCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDecoThemes, NewDecoThemes } from '../deco-themes.model';\r\n\r\nexport type PartialUpdateDecoThemes = Partial<IDecoThemes> & Pick<IDecoThemes, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDecoThemes>;\r\nexport type EntityArrayResponseType = HttpResponse<IDecoThemes[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DecoThemesService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/deco-themes');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(decoThemes: NewDecoThemes): Observable<EntityResponseType> {\r\n    return this.http.post<IDecoThemes>(this.resourceUrl, decoThemes, { observe: 'response' });\r\n  }\r\n\r\n  update(decoThemes: IDecoThemes): Observable<EntityResponseType> {\r\n    return this.http.put<IDecoThemes>(`${this.resourceUrl}/${this.getDecoThemesIdentifier(decoThemes)}`, decoThemes, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(decoThemes: PartialUpdateDecoThemes): Observable<EntityResponseType> {\r\n    return this.http.patch<IDecoThemes>(`${this.resourceUrl}/${this.getDecoThemesIdentifier(decoThemes)}`, decoThemes, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDecoThemes>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDecoThemes[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDecoThemesIdentifier(decoThemes: Pick<IDecoThemes, 'id'>): number {\r\n    return decoThemes.id;\r\n  }\r\n\r\n  compareDecoThemes(o1: Pick<IDecoThemes, 'id'> | null, o2: Pick<IDecoThemes, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDecoThemesIdentifier(o1) === this.getDecoThemesIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDecoThemesToCollectionIfMissing<Type extends Pick<IDecoThemes, 'id'>>(\r\n    decoThemesCollection: Type[],\r\n    ...decoThemesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const decoThemes: Type[] = decoThemesToCheck.filter(isPresent);\r\n    if (decoThemes.length > 0) {\r\n      const decoThemesCollectionIdentifiers = decoThemesCollection.map(decoThemesItem => this.getDecoThemesIdentifier(decoThemesItem)!);\r\n      const decoThemesToAdd = decoThemes.filter(decoThemesItem => {\r\n        const decoThemesIdentifier = this.getDecoThemesIdentifier(decoThemesItem);\r\n        if (decoThemesCollectionIdentifiers.includes(decoThemesIdentifier)) {\r\n          return false;\r\n        }\r\n        decoThemesCollectionIdentifiers.push(decoThemesIdentifier);\r\n        return true;\r\n      });\r\n      return [...decoThemesToAdd, ...decoThemesCollection];\r\n    }\r\n    return decoThemesCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IDietaryRequirements, NewDietaryRequirements } from '../dietary-requirements.model';\r\n\r\nexport type PartialUpdateDietaryRequirements = Partial<IDietaryRequirements> & Pick<IDietaryRequirements, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IDietaryRequirements>;\r\nexport type EntityArrayResponseType = HttpResponse<IDietaryRequirements[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DietaryRequirementsService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/dietary-requirements');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(dietaryRequirements: NewDietaryRequirements): Observable<EntityResponseType> {\r\n    return this.http.post<IDietaryRequirements>(this.resourceUrl, dietaryRequirements, { observe: 'response' });\r\n  }\r\n\r\n  update(dietaryRequirements: IDietaryRequirements): Observable<EntityResponseType> {\r\n    return this.http.put<IDietaryRequirements>(\r\n      `${this.resourceUrl}/${this.getDietaryRequirementsIdentifier(dietaryRequirements)}`,\r\n      dietaryRequirements,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  partialUpdate(dietaryRequirements: PartialUpdateDietaryRequirements): Observable<EntityResponseType> {\r\n    return this.http.patch<IDietaryRequirements>(\r\n      `${this.resourceUrl}/${this.getDietaryRequirementsIdentifier(dietaryRequirements)}`,\r\n      dietaryRequirements,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IDietaryRequirements>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDietaryRequirements[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getDietaryRequirementsIdentifier(dietaryRequirements: Pick<IDietaryRequirements, 'id'>): number {\r\n    return dietaryRequirements.id;\r\n  }\r\n\r\n  compareDietaryRequirements(o1: Pick<IDietaryRequirements, 'id'> | null, o2: Pick<IDietaryRequirements, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getDietaryRequirementsIdentifier(o1) === this.getDietaryRequirementsIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addDietaryRequirementsToCollectionIfMissing<Type extends Pick<IDietaryRequirements, 'id'>>(\r\n    dietaryRequirementsCollection: Type[],\r\n    ...dietaryRequirementsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const dietaryRequirements: Type[] = dietaryRequirementsToCheck.filter(isPresent);\r\n    if (dietaryRequirements.length > 0) {\r\n      const dietaryRequirementsCollectionIdentifiers = dietaryRequirementsCollection.map(\r\n        dietaryRequirementsItem => this.getDietaryRequirementsIdentifier(dietaryRequirementsItem)!\r\n      );\r\n      const dietaryRequirementsToAdd = dietaryRequirements.filter(dietaryRequirementsItem => {\r\n        const dietaryRequirementsIdentifier = this.getDietaryRequirementsIdentifier(dietaryRequirementsItem);\r\n        if (dietaryRequirementsCollectionIdentifiers.includes(dietaryRequirementsIdentifier)) {\r\n          return false;\r\n        }\r\n        dietaryRequirementsCollectionIdentifiers.push(dietaryRequirementsIdentifier);\r\n        return true;\r\n      });\r\n      return [...dietaryRequirementsToAdd, ...dietaryRequirementsCollection];\r\n    }\r\n    return dietaryRequirementsCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IEventItinerary, NewEventItinerary } from '../event-itinerary.model';\r\n\r\nexport type PartialUpdateEventItinerary = Partial<IEventItinerary> & Pick<IEventItinerary, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IEventItinerary>;\r\nexport type EntityArrayResponseType = HttpResponse<IEventItinerary[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventItineraryService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/event-itineraries');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(eventItinerary: NewEventItinerary): Observable<EntityResponseType> {\r\n    return this.http.post<IEventItinerary>(this.resourceUrl, eventItinerary, { observe: 'response' });\r\n  }\r\n\r\n  update(eventItinerary: IEventItinerary): Observable<EntityResponseType> {\r\n    return this.http.put<IEventItinerary>(`${this.resourceUrl}/${this.getEventItineraryIdentifier(eventItinerary)}`, eventItinerary, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(eventItinerary: PartialUpdateEventItinerary): Observable<EntityResponseType> {\r\n    return this.http.patch<IEventItinerary>(`${this.resourceUrl}/${this.getEventItineraryIdentifier(eventItinerary)}`, eventItinerary, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IEventItinerary>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IEventItinerary[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getEventItineraryIdentifier(eventItinerary: Pick<IEventItinerary, 'id'>): number {\r\n    return eventItinerary.id;\r\n  }\r\n\r\n  compareEventItinerary(o1: Pick<IEventItinerary, 'id'> | null, o2: Pick<IEventItinerary, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getEventItineraryIdentifier(o1) === this.getEventItineraryIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addEventItineraryToCollectionIfMissing<Type extends Pick<IEventItinerary, 'id'>>(\r\n    eventItineraryCollection: Type[],\r\n    ...eventItinerariesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const eventItineraries: Type[] = eventItinerariesToCheck.filter(isPresent);\r\n    if (eventItineraries.length > 0) {\r\n      const eventItineraryCollectionIdentifiers = eventItineraryCollection.map(\r\n        eventItineraryItem => this.getEventItineraryIdentifier(eventItineraryItem)!\r\n      );\r\n      const eventItinerariesToAdd = eventItineraries.filter(eventItineraryItem => {\r\n        const eventItineraryIdentifier = this.getEventItineraryIdentifier(eventItineraryItem);\r\n        if (eventItineraryCollectionIdentifiers.includes(eventItineraryIdentifier)) {\r\n          return false;\r\n        }\r\n        eventItineraryCollectionIdentifiers.push(eventItineraryIdentifier);\r\n        return true;\r\n      });\r\n      return [...eventItinerariesToAdd, ...eventItineraryCollection];\r\n    }\r\n    return eventItineraryCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IEvent, NewEvent } from '../event.model';\r\n\r\nexport type PartialUpdateEvent = Partial<IEvent> & Pick<IEvent, 'id'>;\r\n\r\ntype RestOf<T extends IEvent | NewEvent> = Omit<T, 'date'> & {\r\n  date?: string | null;\r\n};\r\n\r\nexport type RestEvent = RestOf<IEvent>;\r\n\r\nexport type NewRestEvent = RestOf<NewEvent>;\r\n\r\nexport type PartialUpdateRestEvent = RestOf<PartialUpdateEvent>;\r\n\r\nexport type EntityResponseType = HttpResponse<IEvent>;\r\nexport type EntityArrayResponseType = HttpResponse<IEvent[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EventService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/events');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(event: NewEvent): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(event);\r\n    return this.http.post<RestEvent>(this.resourceUrl, copy, { observe: 'response' }).pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(event: IEvent): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(event);\r\n    return this.http\r\n      .put<RestEvent>(`${this.resourceUrl}/${this.getEventIdentifier(event)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(event: PartialUpdateEvent): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(event);\r\n    return this.http\r\n      .patch<RestEvent>(`${this.resourceUrl}/${this.getEventIdentifier(event)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestEvent>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestEvent[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getEventIdentifier(event: Pick<IEvent, 'id'>): number {\r\n    return event.id;\r\n  }\r\n\r\n  compareEvent(o1: Pick<IEvent, 'id'> | null, o2: Pick<IEvent, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getEventIdentifier(o1) === this.getEventIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addEventToCollectionIfMissing<Type extends Pick<IEvent, 'id'>>(\r\n    eventCollection: Type[],\r\n    ...eventsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const events: Type[] = eventsToCheck.filter(isPresent);\r\n    if (events.length > 0) {\r\n      const eventCollectionIdentifiers = eventCollection.map(eventItem => this.getEventIdentifier(eventItem)!);\r\n      const eventsToAdd = events.filter(eventItem => {\r\n        const eventIdentifier = this.getEventIdentifier(eventItem);\r\n        if (eventCollectionIdentifiers.includes(eventIdentifier)) {\r\n          return false;\r\n        }\r\n        eventCollectionIdentifiers.push(eventIdentifier);\r\n        return true;\r\n      });\r\n      return [...eventsToAdd, ...eventCollection];\r\n    }\r\n    return eventCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IEvent | NewEvent | PartialUpdateEvent>(event: T): RestOf<T> {\r\n    return {\r\n      ...event,\r\n      date: event.date?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restEvent: RestEvent): IEvent {\r\n    return {\r\n      ...restEvent,\r\n      date: restEvent.date ? dayjs(restEvent.date) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestEvent>): HttpResponse<IEvent> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestEvent[]>): HttpResponse<IEvent[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IFavouritesList, NewFavouritesList } from '../favourites-list.model';\r\n\r\nexport type PartialUpdateFavouritesList = Partial<IFavouritesList> & Pick<IFavouritesList, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IFavouritesList>;\r\nexport type EntityArrayResponseType = HttpResponse<IFavouritesList[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FavouritesListService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/favourites-lists');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(favouritesList: NewFavouritesList): Observable<EntityResponseType> {\r\n    return this.http.post<IFavouritesList>(this.resourceUrl, favouritesList, { observe: 'response' });\r\n  }\r\n\r\n  update(favouritesList: IFavouritesList): Observable<EntityResponseType> {\r\n    return this.http.put<IFavouritesList>(`${this.resourceUrl}/${this.getFavouritesListIdentifier(favouritesList)}`, favouritesList, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(favouritesList: PartialUpdateFavouritesList): Observable<EntityResponseType> {\r\n    return this.http.patch<IFavouritesList>(`${this.resourceUrl}/${this.getFavouritesListIdentifier(favouritesList)}`, favouritesList, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IFavouritesList>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IFavouritesList[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getFavouritesListIdentifier(favouritesList: Pick<IFavouritesList, 'id'>): number {\r\n    return favouritesList.id;\r\n  }\r\n\r\n  compareFavouritesList(o1: Pick<IFavouritesList, 'id'> | null, o2: Pick<IFavouritesList, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getFavouritesListIdentifier(o1) === this.getFavouritesListIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addFavouritesListToCollectionIfMissing<Type extends Pick<IFavouritesList, 'id'>>(\r\n    favouritesListCollection: Type[],\r\n    ...favouritesListsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const favouritesLists: Type[] = favouritesListsToCheck.filter(isPresent);\r\n    if (favouritesLists.length > 0) {\r\n      const favouritesListCollectionIdentifiers = favouritesListCollection.map(\r\n        favouritesListItem => this.getFavouritesListIdentifier(favouritesListItem)!\r\n      );\r\n      const favouritesListsToAdd = favouritesLists.filter(favouritesListItem => {\r\n        const favouritesListIdentifier = this.getFavouritesListIdentifier(favouritesListItem);\r\n        if (favouritesListCollectionIdentifiers.includes(favouritesListIdentifier)) {\r\n          return false;\r\n        }\r\n        favouritesListCollectionIdentifiers.push(favouritesListIdentifier);\r\n        return true;\r\n      });\r\n      return [...favouritesListsToAdd, ...favouritesListCollection];\r\n    }\r\n    return favouritesListCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IFeedbacks, NewFeedbacks } from '../feedbacks.model';\r\n\r\nexport type PartialUpdateFeedbacks = Partial<IFeedbacks> & Pick<IFeedbacks, 'id'>;\r\n\r\ntype RestOf<T extends IFeedbacks | NewFeedbacks> = Omit<T, 'date'> & {\r\n  date?: string | null;\r\n};\r\n\r\nexport type RestFeedbacks = RestOf<IFeedbacks>;\r\n\r\nexport type NewRestFeedbacks = RestOf<NewFeedbacks>;\r\n\r\nexport type PartialUpdateRestFeedbacks = RestOf<PartialUpdateFeedbacks>;\r\n\r\nexport type EntityResponseType = HttpResponse<IFeedbacks>;\r\nexport type EntityArrayResponseType = HttpResponse<IFeedbacks[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FeedbacksService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/feedbacks');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(feedbacks: NewFeedbacks): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(feedbacks);\r\n    return this.http\r\n      .post<RestFeedbacks>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(feedbacks: IFeedbacks): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(feedbacks);\r\n    return this.http\r\n      .put<RestFeedbacks>(`${this.resourceUrl}/${this.getFeedbacksIdentifier(feedbacks)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(feedbacks: PartialUpdateFeedbacks): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(feedbacks);\r\n    return this.http\r\n      .patch<RestFeedbacks>(`${this.resourceUrl}/${this.getFeedbacksIdentifier(feedbacks)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestFeedbacks>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestFeedbacks[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getFeedbacksIdentifier(feedbacks: Pick<IFeedbacks, 'id'>): number {\r\n    return feedbacks.id;\r\n  }\r\n\r\n  compareFeedbacks(o1: Pick<IFeedbacks, 'id'> | null, o2: Pick<IFeedbacks, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getFeedbacksIdentifier(o1) === this.getFeedbacksIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addFeedbacksToCollectionIfMissing<Type extends Pick<IFeedbacks, 'id'>>(\r\n    feedbacksCollection: Type[],\r\n    ...feedbacksToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const feedbacks: Type[] = feedbacksToCheck.filter(isPresent);\r\n    if (feedbacks.length > 0) {\r\n      const feedbacksCollectionIdentifiers = feedbacksCollection.map(feedbacksItem => this.getFeedbacksIdentifier(feedbacksItem)!);\r\n      const feedbacksToAdd = feedbacks.filter(feedbacksItem => {\r\n        const feedbacksIdentifier = this.getFeedbacksIdentifier(feedbacksItem);\r\n        if (feedbacksCollectionIdentifiers.includes(feedbacksIdentifier)) {\r\n          return false;\r\n        }\r\n        feedbacksCollectionIdentifiers.push(feedbacksIdentifier);\r\n        return true;\r\n      });\r\n      return [...feedbacksToAdd, ...feedbacksCollection];\r\n    }\r\n    return feedbacksCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IFeedbacks | NewFeedbacks | PartialUpdateFeedbacks>(feedbacks: T): RestOf<T> {\r\n    return {\r\n      ...feedbacks,\r\n      date: feedbacks.date?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restFeedbacks: RestFeedbacks): IFeedbacks {\r\n    return {\r\n      ...restFeedbacks,\r\n      date: restFeedbacks.date ? dayjs(restFeedbacks.date) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestFeedbacks>): HttpResponse<IFeedbacks> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestFeedbacks[]>): HttpResponse<IFeedbacks[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IIntro, NewIntro } from '../intro.model';\r\n\r\nexport type PartialUpdateIntro = Partial<IIntro> & Pick<IIntro, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IIntro>;\r\nexport type EntityArrayResponseType = HttpResponse<IIntro[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class IntroService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/intros');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(intro: NewIntro): Observable<EntityResponseType> {\r\n    return this.http.post<IIntro>(this.resourceUrl, intro, { observe: 'response' });\r\n  }\r\n\r\n  update(intro: IIntro): Observable<EntityResponseType> {\r\n    return this.http.put<IIntro>(`${this.resourceUrl}/${this.getIntroIdentifier(intro)}`, intro, { observe: 'response' });\r\n  }\r\n\r\n  partialUpdate(intro: PartialUpdateIntro): Observable<EntityResponseType> {\r\n    return this.http.patch<IIntro>(`${this.resourceUrl}/${this.getIntroIdentifier(intro)}`, intro, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IIntro>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IIntro[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getIntroIdentifier(intro: Pick<IIntro, 'id'>): number {\r\n    return intro.id;\r\n  }\r\n\r\n  compareIntro(o1: Pick<IIntro, 'id'> | null, o2: Pick<IIntro, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getIntroIdentifier(o1) === this.getIntroIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addIntroToCollectionIfMissing<Type extends Pick<IIntro, 'id'>>(\r\n    introCollection: Type[],\r\n    ...introsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const intros: Type[] = introsToCheck.filter(isPresent);\r\n    if (intros.length > 0) {\r\n      const introCollectionIdentifiers = introCollection.map(introItem => this.getIntroIdentifier(introItem)!);\r\n      const introsToAdd = intros.filter(introItem => {\r\n        const introIdentifier = this.getIntroIdentifier(introItem);\r\n        if (introCollectionIdentifiers.includes(introIdentifier)) {\r\n          return false;\r\n        }\r\n        introCollectionIdentifiers.push(introIdentifier);\r\n        return true;\r\n      });\r\n      return [...introsToAdd, ...introCollection];\r\n    }\r\n    return introCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IItineraryDateTime, NewItineraryDateTime } from '../itinerary-date-time.model';\r\n\r\nexport type PartialUpdateItineraryDateTime = Partial<IItineraryDateTime> & Pick<IItineraryDateTime, 'id'>;\r\n\r\ntype RestOf<T extends IItineraryDateTime | NewItineraryDateTime> = Omit<T, 'date' | 'startTime' | 'endTime'> & {\r\n  date?: string | null;\r\n  startTime?: string | null;\r\n  endTime?: string | null;\r\n};\r\n\r\nexport type RestItineraryDateTime = RestOf<IItineraryDateTime>;\r\n\r\nexport type NewRestItineraryDateTime = RestOf<NewItineraryDateTime>;\r\n\r\nexport type PartialUpdateRestItineraryDateTime = RestOf<PartialUpdateItineraryDateTime>;\r\n\r\nexport type EntityResponseType = HttpResponse<IItineraryDateTime>;\r\nexport type EntityArrayResponseType = HttpResponse<IItineraryDateTime[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryDateTimeService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/itinerary-date-times');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(itineraryDateTime: NewItineraryDateTime): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryDateTime);\r\n    return this.http\r\n      .post<RestItineraryDateTime>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(itineraryDateTime: IItineraryDateTime): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryDateTime);\r\n    return this.http\r\n      .put<RestItineraryDateTime>(`${this.resourceUrl}/${this.getItineraryDateTimeIdentifier(itineraryDateTime)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(itineraryDateTime: PartialUpdateItineraryDateTime): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryDateTime);\r\n    return this.http\r\n      .patch<RestItineraryDateTime>(`${this.resourceUrl}/${this.getItineraryDateTimeIdentifier(itineraryDateTime)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestItineraryDateTime>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestItineraryDateTime[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getItineraryDateTimeIdentifier(itineraryDateTime: Pick<IItineraryDateTime, 'id'>): number {\r\n    return itineraryDateTime.id;\r\n  }\r\n\r\n  compareItineraryDateTime(o1: Pick<IItineraryDateTime, 'id'> | null, o2: Pick<IItineraryDateTime, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getItineraryDateTimeIdentifier(o1) === this.getItineraryDateTimeIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addItineraryDateTimeToCollectionIfMissing<Type extends Pick<IItineraryDateTime, 'id'>>(\r\n    itineraryDateTimeCollection: Type[],\r\n    ...itineraryDateTimesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const itineraryDateTimes: Type[] = itineraryDateTimesToCheck.filter(isPresent);\r\n    if (itineraryDateTimes.length > 0) {\r\n      const itineraryDateTimeCollectionIdentifiers = itineraryDateTimeCollection.map(\r\n        itineraryDateTimeItem => this.getItineraryDateTimeIdentifier(itineraryDateTimeItem)!\r\n      );\r\n      const itineraryDateTimesToAdd = itineraryDateTimes.filter(itineraryDateTimeItem => {\r\n        const itineraryDateTimeIdentifier = this.getItineraryDateTimeIdentifier(itineraryDateTimeItem);\r\n        if (itineraryDateTimeCollectionIdentifiers.includes(itineraryDateTimeIdentifier)) {\r\n          return false;\r\n        }\r\n        itineraryDateTimeCollectionIdentifiers.push(itineraryDateTimeIdentifier);\r\n        return true;\r\n      });\r\n      return [...itineraryDateTimesToAdd, ...itineraryDateTimeCollection];\r\n    }\r\n    return itineraryDateTimeCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IItineraryDateTime | NewItineraryDateTime | PartialUpdateItineraryDateTime>(\r\n    itineraryDateTime: T\r\n  ): RestOf<T> {\r\n    return {\r\n      ...itineraryDateTime,\r\n      date: itineraryDateTime.date?.toJSON() ?? null,\r\n      startTime: itineraryDateTime.startTime?.toJSON() ?? null,\r\n      endTime: itineraryDateTime.endTime?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restItineraryDateTime: RestItineraryDateTime): IItineraryDateTime {\r\n    return {\r\n      ...restItineraryDateTime,\r\n      date: restItineraryDateTime.date ? dayjs(restItineraryDateTime.date) : undefined,\r\n      startTime: restItineraryDateTime.startTime ? dayjs(restItineraryDateTime.startTime) : undefined,\r\n      endTime: restItineraryDateTime.endTime ? dayjs(restItineraryDateTime.endTime) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestItineraryDateTime>): HttpResponse<IItineraryDateTime> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestItineraryDateTime[]>): HttpResponse<IItineraryDateTime[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IItinerary, NewItinerary } from '../itinerary.model';\r\n\r\nexport type PartialUpdateItinerary = Partial<IItinerary> & Pick<IItinerary, 'id'>;\r\n\r\ntype RestOf<T extends IItinerary | NewItinerary> = Omit<T, 'startTime' | 'endTime'> & {\r\n  startTime?: string | null;\r\n  endTime?: string | null;\r\n};\r\n\r\nexport type RestItinerary = RestOf<IItinerary>;\r\n\r\nexport type NewRestItinerary = RestOf<NewItinerary>;\r\n\r\nexport type PartialUpdateRestItinerary = RestOf<PartialUpdateItinerary>;\r\n\r\nexport type EntityResponseType = HttpResponse<IItinerary>;\r\nexport type EntityArrayResponseType = HttpResponse<IItinerary[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/itineraries');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(itinerary: NewItinerary): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itinerary);\r\n    return this.http\r\n      .post<RestItinerary>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(itinerary: IItinerary): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itinerary);\r\n    return this.http\r\n      .put<RestItinerary>(`${this.resourceUrl}/${this.getItineraryIdentifier(itinerary)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(itinerary: PartialUpdateItinerary): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itinerary);\r\n    return this.http\r\n      .patch<RestItinerary>(`${this.resourceUrl}/${this.getItineraryIdentifier(itinerary)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestItinerary>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestItinerary[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getItineraryIdentifier(itinerary: Pick<IItinerary, 'id'>): number {\r\n    return itinerary.id;\r\n  }\r\n\r\n  compareItinerary(o1: Pick<IItinerary, 'id'> | null, o2: Pick<IItinerary, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getItineraryIdentifier(o1) === this.getItineraryIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addItineraryToCollectionIfMissing<Type extends Pick<IItinerary, 'id'>>(\r\n    itineraryCollection: Type[],\r\n    ...itinerariesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const itineraries: Type[] = itinerariesToCheck.filter(isPresent);\r\n    if (itineraries.length > 0) {\r\n      const itineraryCollectionIdentifiers = itineraryCollection.map(itineraryItem => this.getItineraryIdentifier(itineraryItem)!);\r\n      const itinerariesToAdd = itineraries.filter(itineraryItem => {\r\n        const itineraryIdentifier = this.getItineraryIdentifier(itineraryItem);\r\n        if (itineraryCollectionIdentifiers.includes(itineraryIdentifier)) {\r\n          return false;\r\n        }\r\n        itineraryCollectionIdentifiers.push(itineraryIdentifier);\r\n        return true;\r\n      });\r\n      return [...itinerariesToAdd, ...itineraryCollection];\r\n    }\r\n    return itineraryCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IItinerary | NewItinerary | PartialUpdateItinerary>(itinerary: T): RestOf<T> {\r\n    return {\r\n      ...itinerary,\r\n      startTime: itinerary.startTime?.toJSON() ?? null,\r\n      endTime: itinerary.endTime?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restItinerary: RestItinerary): IItinerary {\r\n    return {\r\n      ...restItinerary,\r\n      startTime: restItinerary.startTime ? dayjs(restItinerary.startTime) : undefined,\r\n      endTime: restItinerary.endTime ? dayjs(restItinerary.endTime) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestItinerary>): HttpResponse<IItinerary> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestItinerary[]>): HttpResponse<IItinerary[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IMockVenueEntity, NewMockVenueEntity } from '../mock-venue-entity.model';\r\n\r\nexport type PartialUpdateMockVenueEntity = Partial<IMockVenueEntity> & Pick<IMockVenueEntity, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IMockVenueEntity>;\r\nexport type EntityArrayResponseType = HttpResponse<IMockVenueEntity[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockVenueEntityService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/mock-venue-entities');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(mockVenueEntity: NewMockVenueEntity): Observable<EntityResponseType> {\r\n    return this.http.post<IMockVenueEntity>(this.resourceUrl, mockVenueEntity, { observe: 'response' });\r\n  }\r\n\r\n  update(mockVenueEntity: IMockVenueEntity): Observable<EntityResponseType> {\r\n    return this.http.put<IMockVenueEntity>(`${this.resourceUrl}/${this.getMockVenueEntityIdentifier(mockVenueEntity)}`, mockVenueEntity, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  partialUpdate(mockVenueEntity: PartialUpdateMockVenueEntity): Observable<EntityResponseType> {\r\n    return this.http.patch<IMockVenueEntity>(`${this.resourceUrl}/${this.getMockVenueEntityIdentifier(mockVenueEntity)}`, mockVenueEntity, {\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IMockVenueEntity>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IMockVenueEntity[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getMockVenueEntityIdentifier(mockVenueEntity: Pick<IMockVenueEntity, 'id'>): number {\r\n    return mockVenueEntity.id;\r\n  }\r\n\r\n  compareMockVenueEntity(o1: Pick<IMockVenueEntity, 'id'> | null, o2: Pick<IMockVenueEntity, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getMockVenueEntityIdentifier(o1) === this.getMockVenueEntityIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addMockVenueEntityToCollectionIfMissing<Type extends Pick<IMockVenueEntity, 'id'>>(\r\n    mockVenueEntityCollection: Type[],\r\n    ...mockVenueEntitiesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const mockVenueEntities: Type[] = mockVenueEntitiesToCheck.filter(isPresent);\r\n    if (mockVenueEntities.length > 0) {\r\n      const mockVenueEntityCollectionIdentifiers = mockVenueEntityCollection.map(\r\n        mockVenueEntityItem => this.getMockVenueEntityIdentifier(mockVenueEntityItem)!\r\n      );\r\n      const mockVenueEntitiesToAdd = mockVenueEntities.filter(mockVenueEntityItem => {\r\n        const mockVenueEntityIdentifier = this.getMockVenueEntityIdentifier(mockVenueEntityItem);\r\n        if (mockVenueEntityCollectionIdentifiers.includes(mockVenueEntityIdentifier)) {\r\n          return false;\r\n        }\r\n        mockVenueEntityCollectionIdentifiers.push(mockVenueEntityIdentifier);\r\n        return true;\r\n      });\r\n      return [...mockVenueEntitiesToAdd, ...mockVenueEntityCollection];\r\n    }\r\n    return mockVenueEntityCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IQuestionnaire, NewQuestionnaire } from '../questionnaire.model';\r\n\r\nexport type PartialUpdateQuestionnaire = Partial<IQuestionnaire> & Pick<IQuestionnaire, 'id'>;\r\n\r\ntype RestOf<T extends IQuestionnaire | NewQuestionnaire> = Omit<T, 'date'> & {\r\n  date?: string | null;\r\n};\r\n\r\nexport type RestQuestionnaire = RestOf<IQuestionnaire>;\r\n\r\nexport type NewRestQuestionnaire = RestOf<NewQuestionnaire>;\r\n\r\nexport type PartialUpdateRestQuestionnaire = RestOf<PartialUpdateQuestionnaire>;\r\n\r\nexport type EntityResponseType = HttpResponse<IQuestionnaire>;\r\nexport type EntityArrayResponseType = HttpResponse<IQuestionnaire[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuestionnaireService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/questionnaires');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(questionnaire: NewQuestionnaire): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(questionnaire);\r\n    return this.http\r\n      .post<RestQuestionnaire>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(questionnaire: IQuestionnaire): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(questionnaire);\r\n    return this.http\r\n      .put<RestQuestionnaire>(`${this.resourceUrl}/${this.getQuestionnaireIdentifier(questionnaire)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(questionnaire: PartialUpdateQuestionnaire): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(questionnaire);\r\n    return this.http\r\n      .patch<RestQuestionnaire>(`${this.resourceUrl}/${this.getQuestionnaireIdentifier(questionnaire)}`, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestQuestionnaire>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestQuestionnaire[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getQuestionnaireIdentifier(questionnaire: Pick<IQuestionnaire, 'id'>): number {\r\n    return questionnaire.id;\r\n  }\r\n\r\n  compareQuestionnaire(o1: Pick<IQuestionnaire, 'id'> | null, o2: Pick<IQuestionnaire, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getQuestionnaireIdentifier(o1) === this.getQuestionnaireIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addQuestionnaireToCollectionIfMissing<Type extends Pick<IQuestionnaire, 'id'>>(\r\n    questionnaireCollection: Type[],\r\n    ...questionnairesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const questionnaires: Type[] = questionnairesToCheck.filter(isPresent);\r\n    if (questionnaires.length > 0) {\r\n      const questionnaireCollectionIdentifiers = questionnaireCollection.map(\r\n        questionnaireItem => this.getQuestionnaireIdentifier(questionnaireItem)!\r\n      );\r\n      const questionnairesToAdd = questionnaires.filter(questionnaireItem => {\r\n        const questionnaireIdentifier = this.getQuestionnaireIdentifier(questionnaireItem);\r\n        if (questionnaireCollectionIdentifiers.includes(questionnaireIdentifier)) {\r\n          return false;\r\n        }\r\n        questionnaireCollectionIdentifiers.push(questionnaireIdentifier);\r\n        return true;\r\n      });\r\n      return [...questionnairesToAdd, ...questionnaireCollection];\r\n    }\r\n    return questionnaireCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IQuestionnaire | NewQuestionnaire | PartialUpdateQuestionnaire>(questionnaire: T): RestOf<T> {\r\n    return {\r\n      ...questionnaire,\r\n      date: questionnaire.date?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restQuestionnaire: RestQuestionnaire): IQuestionnaire {\r\n    return {\r\n      ...restQuestionnaire,\r\n      date: restQuestionnaire.date ? dayjs(restQuestionnaire.date) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestQuestionnaire>): HttpResponse<IQuestionnaire> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestQuestionnaire[]>): HttpResponse<IQuestionnaire[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IRating, NewRating } from '../rating.model';\r\n\r\nexport type PartialUpdateRating = Partial<IRating> & Pick<IRating, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IRating>;\r\nexport type EntityArrayResponseType = HttpResponse<IRating[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RatingService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/ratings');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(rating: NewRating): Observable<EntityResponseType> {\r\n    return this.http.post<IRating>(this.resourceUrl, rating, { observe: 'response' });\r\n  }\r\n\r\n  update(rating: IRating): Observable<EntityResponseType> {\r\n    return this.http.put<IRating>(`${this.resourceUrl}/${this.getRatingIdentifier(rating)}`, rating, { observe: 'response' });\r\n  }\r\n\r\n  partialUpdate(rating: PartialUpdateRating): Observable<EntityResponseType> {\r\n    return this.http.patch<IRating>(`${this.resourceUrl}/${this.getRatingIdentifier(rating)}`, rating, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IRating>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IRating[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getRatingIdentifier(rating: Pick<IRating, 'id'>): number {\r\n    return rating.id;\r\n  }\r\n\r\n  compareRating(o1: Pick<IRating, 'id'> | null, o2: Pick<IRating, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getRatingIdentifier(o1) === this.getRatingIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addRatingToCollectionIfMissing<Type extends Pick<IRating, 'id'>>(\r\n    ratingCollection: Type[],\r\n    ...ratingsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const ratings: Type[] = ratingsToCheck.filter(isPresent);\r\n    if (ratings.length > 0) {\r\n      const ratingCollectionIdentifiers = ratingCollection.map(ratingItem => this.getRatingIdentifier(ratingItem)!);\r\n      const ratingsToAdd = ratings.filter(ratingItem => {\r\n        const ratingIdentifier = this.getRatingIdentifier(ratingItem);\r\n        if (ratingCollectionIdentifiers.includes(ratingIdentifier)) {\r\n          return false;\r\n        }\r\n        ratingCollectionIdentifiers.push(ratingIdentifier);\r\n        return true;\r\n      });\r\n      return [...ratingsToAdd, ...ratingCollection];\r\n    }\r\n    return ratingCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { ISupplier, NewSupplier } from '../supplier.model';\r\n\r\nexport type PartialUpdateSupplier = Partial<ISupplier> & Pick<ISupplier, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<ISupplier>;\r\nexport type EntityArrayResponseType = HttpResponse<ISupplier[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SupplierService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/suppliers');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(supplier: NewSupplier): Observable<EntityResponseType> {\r\n    return this.http.post<ISupplier>(this.resourceUrl, supplier, { observe: 'response' });\r\n  }\r\n\r\n  update(supplier: ISupplier): Observable<EntityResponseType> {\r\n    return this.http.put<ISupplier>(`${this.resourceUrl}/${this.getSupplierIdentifier(supplier)}`, supplier, { observe: 'response' });\r\n  }\r\n\r\n  partialUpdate(supplier: PartialUpdateSupplier): Observable<EntityResponseType> {\r\n    return this.http.patch<ISupplier>(`${this.resourceUrl}/${this.getSupplierIdentifier(supplier)}`, supplier, { observe: 'response' });\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<ISupplier>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<ISupplier[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getSupplierIdentifier(supplier: Pick<ISupplier, 'id'>): number {\r\n    return supplier.id;\r\n  }\r\n\r\n  compareSupplier(o1: Pick<ISupplier, 'id'> | null, o2: Pick<ISupplier, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getSupplierIdentifier(o1) === this.getSupplierIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addSupplierToCollectionIfMissing<Type extends Pick<ISupplier, 'id'>>(\r\n    supplierCollection: Type[],\r\n    ...suppliersToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const suppliers: Type[] = suppliersToCheck.filter(isPresent);\r\n    if (suppliers.length > 0) {\r\n      const supplierCollectionIdentifiers = supplierCollection.map(supplierItem => this.getSupplierIdentifier(supplierItem)!);\r\n      const suppliersToAdd = suppliers.filter(supplierItem => {\r\n        const supplierIdentifier = this.getSupplierIdentifier(supplierItem);\r\n        if (supplierCollectionIdentifiers.includes(supplierIdentifier)) {\r\n          return false;\r\n        }\r\n        supplierCollectionIdentifiers.push(supplierIdentifier);\r\n        return true;\r\n      });\r\n      return [...suppliersToAdd, ...supplierCollection];\r\n    }\r\n    return supplierCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IVenueInformation, NewVenueInformation } from '../venue-information.model';\r\n\r\nexport type PartialUpdateVenueInformation = Partial<IVenueInformation> & Pick<IVenueInformation, 'id'>;\r\n\r\ntype RestOf<T extends IVenueInformation | NewVenueInformation> = Omit<T, 'openingTimeFrom' | 'openingTimeUntil'> & {\r\n  openingTimeFrom?: string | null;\r\n  openingTimeUntil?: string | null;\r\n};\r\n\r\nexport type RestVenueInformation = RestOf<IVenueInformation>;\r\n\r\nexport type NewRestVenueInformation = RestOf<NewVenueInformation>;\r\n\r\nexport type PartialUpdateRestVenueInformation = RestOf<PartialUpdateVenueInformation>;\r\n\r\nexport type EntityResponseType = HttpResponse<IVenueInformation>;\r\nexport type EntityArrayResponseType = HttpResponse<IVenueInformation[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class VenueInformationService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/venue-informations');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(venueInformation: NewVenueInformation): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(venueInformation);\r\n    return this.http\r\n      .post<RestVenueInformation>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(venueInformation: IVenueInformation): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(venueInformation);\r\n    return this.http\r\n      .put<RestVenueInformation>(`${this.resourceUrl}/${this.getVenueInformationIdentifier(venueInformation)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(venueInformation: PartialUpdateVenueInformation): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(venueInformation);\r\n    return this.http\r\n      .patch<RestVenueInformation>(`${this.resourceUrl}/${this.getVenueInformationIdentifier(venueInformation)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestVenueInformation>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestVenueInformation[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getVenueInformationIdentifier(venueInformation: Pick<IVenueInformation, 'id'>): number {\r\n    return venueInformation.id;\r\n  }\r\n\r\n  compareVenueInformation(o1: Pick<IVenueInformation, 'id'> | null, o2: Pick<IVenueInformation, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getVenueInformationIdentifier(o1) === this.getVenueInformationIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addVenueInformationToCollectionIfMissing<Type extends Pick<IVenueInformation, 'id'>>(\r\n    venueInformationCollection: Type[],\r\n    ...venueInformationsToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const venueInformations: Type[] = venueInformationsToCheck.filter(isPresent);\r\n    if (venueInformations.length > 0) {\r\n      const venueInformationCollectionIdentifiers = venueInformationCollection.map(\r\n        venueInformationItem => this.getVenueInformationIdentifier(venueInformationItem)!\r\n      );\r\n      const venueInformationsToAdd = venueInformations.filter(venueInformationItem => {\r\n        const venueInformationIdentifier = this.getVenueInformationIdentifier(venueInformationItem);\r\n        if (venueInformationCollectionIdentifiers.includes(venueInformationIdentifier)) {\r\n          return false;\r\n        }\r\n        venueInformationCollectionIdentifiers.push(venueInformationIdentifier);\r\n        return true;\r\n      });\r\n      return [...venueInformationsToAdd, ...venueInformationCollection];\r\n    }\r\n    return venueInformationCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IVenueInformation | NewVenueInformation | PartialUpdateVenueInformation>(\r\n    venueInformation: T\r\n  ): RestOf<T> {\r\n    return {\r\n      ...venueInformation,\r\n      openingTimeFrom: venueInformation.openingTimeFrom?.toJSON() ?? null,\r\n      openingTimeUntil: venueInformation.openingTimeUntil?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restVenueInformation: RestVenueInformation): IVenueInformation {\r\n    return {\r\n      ...restVenueInformation,\r\n      openingTimeFrom: restVenueInformation.openingTimeFrom ? dayjs(restVenueInformation.openingTimeFrom) : undefined,\r\n      openingTimeUntil: restVenueInformation.openingTimeUntil ? dayjs(restVenueInformation.openingTimeUntil) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestVenueInformation>): HttpResponse<IVenueInformation> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestVenueInformation[]>): HttpResponse<IVenueInformation[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SortService {\r\n  private collator = new Intl.Collator(undefined, {\r\n    numeric: true,\r\n    sensitivity: 'base',\r\n  });\r\n\r\n  public startSort(property: string, order: number): (a: any, b: any) => number {\r\n    return (a: any, b: any) => this.collator.compare(a[property], b[property]) * order;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}