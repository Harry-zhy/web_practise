{"version":3,"file":"src_main_webapp_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AAAwF;AACpB;;;;;;;;;ICG9D,0EAAiF;IAC/E;IAAA,yEAAQ;IAAA,6EAAkB;IAAA,4DAAS;IAAC,gHACtC;IAAA,4DAAM;;ADKL,MAAM,cAAc;IAYzB,YAAoB,cAA8B,EAAU,YAA0B,EAAU,MAAc;QAA1F,mBAAc,GAAd,cAAc,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAR9G,wBAAmB,GAAG,KAAK,CAAC;QAE5B,cAAS,GAAG,IAAI,qDAAS,CAAC;YACxB,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;YACvF,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;YACvF,UAAU,EAAE,IAAI,uDAAW,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;SAC7F,CAAC,CAAC;IAE8G,CAAC;IAElH,QAAQ;QACN,sDAAsD;QACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5C,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC;YAC9D,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAE;oBACvC,qEAAqE;oBACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;YACH,CAAC;YACD,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;;4EAtCU,cAAc;4GAAd,cAAc;;;;;;QCX3B,sEAAK;QACH;QAAA,yEAA2C;QACzC;QAAA,yEAAyC;QACvC;QAAA,wEAAyB;QAAA,kEAAO;QAAA,4DAAK;QACrC;QAAA,0GAEM;QACN;QAAA,2EAA4E;QAA7C,2IAAY,WAAO,IAAC;QACjD;QAAA,0EAAkB;QAChB;QAAA,4EAA6C;QAAA,oEAAQ;QAAA,4DAAQ;QAC7D;QAAA,0EASE;QACJ;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC;QAAA,wEAQE;QACJ;QAAA,4DAAM;QAEN;QAAA,2EAAwB;QACtB;QAAA,6EAAiD;QAC/C;QAAA,wEAAiH;QACjH;QAAA,wEAAM;QAAA,uEAAW;QAAA,4DAAO;QAC1B;QAAA,4DAAQ;QACV;QAAA,4DAAM;QAEN;QAAA,8EAA+D;QAAA,mEAAO;QAAA,4DAAS;QACjF;QAAA,4DAAO;QACP;QAAA,2EAAsC;QACpC;QAAA,yEAA+F;QAAA,yFAA6B;QAAA,4DAAI;QAClI;QAAA,4DAAM;QAEN;QAAA,2EAAiC;QAC/B;QAAA,wEAAM;QAAA,0FAA8B;QAAA,4DAAO;QAC3C;QAAA,yEAAqD;QAAA,kFAAsB;QAAA,4DAAI;QACjF;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QAnDuC,0DAAyB;QAAzB,yFAAyB;QAGN,0DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;;;;;;;;ACNlC;AAES;AACZ;AACO;;;AAM5C,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAHZ,kEAAY,EAAE,kEAAqB,CAAC,CAAC,qDAAW,CAAC,CAAC;mIAGjD,WAAW,mBAFP,4DAAc,aADnB,kEAAY,EAAE;;;;;;;;;;;;;;;;ACNyB;AAE5C,MAAM,WAAW,GAAU;IAChC,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,4DAAc;IACzB,IAAI,EAAE;QACJ,SAAS,EAAE,SAAS;KACrB;CACF,CAAC","sources":["./src/main/webapp/app/login/login.component.ts","./src/main/webapp/app/login/login.component.html","./src/main/webapp/app/login/login.module.ts","./src/main/webapp/app/login/login.route.ts"],"sourcesContent":["import { Component, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from 'app/login/login.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n@Component({\r\n  selector: 'jhi-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('username', { static: false })\r\n  username!: ElementRef;\r\n\r\n  authenticationError = false;\r\n\r\n  loginForm = new FormGroup({\r\n    username: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\r\n    password: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\r\n    rememberMe: new FormControl(false, { nonNullable: true, validators: [Validators.required] }),\r\n  });\r\n\r\n  constructor(private accountService: AccountService, private loginService: LoginService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    // if already authenticated then navigate to home page\r\n    this.accountService.identity().subscribe(() => {\r\n      if (this.accountService.isAuthenticated()) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.username.nativeElement.focus();\r\n  }\r\n\r\n  login(): void {\r\n    this.loginService.login(this.loginForm.getRawValue()).subscribe({\r\n      next: () => {\r\n        this.authenticationError = false;\r\n        if (!this.router.getCurrentNavigation()) {\r\n          // There were no routing during login (eg from navigationToStoredUrl)\r\n          this.router.navigate(['']);\r\n        }\r\n      },\r\n      error: () => (this.authenticationError = true),\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"d-flex justify-content-center\">\r\n    <div class=\"col-lg-6 col-md-8 col-sm-10\">\r\n      <h1 data-cy=\"loginTitle\">Sign in</h1>\r\n      <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" data-cy=\"loginError\">\r\n        <strong>Failed to sign in!</strong> Please check your credentials and try again.\r\n      </div>\r\n      <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"username-label\" for=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Your username\"\r\n            formControlName=\"username\"\r\n            #username\r\n            data-cy=\"username\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Your password\"\r\n            formControlName=\"password\"\r\n            data-cy=\"password\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-check\">\r\n          <label class=\"form-check-label\" for=\"rememberMe\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" formControlName=\"rememberMe\" />\r\n            <span>Remember me</span>\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" data-cy=\"submit\">Sign in</button>\r\n      </form>\r\n      <div class=\"mt-3 alert alert-warning\">\r\n        <a class=\"alert-link\" routerLink=\"/account/reset/request\" data-cy=\"forgetYourPasswordSelector\">Did you forget your password?</a>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\">\r\n        <span>You don't have an account yet?</span>\r\n        <a class=\"alert-link\" routerLink=\"/account/register\">Register a new account</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { LOGIN_ROUTE } from './login.route';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild([LOGIN_ROUTE])],\r\n  declarations: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","import { Route } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const LOGIN_ROUTE: Route = {\r\n  path: '',\r\n  component: LoginComponent,\r\n  data: {\r\n    pageTitle: 'Sign in',\r\n  },\r\n};\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}