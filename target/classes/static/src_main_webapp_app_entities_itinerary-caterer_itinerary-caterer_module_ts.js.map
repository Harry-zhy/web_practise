{"version":3,"file":"src_main_webapp_app_entities_itinerary-caterer_itinerary-caterer_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/itinerary-caterer/delete/itinerary-caterer-delete-dialog.component.ts","./src/main/webapp/app/entities/itinerary-caterer/delete/itinerary-caterer-delete-dialog.component.html","./src/main/webapp/app/entities/itinerary-caterer/detail/itinerary-caterer-detail.component.ts","./src/main/webapp/app/entities/itinerary-caterer/detail/itinerary-caterer-detail.component.html","./src/main/webapp/app/entities/itinerary-caterer/itinerary-caterer.module.ts","./src/main/webapp/app/entities/itinerary-caterer/list/itinerary-caterer.component.ts","./src/main/webapp/app/entities/itinerary-caterer/list/itinerary-caterer.component.html","./src/main/webapp/app/entities/itinerary-caterer/route/itinerary-caterer-routing-resolve.service.ts","./src/main/webapp/app/entities/itinerary-caterer/route/itinerary-caterer-routing.module.ts","./src/main/webapp/app/entities/itinerary-caterer/service/itinerary-caterer.service.ts","./src/main/webapp/app/entities/itinerary-caterer/update/itinerary-caterer-form.service.ts","./src/main/webapp/app/entities/itinerary-caterer/update/itinerary-caterer-update.component.ts","./src/main/webapp/app/entities/itinerary-caterer/update/itinerary-caterer-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryCaterer } from '../itinerary-caterer.model';\r\nimport { ItineraryCatererService } from '../service/itinerary-caterer.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './itinerary-caterer-delete-dialog.component.html',\r\n})\r\nexport class ItineraryCatererDeleteDialogComponent {\r\n  itineraryCaterer?: IItineraryCaterer;\r\n\r\n  constructor(protected itineraryCatererService: ItineraryCatererService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.itineraryCatererService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"itineraryCaterer\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(itineraryCaterer.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"itineraryCatererDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-itineraryCaterer-heading\">Are you sure you want to delete Itinerary Caterer {{ itineraryCaterer.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-itineraryCaterer\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IItineraryCaterer } from '../itinerary-caterer.model';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-caterer-detail',\r\n  templateUrl: './itinerary-caterer-detail.component.html',\r\n})\r\nexport class ItineraryCatererDetailComponent implements OnInit {\r\n  itineraryCaterer: IItineraryCaterer | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryCaterer }) => {\r\n      this.itineraryCaterer = itineraryCaterer;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"itineraryCaterer\">\r\n      <h2 data-cy=\"itineraryCatererDetailsHeading\"><span>Itinerary Caterer</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryCaterer.id }}</span>\r\n        </dd>\r\n        <dt><span>Caterer Name</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryCaterer.catererName }}</span>\r\n        </dd>\r\n        <dt><span>Caterer Cost</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryCaterer.catererCost }}</span>\r\n        </dd>\r\n        <dt><span>Caterer Host</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryCaterer.catererHost }}</span>\r\n        </dd>\r\n        <dt><span>Caterer Time</span></dt>\r\n        <dd>\r\n          <span>{{ itineraryCaterer.catererTime | formatMediumDatetime }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/itinerary-caterer', itineraryCaterer.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ItineraryCatererComponent } from './list/itinerary-caterer.component';\r\nimport { ItineraryCatererDetailComponent } from './detail/itinerary-caterer-detail.component';\r\nimport { ItineraryCatererUpdateComponent } from './update/itinerary-caterer-update.component';\r\nimport { ItineraryCatererDeleteDialogComponent } from './delete/itinerary-caterer-delete-dialog.component';\r\nimport { ItineraryCatererRoutingModule } from './route/itinerary-caterer-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ItineraryCatererRoutingModule],\r\n  declarations: [\r\n    ItineraryCatererComponent,\r\n    ItineraryCatererDetailComponent,\r\n    ItineraryCatererUpdateComponent,\r\n    ItineraryCatererDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class ItineraryCatererModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IItineraryCaterer } from '../itinerary-caterer.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ItineraryCatererService } from '../service/itinerary-caterer.service';\r\nimport { ItineraryCatererDeleteDialogComponent } from '../delete/itinerary-caterer-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-caterer',\r\n  templateUrl: './itinerary-caterer.component.html',\r\n})\r\nexport class ItineraryCatererComponent implements OnInit {\r\n  itineraryCaterers?: IItineraryCaterer[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected itineraryCatererService: ItineraryCatererService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IItineraryCaterer): number => this.itineraryCatererService.getItineraryCatererIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(itineraryCaterer: IItineraryCaterer): void {\r\n    const modalRef = this.modalService.open(ItineraryCatererDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.itineraryCaterer = itineraryCaterer;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.itineraryCaterers = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IItineraryCaterer[]): IItineraryCaterer[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IItineraryCaterer[] | null): IItineraryCaterer[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.itineraryCatererService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ItineraryCatererHeading\">\r\n    <span>Itinerary Caterers</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-itinerary-caterer\"\r\n        [routerLink]=\"['/itinerary-caterer/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Itinerary Caterer </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"itineraryCaterers?.length === 0\">\r\n    <span>No Itinerary Caterers found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"itineraryCaterers && itineraryCaterers.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"catererName\">\r\n            <div class=\"d-flex\">\r\n              <span>Caterer Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"catererCost\">\r\n            <div class=\"d-flex\">\r\n              <span>Caterer Cost</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"catererHost\">\r\n            <div class=\"d-flex\">\r\n              <span>Caterer Host</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"catererTime\">\r\n            <div class=\"d-flex\">\r\n              <span>Caterer Time</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let itineraryCaterer of itineraryCaterers; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/itinerary-caterer', itineraryCaterer.id, 'view']\">{{ itineraryCaterer.id }}</a>\r\n          </td>\r\n          <td>{{ itineraryCaterer.catererName }}</td>\r\n          <td>{{ itineraryCaterer.catererCost }}</td>\r\n          <td>{{ itineraryCaterer.catererHost }}</td>\r\n          <td>{{ itineraryCaterer.catererTime | formatMediumDatetime }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-caterer', itineraryCaterer.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/itinerary-caterer', itineraryCaterer.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(itineraryCaterer)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IItineraryCaterer } from '../itinerary-caterer.model';\r\nimport { ItineraryCatererService } from '../service/itinerary-caterer.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryCatererRoutingResolveService implements Resolve<IItineraryCaterer | null> {\r\n  constructor(protected service: ItineraryCatererService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IItineraryCaterer | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((itineraryCaterer: HttpResponse<IItineraryCaterer>) => {\r\n          if (itineraryCaterer.body) {\r\n            return of(itineraryCaterer.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ItineraryCatererComponent } from '../list/itinerary-caterer.component';\r\nimport { ItineraryCatererDetailComponent } from '../detail/itinerary-caterer-detail.component';\r\nimport { ItineraryCatererUpdateComponent } from '../update/itinerary-caterer-update.component';\r\nimport { ItineraryCatererRoutingResolveService } from './itinerary-caterer-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst itineraryCatererRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ItineraryCatererComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ItineraryCatererDetailComponent,\r\n    resolve: {\r\n      itineraryCaterer: ItineraryCatererRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ItineraryCatererUpdateComponent,\r\n    resolve: {\r\n      itineraryCaterer: ItineraryCatererRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ItineraryCatererUpdateComponent,\r\n    resolve: {\r\n      itineraryCaterer: ItineraryCatererRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(itineraryCatererRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ItineraryCatererRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IItineraryCaterer, NewItineraryCaterer } from '../itinerary-caterer.model';\r\n\r\nexport type PartialUpdateItineraryCaterer = Partial<IItineraryCaterer> & Pick<IItineraryCaterer, 'id'>;\r\n\r\ntype RestOf<T extends IItineraryCaterer | NewItineraryCaterer> = Omit<T, 'catererTime'> & {\r\n  catererTime?: string | null;\r\n};\r\n\r\nexport type RestItineraryCaterer = RestOf<IItineraryCaterer>;\r\n\r\nexport type NewRestItineraryCaterer = RestOf<NewItineraryCaterer>;\r\n\r\nexport type PartialUpdateRestItineraryCaterer = RestOf<PartialUpdateItineraryCaterer>;\r\n\r\nexport type EntityResponseType = HttpResponse<IItineraryCaterer>;\r\nexport type EntityArrayResponseType = HttpResponse<IItineraryCaterer[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryCatererService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/itinerary-caterers');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(itineraryCaterer: NewItineraryCaterer): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryCaterer);\r\n    return this.http\r\n      .post<RestItineraryCaterer>(this.resourceUrl, copy, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  update(itineraryCaterer: IItineraryCaterer): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryCaterer);\r\n    return this.http\r\n      .put<RestItineraryCaterer>(`${this.resourceUrl}/${this.getItineraryCatererIdentifier(itineraryCaterer)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  partialUpdate(itineraryCaterer: PartialUpdateItineraryCaterer): Observable<EntityResponseType> {\r\n    const copy = this.convertDateFromClient(itineraryCaterer);\r\n    return this.http\r\n      .patch<RestItineraryCaterer>(`${this.resourceUrl}/${this.getItineraryCatererIdentifier(itineraryCaterer)}`, copy, {\r\n        observe: 'response',\r\n      })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http\r\n      .get<RestItineraryCaterer>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n      .pipe(map(res => this.convertResponseFromServer(res)));\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http\r\n      .get<RestItineraryCaterer[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n      .pipe(map(res => this.convertResponseArrayFromServer(res)));\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getItineraryCatererIdentifier(itineraryCaterer: Pick<IItineraryCaterer, 'id'>): number {\r\n    return itineraryCaterer.id;\r\n  }\r\n\r\n  compareItineraryCaterer(o1: Pick<IItineraryCaterer, 'id'> | null, o2: Pick<IItineraryCaterer, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getItineraryCatererIdentifier(o1) === this.getItineraryCatererIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addItineraryCatererToCollectionIfMissing<Type extends Pick<IItineraryCaterer, 'id'>>(\r\n    itineraryCatererCollection: Type[],\r\n    ...itineraryCaterersToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const itineraryCaterers: Type[] = itineraryCaterersToCheck.filter(isPresent);\r\n    if (itineraryCaterers.length > 0) {\r\n      const itineraryCatererCollectionIdentifiers = itineraryCatererCollection.map(\r\n        itineraryCatererItem => this.getItineraryCatererIdentifier(itineraryCatererItem)!\r\n      );\r\n      const itineraryCaterersToAdd = itineraryCaterers.filter(itineraryCatererItem => {\r\n        const itineraryCatererIdentifier = this.getItineraryCatererIdentifier(itineraryCatererItem);\r\n        if (itineraryCatererCollectionIdentifiers.includes(itineraryCatererIdentifier)) {\r\n          return false;\r\n        }\r\n        itineraryCatererCollectionIdentifiers.push(itineraryCatererIdentifier);\r\n        return true;\r\n      });\r\n      return [...itineraryCaterersToAdd, ...itineraryCatererCollection];\r\n    }\r\n    return itineraryCatererCollection;\r\n  }\r\n\r\n  protected convertDateFromClient<T extends IItineraryCaterer | NewItineraryCaterer | PartialUpdateItineraryCaterer>(\r\n    itineraryCaterer: T\r\n  ): RestOf<T> {\r\n    return {\r\n      ...itineraryCaterer,\r\n      catererTime: itineraryCaterer.catererTime?.toJSON() ?? null,\r\n    };\r\n  }\r\n\r\n  protected convertDateFromServer(restItineraryCaterer: RestItineraryCaterer): IItineraryCaterer {\r\n    return {\r\n      ...restItineraryCaterer,\r\n      catererTime: restItineraryCaterer.catererTime ? dayjs(restItineraryCaterer.catererTime) : undefined,\r\n    };\r\n  }\r\n\r\n  protected convertResponseFromServer(res: HttpResponse<RestItineraryCaterer>): HttpResponse<IItineraryCaterer> {\r\n    return res.clone({\r\n      body: res.body ? this.convertDateFromServer(res.body) : null,\r\n    });\r\n  }\r\n\r\n  protected convertResponseArrayFromServer(res: HttpResponse<RestItineraryCaterer[]>): HttpResponse<IItineraryCaterer[]> {\r\n    return res.clone({\r\n      body: res.body ? res.body.map(item => this.convertDateFromServer(item)) : null,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { IItineraryCaterer, NewItineraryCaterer } from '../itinerary-caterer.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IItineraryCaterer for edit and NewItineraryCatererFormGroupInput for create.\r\n */\r\ntype ItineraryCatererFormGroupInput = IItineraryCaterer | PartialWithRequiredKeyOf<NewItineraryCaterer>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends IItineraryCaterer | NewItineraryCaterer> = Omit<T, 'catererTime'> & {\r\n  catererTime?: string | null;\r\n};\r\n\r\ntype ItineraryCatererFormRawValue = FormValueOf<IItineraryCaterer>;\r\n\r\ntype NewItineraryCatererFormRawValue = FormValueOf<NewItineraryCaterer>;\r\n\r\ntype ItineraryCatererFormDefaults = Pick<NewItineraryCaterer, 'id' | 'catererTime'>;\r\n\r\ntype ItineraryCatererFormGroupContent = {\r\n  id: FormControl<ItineraryCatererFormRawValue['id'] | NewItineraryCaterer['id']>;\r\n  catererName: FormControl<ItineraryCatererFormRawValue['catererName']>;\r\n  catererCost: FormControl<ItineraryCatererFormRawValue['catererCost']>;\r\n  catererHost: FormControl<ItineraryCatererFormRawValue['catererHost']>;\r\n  catererTime: FormControl<ItineraryCatererFormRawValue['catererTime']>;\r\n};\r\n\r\nexport type ItineraryCatererFormGroup = FormGroup<ItineraryCatererFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ItineraryCatererFormService {\r\n  createItineraryCatererFormGroup(itineraryCaterer: ItineraryCatererFormGroupInput = { id: null }): ItineraryCatererFormGroup {\r\n    const itineraryCatererRawValue = this.convertItineraryCatererToItineraryCatererRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryCaterer,\r\n    });\r\n    return new FormGroup<ItineraryCatererFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: itineraryCatererRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      catererName: new FormControl(itineraryCatererRawValue.catererName),\r\n      catererCost: new FormControl(itineraryCatererRawValue.catererCost),\r\n      catererHost: new FormControl(itineraryCatererRawValue.catererHost),\r\n      catererTime: new FormControl(itineraryCatererRawValue.catererTime),\r\n    });\r\n  }\r\n\r\n  getItineraryCaterer(form: ItineraryCatererFormGroup): IItineraryCaterer | NewItineraryCaterer {\r\n    return this.convertItineraryCatererRawValueToItineraryCaterer(\r\n      form.getRawValue() as ItineraryCatererFormRawValue | NewItineraryCatererFormRawValue\r\n    );\r\n  }\r\n\r\n  resetForm(form: ItineraryCatererFormGroup, itineraryCaterer: ItineraryCatererFormGroupInput): void {\r\n    const itineraryCatererRawValue = this.convertItineraryCatererToItineraryCatererRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...itineraryCaterer,\r\n    });\r\n    form.reset(\r\n      {\r\n        ...itineraryCatererRawValue,\r\n        id: { value: itineraryCatererRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ItineraryCatererFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      catererTime: currentTime,\r\n    };\r\n  }\r\n\r\n  private convertItineraryCatererRawValueToItineraryCaterer(\r\n    rawItineraryCaterer: ItineraryCatererFormRawValue | NewItineraryCatererFormRawValue\r\n  ): IItineraryCaterer | NewItineraryCaterer {\r\n    return {\r\n      ...rawItineraryCaterer,\r\n      catererTime: dayjs(rawItineraryCaterer.catererTime, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertItineraryCatererToItineraryCatererRawValue(\r\n    itineraryCaterer: IItineraryCaterer | (Partial<NewItineraryCaterer> & ItineraryCatererFormDefaults)\r\n  ): ItineraryCatererFormRawValue | PartialWithRequiredKeyOf<NewItineraryCatererFormRawValue> {\r\n    return {\r\n      ...itineraryCaterer,\r\n      catererTime: itineraryCaterer.catererTime ? itineraryCaterer.catererTime.format(DATE_TIME_FORMAT) : undefined,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ItineraryCatererFormService, ItineraryCatererFormGroup } from './itinerary-caterer-form.service';\r\nimport { IItineraryCaterer } from '../itinerary-caterer.model';\r\nimport { ItineraryCatererService } from '../service/itinerary-caterer.service';\r\n\r\n@Component({\r\n  selector: 'jhi-itinerary-caterer-update',\r\n  templateUrl: './itinerary-caterer-update.component.html',\r\n})\r\nexport class ItineraryCatererUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  itineraryCaterer: IItineraryCaterer | null = null;\r\n\r\n  editForm: ItineraryCatererFormGroup = this.itineraryCatererFormService.createItineraryCatererFormGroup();\r\n\r\n  constructor(\r\n    protected itineraryCatererService: ItineraryCatererService,\r\n    protected itineraryCatererFormService: ItineraryCatererFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ itineraryCaterer }) => {\r\n      this.itineraryCaterer = itineraryCaterer;\r\n      if (itineraryCaterer) {\r\n        this.updateForm(itineraryCaterer);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const itineraryCaterer = this.itineraryCatererFormService.getItineraryCaterer(this.editForm);\r\n    if (itineraryCaterer.id !== null) {\r\n      this.subscribeToSaveResponse(this.itineraryCatererService.update(itineraryCaterer));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.itineraryCatererService.create(itineraryCaterer));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IItineraryCaterer>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(itineraryCaterer: IItineraryCaterer): void {\r\n    this.itineraryCaterer = itineraryCaterer;\r\n    this.itineraryCatererFormService.resetForm(this.editForm, itineraryCaterer);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-itinerary-caterer-heading\" data-cy=\"ItineraryCatererCreateUpdateHeading\">Create or edit a Itinerary Caterer</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_catererName\">Caterer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"catererName\"\r\n            id=\"field_catererName\"\r\n            data-cy=\"catererName\"\r\n            formControlName=\"catererName\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_catererCost\">Caterer Cost</label>\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            name=\"catererCost\"\r\n            id=\"field_catererCost\"\r\n            data-cy=\"catererCost\"\r\n            formControlName=\"catererCost\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_catererHost\">Caterer Host</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"catererHost\"\r\n            id=\"field_catererHost\"\r\n            data-cy=\"catererHost\"\r\n            formControlName=\"catererHost\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_catererTime\">Caterer Time</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_catererTime\"\r\n              data-cy=\"catererTime\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"catererTime\"\r\n              formControlName=\"catererTime\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}