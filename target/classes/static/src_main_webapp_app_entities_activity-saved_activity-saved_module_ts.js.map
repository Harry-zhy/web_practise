{"version":3,"file":"src_main_webapp_app_entities_activity-saved_activity-saved_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/activity-saved/activity-saved.module.ts","./src/main/webapp/app/entities/activity-saved/delete/activity-saved-delete-dialog.component.ts","./src/main/webapp/app/entities/activity-saved/delete/activity-saved-delete-dialog.component.html","./src/main/webapp/app/entities/activity-saved/detail/activity-saved-detail.component.ts","./src/main/webapp/app/entities/activity-saved/detail/activity-saved-detail.component.html","./src/main/webapp/app/entities/activity-saved/list/activity-saved.component.ts","./src/main/webapp/app/entities/activity-saved/list/activity-saved.component.html","./src/main/webapp/app/entities/activity-saved/route/activity-saved-routing-resolve.service.ts","./src/main/webapp/app/entities/activity-saved/route/activity-saved-routing.module.ts","./src/main/webapp/app/entities/activity-saved/update/activity-saved-form.service.ts","./src/main/webapp/app/entities/activity-saved/update/activity-saved-update.component.ts","./src/main/webapp/app/entities/activity-saved/update/activity-saved-update.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ActivitySavedComponent } from './list/activity-saved.component';\r\nimport { ActivitySavedDetailComponent } from './detail/activity-saved-detail.component';\r\nimport { ActivitySavedUpdateComponent } from './update/activity-saved-update.component';\r\nimport { ActivitySavedDeleteDialogComponent } from './delete/activity-saved-delete-dialog.component';\r\nimport { ActivitySavedRoutingModule } from './route/activity-saved-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ActivitySavedRoutingModule],\r\n  declarations: [ActivitySavedComponent, ActivitySavedDetailComponent, ActivitySavedUpdateComponent, ActivitySavedDeleteDialogComponent],\r\n})\r\nexport class ActivitySavedModule {}\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IActivitySaved } from '../activity-saved.model';\r\nimport { ActivitySavedService } from '../service/activity-saved.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './activity-saved-delete-dialog.component.html',\r\n})\r\nexport class ActivitySavedDeleteDialogComponent {\r\n  activitySaved?: IActivitySaved;\r\n\r\n  constructor(protected activitySavedService: ActivitySavedService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.activitySavedService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"activitySaved\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(activitySaved.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"activitySavedDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-activitySaved-heading\">Are you sure you want to delete Activity Saved {{ activitySaved.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-activitySaved\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IActivitySaved } from '../activity-saved.model';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-saved-detail',\r\n  templateUrl: './activity-saved-detail.component.html',\r\n})\r\nexport class ActivitySavedDetailComponent implements OnInit {\r\n  activitySaved: IActivitySaved | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ activitySaved }) => {\r\n      this.activitySaved = activitySaved;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"activitySaved\">\r\n      <h2 data-cy=\"activitySavedDetailsHeading\"><span>Activity Saved</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ activitySaved.id }}</span>\r\n        </dd>\r\n        <dt><span>Name</span></dt>\r\n        <dd>\r\n          <span>{{ activitySaved.name }}</span>\r\n        </dd>\r\n        <dt><span>Date</span></dt>\r\n        <dd>\r\n          <span>{{ activitySaved.date | formatMediumDatetime }}</span>\r\n        </dd>\r\n        <dt><span>Company</span></dt>\r\n        <dd>\r\n          <span>{{ activitySaved.company }}</span>\r\n        </dd>\r\n        <dt><span>Event Itinerary</span></dt>\r\n        <dd>\r\n          <div *ngIf=\"activitySaved.eventItinerary\">\r\n            <a [routerLink]=\"['/event-itinerary', activitySaved.eventItinerary.id, 'view']\">{{ activitySaved.eventItinerary.id }}</a>\r\n          </div>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/activity-saved', activitySaved.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IActivitySaved } from '../activity-saved.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, ActivitySavedService } from '../service/activity-saved.service';\r\nimport { ActivitySavedDeleteDialogComponent } from '../delete/activity-saved-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-saved',\r\n  templateUrl: './activity-saved.component.html',\r\n})\r\nexport class ActivitySavedComponent implements OnInit {\r\n  activitySaveds?: IActivitySaved[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected activitySavedService: ActivitySavedService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IActivitySaved): number => this.activitySavedService.getActivitySavedIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(activitySaved: IActivitySaved): void {\r\n    const modalRef = this.modalService.open(ActivitySavedDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.activitySaved = activitySaved;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.activitySaveds = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IActivitySaved[]): IActivitySaved[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IActivitySaved[] | null): IActivitySaved[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.activitySavedService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"ActivitySavedHeading\">\r\n    <span>Activity Saveds</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-activity-saved\"\r\n        [routerLink]=\"['/activity-saved/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Activity Saved </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"activitySaveds?.length === 0\">\r\n    <span>No Activity Saveds found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"activitySaveds && activitySaveds.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"name\">\r\n            <div class=\"d-flex\">\r\n              <span>Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"date\">\r\n            <div class=\"d-flex\">\r\n              <span>Date</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"company\">\r\n            <div class=\"d-flex\">\r\n              <span>Company</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"eventItinerary.id\">\r\n            <div class=\"d-flex\">\r\n              <span>Event Itinerary</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let activitySaved of activitySaveds; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/activity-saved', activitySaved.id, 'view']\">{{ activitySaved.id }}</a>\r\n          </td>\r\n          <td>{{ activitySaved.name }}</td>\r\n          <td>{{ activitySaved.date | formatMediumDatetime }}</td>\r\n          <td>{{ activitySaved.company }}</td>\r\n          <td>\r\n            <div *ngIf=\"activitySaved.eventItinerary\">\r\n              <a [routerLink]=\"['/event-itinerary', activitySaved.eventItinerary.id, 'view']\">{{ activitySaved.eventItinerary.id }}</a>\r\n            </div>\r\n          </td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/activity-saved', activitySaved.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/activity-saved', activitySaved.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(activitySaved)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IActivitySaved } from '../activity-saved.model';\r\nimport { ActivitySavedService } from '../service/activity-saved.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivitySavedRoutingResolveService implements Resolve<IActivitySaved | null> {\r\n  constructor(protected service: ActivitySavedService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IActivitySaved | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((activitySaved: HttpResponse<IActivitySaved>) => {\r\n          if (activitySaved.body) {\r\n            return of(activitySaved.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { ActivitySavedComponent } from '../list/activity-saved.component';\r\nimport { ActivitySavedDetailComponent } from '../detail/activity-saved-detail.component';\r\nimport { ActivitySavedUpdateComponent } from '../update/activity-saved-update.component';\r\nimport { ActivitySavedRoutingResolveService } from './activity-saved-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst activitySavedRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: ActivitySavedComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: ActivitySavedDetailComponent,\r\n    resolve: {\r\n      activitySaved: ActivitySavedRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: ActivitySavedUpdateComponent,\r\n    resolve: {\r\n      activitySaved: ActivitySavedRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: ActivitySavedUpdateComponent,\r\n    resolve: {\r\n      activitySaved: ActivitySavedRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(activitySavedRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ActivitySavedRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport dayjs from 'dayjs/esm';\r\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\r\nimport { IActivitySaved, NewActivitySaved } from '../activity-saved.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IActivitySaved for edit and NewActivitySavedFormGroupInput for create.\r\n */\r\ntype ActivitySavedFormGroupInput = IActivitySaved | PartialWithRequiredKeyOf<NewActivitySaved>;\r\n\r\n/**\r\n * Type that converts some properties for forms.\r\n */\r\ntype FormValueOf<T extends IActivitySaved | NewActivitySaved> = Omit<T, 'date'> & {\r\n  date?: string | null;\r\n};\r\n\r\ntype ActivitySavedFormRawValue = FormValueOf<IActivitySaved>;\r\n\r\ntype NewActivitySavedFormRawValue = FormValueOf<NewActivitySaved>;\r\n\r\ntype ActivitySavedFormDefaults = Pick<NewActivitySaved, 'id' | 'date' | 'bookedActivities' | 'activitySelves'>;\r\n\r\ntype ActivitySavedFormGroupContent = {\r\n  id: FormControl<ActivitySavedFormRawValue['id'] | NewActivitySaved['id']>;\r\n  name: FormControl<ActivitySavedFormRawValue['name']>;\r\n  date: FormControl<ActivitySavedFormRawValue['date']>;\r\n  company: FormControl<ActivitySavedFormRawValue['company']>;\r\n  eventItinerary: FormControl<ActivitySavedFormRawValue['eventItinerary']>;\r\n  bookedActivities: FormControl<ActivitySavedFormRawValue['bookedActivities']>;\r\n  activitySelves: FormControl<ActivitySavedFormRawValue['activitySelves']>;\r\n};\r\n\r\nexport type ActivitySavedFormGroup = FormGroup<ActivitySavedFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActivitySavedFormService {\r\n  createActivitySavedFormGroup(activitySaved: ActivitySavedFormGroupInput = { id: null }): ActivitySavedFormGroup {\r\n    const activitySavedRawValue = this.convertActivitySavedToActivitySavedRawValue({\r\n      ...this.getFormDefaults(),\r\n      ...activitySaved,\r\n    });\r\n    return new FormGroup<ActivitySavedFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: activitySavedRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      name: new FormControl(activitySavedRawValue.name, {\r\n        validators: [Validators.required],\r\n      }),\r\n      date: new FormControl(activitySavedRawValue.date, {\r\n        validators: [Validators.required],\r\n      }),\r\n      company: new FormControl(activitySavedRawValue.company),\r\n      eventItinerary: new FormControl(activitySavedRawValue.eventItinerary),\r\n      bookedActivities: new FormControl(activitySavedRawValue.bookedActivities ?? []),\r\n      activitySelves: new FormControl(activitySavedRawValue.activitySelves ?? []),\r\n    });\r\n  }\r\n\r\n  getActivitySaved(form: ActivitySavedFormGroup): IActivitySaved | NewActivitySaved {\r\n    return this.convertActivitySavedRawValueToActivitySaved(form.getRawValue() as ActivitySavedFormRawValue | NewActivitySavedFormRawValue);\r\n  }\r\n\r\n  resetForm(form: ActivitySavedFormGroup, activitySaved: ActivitySavedFormGroupInput): void {\r\n    const activitySavedRawValue = this.convertActivitySavedToActivitySavedRawValue({ ...this.getFormDefaults(), ...activitySaved });\r\n    form.reset(\r\n      {\r\n        ...activitySavedRawValue,\r\n        id: { value: activitySavedRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): ActivitySavedFormDefaults {\r\n    const currentTime = dayjs();\r\n\r\n    return {\r\n      id: null,\r\n      date: currentTime,\r\n      bookedActivities: [],\r\n      activitySelves: [],\r\n    };\r\n  }\r\n\r\n  private convertActivitySavedRawValueToActivitySaved(\r\n    rawActivitySaved: ActivitySavedFormRawValue | NewActivitySavedFormRawValue\r\n  ): IActivitySaved | NewActivitySaved {\r\n    return {\r\n      ...rawActivitySaved,\r\n      date: dayjs(rawActivitySaved.date, DATE_TIME_FORMAT),\r\n    };\r\n  }\r\n\r\n  private convertActivitySavedToActivitySavedRawValue(\r\n    activitySaved: IActivitySaved | (Partial<NewActivitySaved> & ActivitySavedFormDefaults)\r\n  ): ActivitySavedFormRawValue | PartialWithRequiredKeyOf<NewActivitySavedFormRawValue> {\r\n    return {\r\n      ...activitySaved,\r\n      date: activitySaved.date ? activitySaved.date.format(DATE_TIME_FORMAT) : undefined,\r\n      bookedActivities: activitySaved.bookedActivities ?? [],\r\n      activitySelves: activitySaved.activitySelves ?? [],\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { ActivitySavedFormService, ActivitySavedFormGroup } from './activity-saved-form.service';\r\nimport { IActivitySaved } from '../activity-saved.model';\r\nimport { ActivitySavedService } from '../service/activity-saved.service';\r\nimport { IEventItinerary } from 'app/entities/event-itinerary/event-itinerary.model';\r\nimport { EventItineraryService } from 'app/entities/event-itinerary/service/event-itinerary.service';\r\n\r\n@Component({\r\n  selector: 'jhi-activity-saved-update',\r\n  templateUrl: './activity-saved-update.component.html',\r\n})\r\nexport class ActivitySavedUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  activitySaved: IActivitySaved | null = null;\r\n\r\n  eventItinerariesSharedCollection: IEventItinerary[] = [];\r\n\r\n  editForm: ActivitySavedFormGroup = this.activitySavedFormService.createActivitySavedFormGroup();\r\n\r\n  constructor(\r\n    protected activitySavedService: ActivitySavedService,\r\n    protected activitySavedFormService: ActivitySavedFormService,\r\n    protected eventItineraryService: EventItineraryService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  compareEventItinerary = (o1: IEventItinerary | null, o2: IEventItinerary | null): boolean =>\r\n    this.eventItineraryService.compareEventItinerary(o1, o2);\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ activitySaved }) => {\r\n      this.activitySaved = activitySaved;\r\n      if (activitySaved) {\r\n        this.updateForm(activitySaved);\r\n      }\r\n\r\n      this.loadRelationshipsOptions();\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const activitySaved = this.activitySavedFormService.getActivitySaved(this.editForm);\r\n    if (activitySaved.id !== null) {\r\n      this.subscribeToSaveResponse(this.activitySavedService.update(activitySaved));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.activitySavedService.create(activitySaved));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IActivitySaved>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(activitySaved: IActivitySaved): void {\r\n    this.activitySaved = activitySaved;\r\n    this.activitySavedFormService.resetForm(this.editForm, activitySaved);\r\n\r\n    this.eventItinerariesSharedCollection = this.eventItineraryService.addEventItineraryToCollectionIfMissing<IEventItinerary>(\r\n      this.eventItinerariesSharedCollection,\r\n      activitySaved.eventItinerary\r\n    );\r\n  }\r\n\r\n  protected loadRelationshipsOptions(): void {\r\n    this.eventItineraryService\r\n      .query()\r\n      .pipe(map((res: HttpResponse<IEventItinerary[]>) => res.body ?? []))\r\n      .pipe(\r\n        map((eventItineraries: IEventItinerary[]) =>\r\n          this.eventItineraryService.addEventItineraryToCollectionIfMissing<IEventItinerary>(\r\n            eventItineraries,\r\n            this.activitySaved?.eventItinerary\r\n          )\r\n        )\r\n      )\r\n      .subscribe((eventItineraries: IEventItinerary[]) => (this.eventItinerariesSharedCollection = eventItineraries));\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-activity-saved-heading\" data-cy=\"ActivitySavedCreateUpdateHeading\">Create or edit a Activity Saved</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_name\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"name\" id=\"field_name\" data-cy=\"name\" formControlName=\"name\" />\r\n          <div *ngIf=\"editForm.get('name')!.invalid && (editForm.get('name')!.dirty || editForm.get('name')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.required\"> This field is required. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_date\">Date</label>\r\n          <div class=\"d-flex\">\r\n            <input\r\n              id=\"field_date\"\r\n              data-cy=\"date\"\r\n              type=\"datetime-local\"\r\n              class=\"form-control\"\r\n              name=\"date\"\r\n              formControlName=\"date\"\r\n              placeholder=\"YYYY-MM-DD HH:mm\"\r\n            />\r\n          </div>\r\n          <div *ngIf=\"editForm.get('date')!.invalid && (editForm.get('date')!.dirty || editForm.get('date')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('date')?.errors?.required\"> This field is required. </small>\r\n            <small class=\"form-text text-danger\" [hidden]=\"!editForm.get('date')?.errors?.datetimelocal\">\r\n              This field should be a date and time.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_company\">Company</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"company\" id=\"field_company\" data-cy=\"company\" formControlName=\"company\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_eventItinerary\">Event Itinerary</label>\r\n          <select\r\n            class=\"form-control\"\r\n            id=\"field_eventItinerary\"\r\n            data-cy=\"eventItinerary\"\r\n            name=\"eventItinerary\"\r\n            formControlName=\"eventItinerary\"\r\n            [compareWith]=\"compareEventItinerary\"\r\n          >\r\n            <option [ngValue]=\"null\"></option>\r\n            <option [ngValue]=\"eventItineraryOption\" *ngFor=\"let eventItineraryOption of eventItinerariesSharedCollection\">\r\n              {{ eventItineraryOption.id }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}