{"version":3,"file":"src_main_webapp_app_entities_mock-activity-entity_mock-activity-entity_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/entities/mock-activity-entity/delete/mock-activity-entity-delete-dialog.component.ts","./src/main/webapp/app/entities/mock-activity-entity/delete/mock-activity-entity-delete-dialog.component.html","./src/main/webapp/app/entities/mock-activity-entity/detail/mock-activity-entity-detail.component.ts","./src/main/webapp/app/entities/mock-activity-entity/detail/mock-activity-entity-detail.component.html","./src/main/webapp/app/entities/mock-activity-entity/list/mock-activity-entity.component.ts","./src/main/webapp/app/entities/mock-activity-entity/list/mock-activity-entity.component.html","./src/main/webapp/app/entities/mock-activity-entity/mock-activity-entity.module.ts","./src/main/webapp/app/entities/mock-activity-entity/route/mock-activity-entity-routing-resolve.service.ts","./src/main/webapp/app/entities/mock-activity-entity/route/mock-activity-entity-routing.module.ts","./src/main/webapp/app/entities/mock-activity-entity/service/mock-activity-entity.service.ts","./src/main/webapp/app/entities/mock-activity-entity/update/mock-activity-entity-form.service.ts","./src/main/webapp/app/entities/mock-activity-entity/update/mock-activity-entity-update.component.ts","./src/main/webapp/app/entities/mock-activity-entity/update/mock-activity-entity-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IMockActivityEntity } from '../mock-activity-entity.model';\r\nimport { MockActivityEntityService } from '../service/mock-activity-entity.service';\r\nimport { ITEM_DELETED_EVENT } from 'app/config/navigation.constants';\r\n\r\n@Component({\r\n  templateUrl: './mock-activity-entity-delete-dialog.component.html',\r\n})\r\nexport class MockActivityEntityDeleteDialogComponent {\r\n  mockActivityEntity?: IMockActivityEntity;\r\n\r\n  constructor(protected mockActivityEntityService: MockActivityEntityService, protected activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: number): void {\r\n    this.mockActivityEntityService.delete(id).subscribe(() => {\r\n      this.activeModal.close(ITEM_DELETED_EVENT);\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"mockActivityEntity\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(mockActivityEntity.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" data-cy=\"mockActivityEntityDeleteDialogHeading\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n    <p id=\"jhi-delete-mockActivityEntity-heading\">Are you sure you want to delete Mock Activity Entity {{ mockActivityEntity.id }}?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button id=\"jhi-confirm-delete-mockActivityEntity\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { IMockActivityEntity } from '../mock-activity-entity.model';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-activity-entity-detail',\r\n  templateUrl: './mock-activity-entity-detail.component.html',\r\n})\r\nexport class MockActivityEntityDetailComponent implements OnInit {\r\n  mockActivityEntity: IMockActivityEntity | null = null;\r\n\r\n  constructor(protected activatedRoute: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ mockActivityEntity }) => {\r\n      this.mockActivityEntity = mockActivityEntity;\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"mockActivityEntity\">\r\n      <h2 data-cy=\"mockActivityEntityDetailsHeading\"><span>Mock Activity Entity</span></h2>\r\n\r\n      <hr />\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>ID</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.id }}</span>\r\n        </dd>\r\n        <dt><span>Name</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.name }}</span>\r\n        </dd>\r\n        <dt><span>Company Name</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.companyName }}</span>\r\n        </dd>\r\n        <dt><span>Rating</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.rating }}</span>\r\n        </dd>\r\n        <dt><span>Description</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.description }}</span>\r\n        </dd>\r\n        <dt><span>Quantity</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.quantity }}</span>\r\n        </dd>\r\n        <dt><span>Contact</span></dt>\r\n        <dd>\r\n          <span>{{ mockActivityEntity.contact }}</span>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span>\r\n      </button>\r\n\r\n      <button type=\"button\" [routerLink]=\"['/mock-activity-entity', mockActivityEntity.id, 'edit']\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span>Edit</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data, ParamMap, Router } from '@angular/router';\r\nimport { combineLatest, filter, Observable, switchMap, tap } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { IMockActivityEntity } from '../mock-activity-entity.model';\r\nimport { ASC, DESC, SORT, ITEM_DELETED_EVENT, DEFAULT_SORT_DATA } from 'app/config/navigation.constants';\r\nimport { EntityArrayResponseType, MockActivityEntityService } from '../service/mock-activity-entity.service';\r\nimport { MockActivityEntityDeleteDialogComponent } from '../delete/mock-activity-entity-delete-dialog.component';\r\nimport { SortService } from 'app/shared/sort/sort.service';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-activity-entity',\r\n  templateUrl: './mock-activity-entity.component.html',\r\n})\r\nexport class MockActivityEntityComponent implements OnInit {\r\n  mockActivityEntities?: IMockActivityEntity[];\r\n  isLoading = false;\r\n\r\n  predicate = 'id';\r\n  ascending = true;\r\n\r\n  constructor(\r\n    protected mockActivityEntityService: MockActivityEntityService,\r\n    protected activatedRoute: ActivatedRoute,\r\n    public router: Router,\r\n    protected sortService: SortService,\r\n    protected modalService: NgbModal\r\n  ) {}\r\n\r\n  trackId = (_index: number, item: IMockActivityEntity): number => this.mockActivityEntityService.getMockActivityEntityIdentifier(item);\r\n\r\n  ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  delete(mockActivityEntity: IMockActivityEntity): void {\r\n    const modalRef = this.modalService.open(MockActivityEntityDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.mockActivityEntity = mockActivityEntity;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed\r\n      .pipe(\r\n        filter(reason => reason === ITEM_DELETED_EVENT),\r\n        switchMap(() => this.loadFromBackendWithRouteInformations())\r\n      )\r\n      .subscribe({\r\n        next: (res: EntityArrayResponseType) => {\r\n          this.onResponseSuccess(res);\r\n        },\r\n      });\r\n  }\r\n\r\n  load(): void {\r\n    this.loadFromBackendWithRouteInformations().subscribe({\r\n      next: (res: EntityArrayResponseType) => {\r\n        this.onResponseSuccess(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  navigateToWithComponentValues(): void {\r\n    this.handleNavigation(this.predicate, this.ascending);\r\n  }\r\n\r\n  protected loadFromBackendWithRouteInformations(): Observable<EntityArrayResponseType> {\r\n    return combineLatest([this.activatedRoute.queryParamMap, this.activatedRoute.data]).pipe(\r\n      tap(([params, data]) => this.fillComponentAttributeFromRoute(params, data)),\r\n      switchMap(() => this.queryBackend(this.predicate, this.ascending))\r\n    );\r\n  }\r\n\r\n  protected fillComponentAttributeFromRoute(params: ParamMap, data: Data): void {\r\n    const sort = (params.get(SORT) ?? data[DEFAULT_SORT_DATA]).split(',');\r\n    this.predicate = sort[0];\r\n    this.ascending = sort[1] === ASC;\r\n  }\r\n\r\n  protected onResponseSuccess(response: EntityArrayResponseType): void {\r\n    const dataFromBody = this.fillComponentAttributesFromResponseBody(response.body);\r\n    this.mockActivityEntities = this.refineData(dataFromBody);\r\n  }\r\n\r\n  protected refineData(data: IMockActivityEntity[]): IMockActivityEntity[] {\r\n    return data.sort(this.sortService.startSort(this.predicate, this.ascending ? 1 : -1));\r\n  }\r\n\r\n  protected fillComponentAttributesFromResponseBody(data: IMockActivityEntity[] | null): IMockActivityEntity[] {\r\n    return data ?? [];\r\n  }\r\n\r\n  protected queryBackend(predicate?: string, ascending?: boolean): Observable<EntityArrayResponseType> {\r\n    this.isLoading = true;\r\n    const queryObject = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n    return this.mockActivityEntityService.query(queryObject).pipe(tap(() => (this.isLoading = false)));\r\n  }\r\n\r\n  protected handleNavigation(predicate?: string, ascending?: boolean): void {\r\n    const queryParamsObj = {\r\n      sort: this.getSortQueryParam(predicate, ascending),\r\n    };\r\n\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: queryParamsObj,\r\n    });\r\n  }\r\n\r\n  protected getSortQueryParam(predicate = this.predicate, ascending = this.ascending): string[] {\r\n    const ascendingQueryParam = ascending ? ASC : DESC;\r\n    if (predicate === '') {\r\n      return [];\r\n    } else {\r\n      return [predicate + ',' + ascendingQueryParam];\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <h2 id=\"page-heading\" data-cy=\"MockActivityEntityHeading\">\r\n    <span>Mock Activity Entities</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info me-2\" (click)=\"load()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh list</span>\r\n      </button>\r\n\r\n      <button\r\n        id=\"jh-create-entity\"\r\n        data-cy=\"entityCreateButton\"\r\n        class=\"btn btn-primary jh-create-entity create-mock-activity-entity\"\r\n        [routerLink]=\"['/mock-activity-entity/new']\"\r\n      >\r\n        <fa-icon icon=\"plus\"></fa-icon>\r\n        <span> Create a new Mock Activity Entity </span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"mockActivityEntities?.length === 0\">\r\n    <span>No Mock Activity Entities found</span>\r\n  </div>\r\n\r\n  <div class=\"table-responsive table-entities\" id=\"entities\" *ngIf=\"mockActivityEntities && mockActivityEntities.length > 0\">\r\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"navigateToWithComponentValues()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <div class=\"d-flex\">\r\n              <span>ID</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"name\">\r\n            <div class=\"d-flex\">\r\n              <span>Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"companyName\">\r\n            <div class=\"d-flex\">\r\n              <span>Company Name</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"rating\">\r\n            <div class=\"d-flex\">\r\n              <span>Rating</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"description\">\r\n            <div class=\"d-flex\">\r\n              <span>Description</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"quantity\">\r\n            <div class=\"d-flex\">\r\n              <span>Quantity</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"contact\">\r\n            <div class=\"d-flex\">\r\n              <span>Contact</span>\r\n              <fa-icon class=\"p-1\" icon=\"sort\"></fa-icon>\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let mockActivityEntity of mockActivityEntities; trackBy: trackId\" data-cy=\"entityTable\">\r\n          <td>\r\n            <a [routerLink]=\"['/mock-activity-entity', mockActivityEntity.id, 'view']\">{{ mockActivityEntity.id }}</a>\r\n          </td>\r\n          <td>{{ mockActivityEntity.name }}</td>\r\n          <td>{{ mockActivityEntity.companyName }}</td>\r\n          <td>{{ mockActivityEntity.rating }}</td>\r\n          <td>{{ mockActivityEntity.description }}</td>\r\n          <td>{{ mockActivityEntity.quantity }}</td>\r\n          <td>{{ mockActivityEntity.contact }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/mock-activity-entity', mockActivityEntity.id, 'view']\"\r\n                class=\"btn btn-info btn-sm\"\r\n                data-cy=\"entityDetailsButton\"\r\n              >\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                [routerLink]=\"['/mock-activity-entity', mockActivityEntity.id, 'edit']\"\r\n                class=\"btn btn-primary btn-sm\"\r\n                data-cy=\"entityEditButton\"\r\n              >\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" (click)=\"delete(mockActivityEntity)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MockActivityEntityComponent } from './list/mock-activity-entity.component';\r\nimport { MockActivityEntityDetailComponent } from './detail/mock-activity-entity-detail.component';\r\nimport { MockActivityEntityUpdateComponent } from './update/mock-activity-entity-update.component';\r\nimport { MockActivityEntityDeleteDialogComponent } from './delete/mock-activity-entity-delete-dialog.component';\r\nimport { MockActivityEntityRoutingModule } from './route/mock-activity-entity-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, MockActivityEntityRoutingModule],\r\n  declarations: [\r\n    MockActivityEntityComponent,\r\n    MockActivityEntityDetailComponent,\r\n    MockActivityEntityUpdateComponent,\r\n    MockActivityEntityDeleteDialogComponent,\r\n  ],\r\n})\r\nexport class MockActivityEntityModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { IMockActivityEntity } from '../mock-activity-entity.model';\r\nimport { MockActivityEntityService } from '../service/mock-activity-entity.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockActivityEntityRoutingResolveService implements Resolve<IMockActivityEntity | null> {\r\n  constructor(protected service: MockActivityEntityService, protected router: Router) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IMockActivityEntity | null | never> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id).pipe(\r\n        mergeMap((mockActivityEntity: HttpResponse<IMockActivityEntity>) => {\r\n          if (mockActivityEntity.body) {\r\n            return of(mockActivityEntity.body);\r\n          } else {\r\n            this.router.navigate(['404']);\r\n            return EMPTY;\r\n          }\r\n        })\r\n      );\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\nimport { MockActivityEntityComponent } from '../list/mock-activity-entity.component';\r\nimport { MockActivityEntityDetailComponent } from '../detail/mock-activity-entity-detail.component';\r\nimport { MockActivityEntityUpdateComponent } from '../update/mock-activity-entity-update.component';\r\nimport { MockActivityEntityRoutingResolveService } from './mock-activity-entity-routing-resolve.service';\r\nimport { ASC } from 'app/config/navigation.constants';\r\n\r\nconst mockActivityEntityRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: MockActivityEntityComponent,\r\n    data: {\r\n      defaultSort: 'id,' + ASC,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: MockActivityEntityDetailComponent,\r\n    resolve: {\r\n      mockActivityEntity: MockActivityEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: MockActivityEntityUpdateComponent,\r\n    resolve: {\r\n      mockActivityEntity: MockActivityEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: MockActivityEntityUpdateComponent,\r\n    resolve: {\r\n      mockActivityEntity: MockActivityEntityRoutingResolveService,\r\n    },\r\n    canActivate: [UserRouteAccessService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(mockActivityEntityRoute)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MockActivityEntityRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isPresent } from 'app/core/util/operators';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { IMockActivityEntity, NewMockActivityEntity } from '../mock-activity-entity.model';\r\n\r\nexport type PartialUpdateMockActivityEntity = Partial<IMockActivityEntity> & Pick<IMockActivityEntity, 'id'>;\r\n\r\nexport type EntityResponseType = HttpResponse<IMockActivityEntity>;\r\nexport type EntityArrayResponseType = HttpResponse<IMockActivityEntity[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockActivityEntityService {\r\n  protected resourceUrl = this.applicationConfigService.getEndpointFor('api/mock-activity-entities');\r\n\r\n  constructor(protected http: HttpClient, protected applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(mockActivityEntity: NewMockActivityEntity): Observable<EntityResponseType> {\r\n    return this.http.post<IMockActivityEntity>(this.resourceUrl, mockActivityEntity, { observe: 'response' });\r\n  }\r\n\r\n  update(mockActivityEntity: IMockActivityEntity): Observable<EntityResponseType> {\r\n    return this.http.put<IMockActivityEntity>(\r\n      `${this.resourceUrl}/${this.getMockActivityEntityIdentifier(mockActivityEntity)}`,\r\n      mockActivityEntity,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  partialUpdate(mockActivityEntity: PartialUpdateMockActivityEntity): Observable<EntityResponseType> {\r\n    return this.http.patch<IMockActivityEntity>(\r\n      `${this.resourceUrl}/${this.getMockActivityEntityIdentifier(mockActivityEntity)}`,\r\n      mockActivityEntity,\r\n      { observe: 'response' }\r\n    );\r\n  }\r\n\r\n  find(id: number): Observable<EntityResponseType> {\r\n    return this.http.get<IMockActivityEntity>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  query(req?: any): Observable<EntityArrayResponseType> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IMockActivityEntity[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: number): Observable<HttpResponse<{}>> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n  }\r\n\r\n  getMockActivityEntityIdentifier(mockActivityEntity: Pick<IMockActivityEntity, 'id'>): number {\r\n    return mockActivityEntity.id;\r\n  }\r\n\r\n  compareMockActivityEntity(o1: Pick<IMockActivityEntity, 'id'> | null, o2: Pick<IMockActivityEntity, 'id'> | null): boolean {\r\n    return o1 && o2 ? this.getMockActivityEntityIdentifier(o1) === this.getMockActivityEntityIdentifier(o2) : o1 === o2;\r\n  }\r\n\r\n  addMockActivityEntityToCollectionIfMissing<Type extends Pick<IMockActivityEntity, 'id'>>(\r\n    mockActivityEntityCollection: Type[],\r\n    ...mockActivityEntitiesToCheck: (Type | null | undefined)[]\r\n  ): Type[] {\r\n    const mockActivityEntities: Type[] = mockActivityEntitiesToCheck.filter(isPresent);\r\n    if (mockActivityEntities.length > 0) {\r\n      const mockActivityEntityCollectionIdentifiers = mockActivityEntityCollection.map(\r\n        mockActivityEntityItem => this.getMockActivityEntityIdentifier(mockActivityEntityItem)!\r\n      );\r\n      const mockActivityEntitiesToAdd = mockActivityEntities.filter(mockActivityEntityItem => {\r\n        const mockActivityEntityIdentifier = this.getMockActivityEntityIdentifier(mockActivityEntityItem);\r\n        if (mockActivityEntityCollectionIdentifiers.includes(mockActivityEntityIdentifier)) {\r\n          return false;\r\n        }\r\n        mockActivityEntityCollectionIdentifiers.push(mockActivityEntityIdentifier);\r\n        return true;\r\n      });\r\n      return [...mockActivityEntitiesToAdd, ...mockActivityEntityCollection];\r\n    }\r\n    return mockActivityEntityCollection;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { IMockActivityEntity, NewMockActivityEntity } from '../mock-activity-entity.model';\r\n\r\n/**\r\n * A partial Type with required key is used as form input.\r\n */\r\ntype PartialWithRequiredKeyOf<T extends { id: unknown }> = Partial<Omit<T, 'id'>> & { id: T['id'] };\r\n\r\n/**\r\n * Type for createFormGroup and resetForm argument.\r\n * It accepts IMockActivityEntity for edit and NewMockActivityEntityFormGroupInput for create.\r\n */\r\ntype MockActivityEntityFormGroupInput = IMockActivityEntity | PartialWithRequiredKeyOf<NewMockActivityEntity>;\r\n\r\ntype MockActivityEntityFormDefaults = Pick<NewMockActivityEntity, 'id'>;\r\n\r\ntype MockActivityEntityFormGroupContent = {\r\n  id: FormControl<IMockActivityEntity['id'] | NewMockActivityEntity['id']>;\r\n  name: FormControl<IMockActivityEntity['name']>;\r\n  companyName: FormControl<IMockActivityEntity['companyName']>;\r\n  rating: FormControl<IMockActivityEntity['rating']>;\r\n  description: FormControl<IMockActivityEntity['description']>;\r\n  quantity: FormControl<IMockActivityEntity['quantity']>;\r\n  contact: FormControl<IMockActivityEntity['contact']>;\r\n};\r\n\r\nexport type MockActivityEntityFormGroup = FormGroup<MockActivityEntityFormGroupContent>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MockActivityEntityFormService {\r\n  createMockActivityEntityFormGroup(mockActivityEntity: MockActivityEntityFormGroupInput = { id: null }): MockActivityEntityFormGroup {\r\n    const mockActivityEntityRawValue = {\r\n      ...this.getFormDefaults(),\r\n      ...mockActivityEntity,\r\n    };\r\n    return new FormGroup<MockActivityEntityFormGroupContent>({\r\n      id: new FormControl(\r\n        { value: mockActivityEntityRawValue.id, disabled: true },\r\n        {\r\n          nonNullable: true,\r\n          validators: [Validators.required],\r\n        }\r\n      ),\r\n      name: new FormControl(mockActivityEntityRawValue.name),\r\n      companyName: new FormControl(mockActivityEntityRawValue.companyName),\r\n      rating: new FormControl(mockActivityEntityRawValue.rating, {\r\n        validators: [Validators.required, Validators.min(0), Validators.max(5)],\r\n      }),\r\n      description: new FormControl(mockActivityEntityRawValue.description),\r\n      quantity: new FormControl(mockActivityEntityRawValue.quantity),\r\n      contact: new FormControl(mockActivityEntityRawValue.contact),\r\n    });\r\n  }\r\n\r\n  getMockActivityEntity(form: MockActivityEntityFormGroup): IMockActivityEntity | NewMockActivityEntity {\r\n    return form.getRawValue() as IMockActivityEntity | NewMockActivityEntity;\r\n  }\r\n\r\n  resetForm(form: MockActivityEntityFormGroup, mockActivityEntity: MockActivityEntityFormGroupInput): void {\r\n    const mockActivityEntityRawValue = { ...this.getFormDefaults(), ...mockActivityEntity };\r\n    form.reset(\r\n      {\r\n        ...mockActivityEntityRawValue,\r\n        id: { value: mockActivityEntityRawValue.id, disabled: true },\r\n      } as any /* cast to workaround https://github.com/angular/angular/issues/46458 */\r\n    );\r\n  }\r\n\r\n  private getFormDefaults(): MockActivityEntityFormDefaults {\r\n    return {\r\n      id: null,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { MockActivityEntityFormService, MockActivityEntityFormGroup } from './mock-activity-entity-form.service';\r\nimport { IMockActivityEntity } from '../mock-activity-entity.model';\r\nimport { MockActivityEntityService } from '../service/mock-activity-entity.service';\r\n\r\n@Component({\r\n  selector: 'jhi-mock-activity-entity-update',\r\n  templateUrl: './mock-activity-entity-update.component.html',\r\n})\r\nexport class MockActivityEntityUpdateComponent implements OnInit {\r\n  isSaving = false;\r\n  mockActivityEntity: IMockActivityEntity | null = null;\r\n\r\n  editForm: MockActivityEntityFormGroup = this.mockActivityEntityFormService.createMockActivityEntityFormGroup();\r\n\r\n  constructor(\r\n    protected mockActivityEntityService: MockActivityEntityService,\r\n    protected mockActivityEntityFormService: MockActivityEntityFormService,\r\n    protected activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ mockActivityEntity }) => {\r\n      this.mockActivityEntity = mockActivityEntity;\r\n      if (mockActivityEntity) {\r\n        this.updateForm(mockActivityEntity);\r\n      }\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const mockActivityEntity = this.mockActivityEntityFormService.getMockActivityEntity(this.editForm);\r\n    if (mockActivityEntity.id !== null) {\r\n      this.subscribeToSaveResponse(this.mockActivityEntityService.update(mockActivityEntity));\r\n    } else {\r\n      this.subscribeToSaveResponse(this.mockActivityEntityService.create(mockActivityEntity));\r\n    }\r\n  }\r\n\r\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IMockActivityEntity>>): void {\r\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  protected onSaveSuccess(): void {\r\n    this.previousState();\r\n  }\r\n\r\n  protected onSaveError(): void {\r\n    // Api for inheritance.\r\n  }\r\n\r\n  protected onSaveFinalize(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  protected updateForm(mockActivityEntity: IMockActivityEntity): void {\r\n    this.mockActivityEntity = mockActivityEntity;\r\n    this.mockActivityEntityFormService.resetForm(this.editForm, mockActivityEntity);\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"jhi-mock-activity-entity-heading\" data-cy=\"MockActivityEntityCreateUpdateHeading\">Create or edit a Mock Activity Entity</h2>\r\n\r\n      <div>\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"row mb-3\" *ngIf=\"editForm.controls.id.value !== null\">\r\n          <label class=\"form-label\" for=\"field_id\">ID</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_name\">Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"name\" id=\"field_name\" data-cy=\"name\" formControlName=\"name\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_companyName\">Company Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"companyName\"\r\n            id=\"field_companyName\"\r\n            data-cy=\"companyName\"\r\n            formControlName=\"companyName\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_rating\">Rating</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"rating\" id=\"field_rating\" data-cy=\"rating\" formControlName=\"rating\" />\r\n          <div *ngIf=\"editForm.get('rating')!.invalid && (editForm.get('rating')!.dirty || editForm.get('rating')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.required\"> This field is required. </small>\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.min\"> This field should be at least 0. </small>\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('rating')?.errors?.max\"> This field cannot be more than 5. </small>\r\n            <small class=\"form-text text-danger\" [hidden]=\"!editForm.get('rating')?.errors?.number\"> This field should be a number. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_description\">Description</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"description\"\r\n            id=\"field_description\"\r\n            data-cy=\"description\"\r\n            formControlName=\"description\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_quantity\">Quantity</label>\r\n          <input type=\"number\" class=\"form-control\" name=\"quantity\" id=\"field_quantity\" data-cy=\"quantity\" formControlName=\"quantity\" />\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label class=\"form-label\" for=\"field_contact\">Contact</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"contact\" id=\"field_contact\" data-cy=\"contact\" formControlName=\"contact\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"button\" id=\"cancel-save\" data-cy=\"entityCreateCancelButton\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          id=\"save-entity\"\r\n          data-cy=\"entityCreateSaveButton\"\r\n          [disabled]=\"editForm.invalid || isSaving\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}